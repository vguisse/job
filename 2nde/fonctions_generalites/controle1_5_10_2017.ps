%!PS-Adobe-2.0
%%Creator: dvips(k) 5.995 Copyright 2015 Radical Eye Software
%%Title: controle1_5_10_2017.dvi
%%CreationDate: Fri Oct  6 08:56:47 2017
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: SFRM1095 SFBX1095 CMMI10 CMR8 MSAM10 MSBM10 CMR10
%%+ CMSY10 CMEX10 SFTI1095 SFRM0800 SFRM0900 CMMI9 SFRM0600 SFRM0500
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o controle1_5_10_2017.ps
%+ controle1_5_10_2017.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.10.06:0856
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/07/31
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-circ.pro 0 0
%!
% $Id: pst-circ.pro 3 2007-12-23 16:23:22Z herbert $
%
% PostScript prologue for pst-circ.tex.
% version 0.01 2007-03-23 (hv)
% For distribution, see pstricks.tex.
%
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def 
/ZeroEq { abs 1E-10 lt } bind def /EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub } bind def
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
  { pop pop pop 0 0 }
  {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
  }
  ifelse  } bind def
% END pst-circ.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% PostScript header file pst-text.pro
% Version 1.0, 2005-11-29 (hv)
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def

%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint

    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-3dplot.pro 0 0
%% $Id: pst-3dplot.pro 882 2014-02-01 13:12:37Z herbert $
%%
%% This is file `pst-3dplot.pro',
%%
%% IMPORTANT NOTICE:
%%
%% Package `pst-3dplot.tex'
%%
%% Herbert Voss <voss _at_ PSTricks.de>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% DESCRIPTION:
%%   `pst-3dplot' is a PSTricks package to draw 3d curves and graphical objects
%%
%%
%% version 0.32 / 2014-02-01  Herbert Voss <hvoss _at_ tug.org>
%% with contributions of Darrell Lamm <darrell.lamm _at_ gtri.gatech.edu<
%%            
%
/tx@3DPlotDict 200 dict def
tx@3DPlotDict begin
%
/printDot { gsave 2 copy 2 0 360 arc fill stroke grestore } def
%
/saveCoor { 
  dzUnit mul /z ED
  dyUnit mul /y ED
  dxUnit mul /x ED
} def
%
/3Dto2D { % true or false on stack
  { RotatePoint } if
  1 { %  dummy loop, will run only 1 time, allows exit 
    coorType 0 le {                                               % the default |
      /x2D x leftHanded not { neg } if Alpha cos mul y Alpha sin mul add def %  /\  co system
      /y2D x leftHanded { neg } if Alpha sin mul y Alpha cos mul add neg Beta sin mul z Beta cos mul add def
      exit } if
    coorType 1 le { 
      /x2D y x Alpha 90 sub sin mul sub def  %  |/_  co system, no shortened x axis
      /y2D z x Alpha 90 sub cos mul sub def 
      exit } if
    coorType 2 le { % coorType |/_ with a 1/sqrt(2) shortend x-axis and 135 degrees 
      /x2D y x 0.5 mul sub def
      /y2D z x 0.5 mul sub def 
      exit } if
    coorType 3 le { % coorType |/_ with a 1/sqrt(2) shortend x-axis and 135 degrees 
      /x2D y x -0.5 mul sub def
      /y2D z x -0.5 mul sub def 
      exit } if
    coorType 4 le { % Normalbild in Trimetrie Skalierung so, dass coorType2
       /x2D x -0.5 mul y 1 mul add def
       /y2D x -0.5 mul y -0.25 mul add z 1 mul add def
       exit } if
    coorType 5 le { % coorType |/_ with a 1/2 shortend x-axis and 135 degrees 
      /x2D x z 0.5 mul Alpha cos mul add def
      /y2D y z 0.5 mul Alpha sin mul add def 
      exit } if
    coorType 6 le { % coorType |/_ with a 1/2 shortend x-axis and 135 degrees and z into the front
      /x2D y x -0.559 mul Alpha cos mul add def
      /y2D z x -0.559 mul Alpha sin mul add def 
      exit } if
  } repeat
} def
/ConvertTo2D { true 3Dto2D } def
/ConvertTo2DWithoutRotating { false 3Dto2D } def
%
/Conv3D2D { /z ED /y ED /x ED ConvertTo2D x2D y2D } def
%
/ConvertToCartesian {
  /latitude exch def
  /longitude exch def
  /Radius exch def
  1 { %  dummy loop, will run only 1 time, allows exit
    SphericalCoorType 0 le {                                               % the default |
     /z { Radius latitude sin mul } def
     /x { Radius longitude cos mul latitude cos mul } def
     /y { Radius longitude sin mul latitude cos mul } def
      exit } if
    SphericalCoorType 2 le {
     /z { Radius longitude cos mul } def
     /x { Radius longitude sin mul latitude cos mul} def
     /y { Radius longitude sin mul latitude sin mul } def
      exit } if
  } repeat
} def
%
/ConvCylToCartesian { % r phi h -> x y z
  3 1 roll			% h r phi
  /Phi ED
  /Radius ED			% h->z on stack
  Radius Phi cos mul exch 	% x z
  Radius Phi sin mul exch	% x y z
} def
%
/SphericalTo2D {
  x y z ConvertToCartesian ConvertTo2D
} def
%
/CylinderTo2D { %  r phi h
  x y z ConvCylToCartesian ConvertTo2D
} def
%
/convertStackTo2D {
  counttomark
  /n ED /n3 n 3 div cvi def
  n3 {
    n -3 roll
    SphericalCoor { ConvertToCartesian } { saveCoor } ifelse
    ConvertTo2D
    x2D xUnit y2D yUnit
    /n n 1 sub def
  } repeat
} def
%
% the angle in the parameter equation for an ellipse is not proportional to the real angle!
% phi=atan(b*tan(angle)/a)+floor(angle/180+0.5)*180
%
/getPhi { % on stack: vecA vecB angle 
  3 dict begin
  /angle exch def /vecB exch def /vecA exch def
  angle cvi 90 mod 0 eq { angle } { vecA angle tan mul vecB atan 
  angle 180 div .5 add floor 180 mul add } ifelse 
  end
} def
%
/RotSet (set ) def
%
/eulerRotation false def
% Matrix multiplication procedure
/matmul {

  /M@tMulDict 20 dict def
  M@tMulDict begin
  /m2 ED
  /m1 ED
  m1 dup length 2 sub 2 getinterval aload pop
  /col1max ED
  /row1max ED
  m2 dup length 2 sub 2 getinterval aload pop
  /col2max ED
  /row2max ED
  /m3 row1max col2max mul 2 add array def
  m3 dup length 2 sub row1max col2max 2 array astore putinterval
  0 1 row1max 1 sub {
   /row ED
   0 1 col2max 1 sub {
    /col ED
    /sum 0 def
    0 1 col1max 1 sub{
    /rowcol ED
    sum
    m1 row col1max mul rowcol add get
    m2 rowcol col2max mul col add get
    mul add 
    /sum ED
    } for
    m3 row col2max mul col add sum put
   } for
  } for
  m3
  end % end of M@tMulDict

} def
%
/SetMQuaternion {

  /MnewTOold 11 array def

  /Qu@ternionDict 30 dict def
  Qu@ternionDict begin

  /normRotVec  xRotVec yRotVec zRotVec 3 array astore VecNorm  def
  normRotVec 0 gt
  {/xRotVecNorm xRotVec normRotVec div def
   /yRotVecNorm yRotVec normRotVec div def
   /zRotVecNorm zRotVec normRotVec div def
   RotAngle}
  {/xRotVecNorm 1 def
   /yRotVecNorm 0 def
   /zRotVecNorm 0 def 
   0} ifelse

  2 div dup
  /q0 exch cos def
      sin dup dup
  /q1 exch xRotVecNorm mul def
  /q2 exch yRotVecNorm mul def
  /q3 exch zRotVecNorm mul def

  /q0q0 q0 q0 mul def
  /q0q1 q0 q1 mul def
  /q0q2 q0 q2 mul def
  /q0q3 q0 q3 mul def

  /q1q1 q1 q1 mul def
  /q1q2 q1 q2 mul def
  /q1q3 q1 q3 mul def

  /q2q2 q2 q2 mul def
  /q2q3 q2 q3 mul def

  /q3q3 q3 q3 mul def

  MnewTOold 0 q0q0 q1q1 add q2q2 sub q3q3 sub put
  MnewTOold 1 q1q2 q0q3 sub 2 mul put
  MnewTOold 2 q1q3 q0q2 add 2 mul put

  MnewTOold 3 q1q2 q0q3 add 2 mul put
  MnewTOold 4 q0q0 q1q1 sub q2q2 add q3q3 sub put
  MnewTOold 5 q2q3 q0q1 sub 2 mul put

  MnewTOold 6 q1q3 q0q2 sub 2 mul put
  MnewTOold 7 q2q3 q0q1 add 2 mul put
  MnewTOold 8 q0q0 q1q1 sub q2q2 sub q3q3 add put

  MnewTOold 9 3 put
  MnewTOold 10 3 put

  end % end of Qu@ternionDict

} def
%
/SetMxyz {
  1.0 0.0 0.0  0.0 1.0 0.0  0.0 0.0 1.0  3 3  11 array astore /MnewTOold ED
  RotSequence cvx exec % Now create a new MnewTOold using xyz, etc.
} def
%
/ConcatMQuaternion {
  MnewTOold % Push onto stack
  SetMQuaternion % Uses [xyz]RotVec and RotAngle to make MnewToOld 
  MnewTOold matmul /MnewTOold ED
} def
%
/ConcatMxyz {
  MnewTOold % Push onto stack
  SetMxyz % Uses RotX, etc. to set MnewTOold 
  MnewTOold matmul /MnewTOold ED
} def
%
/RotatePoint{
  MnewTOold x y z  3 1  5 array astore matmul
  0 3 getinterval aload pop 
  /z ED 
  /y ED 
  /x ED 
} def
%
/makeMoldTOnew {
  /MoldTOnew 11 array def
  MoldTOnew 0 MnewTOold 0 get put
  MoldTOnew 1 MnewTOold 3 get put
  MoldTOnew 2 MnewTOold 6 get put
  MoldTOnew 3 MnewTOold 1 get put
  MoldTOnew 4 MnewTOold 4 get put
  MoldTOnew 5 MnewTOold 7 get put
  MoldTOnew 6 MnewTOold 2 get put
  MoldTOnew 7 MnewTOold 5 get put
  MoldTOnew 8 MnewTOold 8 get put
  MoldTOnew 9               3 put
  MoldTOnew 10              3 put
} def
%
/RotXaxis { 
  eulerRotation 
  {1 0 0}
  {makeMoldTOnew MoldTOnew  1 0 0  3 1  5 array astore matmul
   0 3 getinterval aload pop} ifelse
  /zRotVec ED
  /yRotVec ED
  /xRotVec ED
  /RotAngle RotX def
  ConcatMQuaternion
} def
/RotYaxis { 
  eulerRotation 
  {0 1 0}
  {makeMoldTOnew MoldTOnew  0 1 0  3 1  5 array astore matmul
   0 3 getinterval aload pop} ifelse
  /zRotVec ED
  /yRotVec ED
  /xRotVec ED
  /RotAngle RotY def
  ConcatMQuaternion
} def
/RotZaxis { 
  eulerRotation 
  {0 0 1}
  {makeMoldTOnew MoldTOnew  0 0 1  3 1  5 array astore matmul
   0 3 getinterval aload pop} ifelse
  /zRotVec ED
  /yRotVec ED
  /xRotVec ED
  /RotAngle RotZ def
  ConcatMQuaternion
} def
/xyz { RotXaxis RotYaxis RotZaxis } def
/yxz { RotYaxis RotXaxis RotZaxis } def
/yzx { RotYaxis RotZaxis RotXaxis } def
/xzy { RotXaxis RotZaxis RotYaxis } def
/zxy { RotZaxis RotXaxis RotYaxis } def
/zyx { RotZaxis RotYaxis RotXaxis } def
/quaternion { } def % Null
%
/VecNorm { 0 exch { dup mul add } forall sqrt } def
%
/UnitVec {			% on stack is [a]; returns a vector with [a][a]/|a|=1 
  dup VecNorm /norm ED
  norm 0 lt {/norm 0 def} if
  { norm div } forall 3 array astore } def
%
/AxB {				% on the stack are the two vectors [a][b]
    aload pop /b3 ED /b2 ED /b1 ED
    aload pop /a3 ED /a2 ED /a1 ED
    a2 b3 mul a3 b2 mul sub
    a3 b1 mul a1 b3 mul sub
    a1 b2 mul a2 b1 mul sub
    3 array astore } def
%
/AaddB {			% on the stack are the two vectors [a][b]
    aload pop /b3 ED /b2 ED /b1 ED
    aload pop /a3 ED /a2 ED /a1 ED
    a1 b1 add a2 b2 add a3 b3 add
    3 array astore } def
%
/AmulC {			% on stack is [a] and c; returns [a] mul c
    /factor ED { factor mul } forall 3 array astore } def
%
%
/setColorLight { % expects 7 values on stack C M Y K xL yL zL
% les rayons de lumi�re
  xLight dup mul yLight dup mul zLight dup mul add add sqrt /NormeLight ED
% the color values
  /K ED
  /Yellow ED
  /Magenta ED
  /Cyan ED
} def
%
/facetteSphere {
  newpath
  /Xpoint Rsphere theta cos mul phi cos mul CX add def
  /Ypoint Rsphere theta sin mul phi cos mul CY add def
  /Zpoint Rsphere phi sin mul CZ add def
  Xpoint Ypoint Zpoint tx@3Ddict begin ProjThreeD end moveto
  theta 1 theta increment add {%
    /theta1 ED
    /Xpoint Rsphere theta1 cos mul phi cos mul CX add def
    /Ypoint Rsphere theta1 sin mul phi cos mul CY add def
    /Zpoint Rsphere phi sin mul CZ add def
    Xpoint Ypoint Zpoint tx@3Ddict begin ProjThreeD end  lineto
  } for
  phi 1 phi increment add {
    /phi1 ED
    /Xpoint Rsphere theta increment add cos mul phi1 cos mul CX add def
    /Ypoint Rsphere theta increment add sin mul phi1 cos mul CY add def
    /Zpoint Rsphere phi1 sin mul CZ add def
    Xpoint Ypoint Zpoint tx@3Ddict begin ProjThreeD end lineto
  } for
  theta increment add -1 theta {%
    /theta1 ED
    /Xpoint Rsphere theta1 cos mul phi increment add cos mul CX add def
    /Ypoint Rsphere theta1 sin mul phi increment add cos mul CY add def
    /Zpoint Rsphere phi increment add sin mul CZ add def
    Xpoint Ypoint Zpoint tx@3Ddict begin ProjThreeD end lineto
  } for
  phi increment add -1 phi {
    /phi1 ED
    /Xpoint Rsphere theta cos mul phi1 cos mul CX add def
    /Ypoint Rsphere theta sin mul phi1 cos mul CY add def
    /Zpoint Rsphere phi1 sin mul CZ add def
    Xpoint Ypoint Zpoint tx@3Ddict begin ProjThreeD end lineto
  } for
  closepath 
} def
%
/MaillageSphere { 
% on stack must be x y z Radius increment C M Y K 
  setColorLight
  /increment ED
  /Rsphere ED
  /CZ ED
  /CY ED
  /CX ED
  /StartTheta 0 def
  /condition { PSfacetteSphere 0 ge } def
  -90 increment 90 increment sub {%
    /phi ED
    StartTheta increment 360 StartTheta add increment sub {%
      /theta ED
      % Centre de la facette
      /Xpoint Rsphere theta increment 2 div add cos mul phi increment 2 div add cos mul CX add def
      /Ypoint Rsphere theta increment 2 div add sin mul phi increment 2 div add cos mul CY add def
      /Zpoint Rsphere phi increment 2 div add sin mul CZ add def
      % normale a la facette
      /nXfacette Xpoint CX sub def
      /nYfacette Ypoint CY sub def
      /nZfacette Zpoint CZ sub def
      % test de visibilite
      /PSfacetteSphere 
        vX nXfacette mul
        vY nYfacette mul add
        vZ nZfacette mul add
      def
      condition {
        gsave
        facetteSphere
        /cosV { 1 xLight nXfacette mul
          yLight nYfacette mul
          zLight nZfacette mul
          add add
          NormeLight
          nXfacette dup mul
          nYfacette dup mul
          nZfacette dup mul
          add add sqrt mul div sub } bind def
        Cyan cosV mul Magenta cosV mul Yellow cosV mul K cosV mul setcmykcolor fill 
	grestore
%	0 setgray
        showgrid { facetteSphere stroke } if
      } if 
    } for
    % /StartTheta StartTheta increment 2 div add def
  } for
} def
%
%---------------------- Cylinder ---------------------------
%
/PlanCoupeCylinder { %
  /TableauxPoints [
    0 1 359 { 
      /phi ED 
      [ Radius phi Height ConvCyl2d ] % on décrit le cercle
    } for
  ] def
  newpath
  TableauxPoints 0 get aload pop moveto
  1 1 359 { TableauxPoints exch get aload pop lineto } for
  closepath
} def
%
/facetteCylinder { % 
    newpath
    Radius phi currentHeight ConvCyl2d moveto
    phi 1 phi dAngle add  { % loop variable on stack
      Radius exch currentHeight ConvCyl2d lineto        
    } for
    phi dAngle add -1 phi { %	fill dHeight
      Radius exch currentHeight dHeight add ConvCyl2d lineto 
    } for
    closepath
  } def % facette
%
/MaillageCylinder { % on stack true or false for saving values
    { setColorLight  % expects 4 values on stack C M Y K
      /dHeight ED /dAngle ED /Height ED /Radius ED
      /CZ ED /CY ED /CX ED } if
%     
    0 dHeight Height dHeight sub {
      /currentHeight ED
      0 dAngle 360 dAngle sub {
        /phi ED
% Normal vector of the center
        /nXfacetteCylinder Radius phi dAngle 2 div add cos mul CX add def 
        /nYfacetteCylinder Radius phi dAngle 2 div add sin mul CY add def 
        /nZfacetteCylinder currentHeight dHeight 2 div add CZ add def 
        /NormeN 
          nXfacetteCylinder dup mul
          nYfacetteCylinder dup mul
          nZfacetteCylinder dup mul
          add add sqrt def
        NormeN 0 eq { /NormeN 1e-10 def } if
% test de visibilité
       /PSfacetteCylinder 
    	    vX nXfacetteCylinder mul
            vY nYfacetteCylinder mul add
            vZ nZfacetteCylinder mul add def
       condition {
         facetteCylinder
         /cosV 
	   1 xLight nXfacetteCylinder mul
           yLight nYfacetteCylinder mul
           zLight nZfacetteCylinder mul
           add add
	   NormeLight NormeN mul div sub def
         Cyan Magenta Yellow K
         cosV mul 4 1 roll cosV mul 4 1 roll 
	 cosV dup mul mul 4 1 roll cosV dup mul mul 4 1 roll
         setcmykcolor fill
          showgrid { 
            0 setgray
            facetteCylinder % drawing the segments
            stroke } if
       } if
     } for
    } for
} def
%
%------------------------ Cylinder type II -----------------------
%
/MoveTo { Conv3D2D moveto } def
/LineTo { Conv3D2D lineto } def

/IIIDEllipse { % x y z rA rB startAngle endAngle Wedge
  /dAngle 1 def
  /isWedge ED
  /endAngle ED
  /startAngle ED
  /radiusB ED
  /radiusA ED
  startAngle cos radiusA mul startAngle sin radiusB mul 0 
  isWedge { 0 0 moveto LineTo }{ MoveTo } ifelse
  /Angle startAngle def
  startAngle dAngle endAngle {
    /Angle ED
    Angle cos radiusA mul Angle sin radiusB mul 0 LineTo  
  } for
  isWedge { 0 0 lineto } if
} def

/IIIDCircle { % x y z r startAngle endAngle Wedge
  7 3 roll % startAngle endAngle Wedge x y z r
  dup      % startAngle endAngle Wedge x y z r r
  8 -3 roll
  IIIDEllipse 
} def

/IIIDWedge { % x y z r startAngle endAngle
  true IIIDCircle
} def

/IIIDCylinder {% x y z r h start end wedge
  /isWedge ED
  /increment ED
  /endAngle ED
  /startAngle ED
  /height ED
  /radius ED
  startAngle increment endAngle {
    /Angle ED
    radius Angle 0 ConvCylToCartesian MoveTo  
    radius Angle height ConvCylToCartesian LineTo  
  } for
  stroke
} def
%
%---------------------- Box ---------------------------
%
/PlanCoupeBox { % x y z
  /TableauxPoints [
      [ CX CY CZ Height add ConvBox2d ] % top or bottom
      [ CX CY Depth add CZ Height add ConvBox2d ]
      [ CX Width add CY Depth add CZ Height add ConvBox2d ] 
      [ CX Width add CY CZ Height add ConvBox2d ] 
      [ CX CY CZ Height add ConvBox2d ] % bottom
    ] def
    newpath
    TableauxPoints 0 get aload pop moveto
    0 1 3 {
      TableauxPoints exch get aload pop
      lineto } for
    closepath
} def
%
/facetteBox { % 
    newpath
    dup
    1 eq { % back
      CX CY CZ ConvBox2d moveto
      CX CY CZ Height add ConvBox2d lineto
      CX Width add CY CZ Height add ConvBox2d lineto
      CX Width add CY CZ ConvBox2d lineto
      CX CY CZ ConvBox2d lineto
    } if
    dup
    2 eq { % right
      CX CY CZ ConvBox2d moveto
      CX CY CZ Height add ConvBox2d lineto
      CX CY Depth add CZ Height add ConvBox2d lineto
      CX CY Depth add CZ ConvBox2d lineto
      CX CY CZ ConvBox2d lineto
    } if
    dup
    3 eq { % left
      CX Width add CY CZ ConvBox2d moveto
      CX Width add CY Depth add CZ ConvBox2d lineto
      CX Width add CY Depth add CZ Height add ConvBox2d lineto
      CX Width add CY CZ Height add ConvBox2d lineto
      CX Width add CY CZ ConvBox2d lineto
    } if
    4 eq { % front
      CX CY Depth add CZ ConvBox2d moveto
      CX CY Depth add CZ Height add ConvBox2d lineto
      CX Width add CY Depth add CZ Height add ConvBox2d lineto
      CX Width add CY Depth add CZ ConvBox2d lineto
      CX CY Depth add CZ ConvBox2d lineto
    } if
    closepath
  } def % facette
%
/TestPlane { % on stack x y z of the plane center and # of plane
  /nZfacetteBox ED /nYfacetteBox ED /nXfacetteBox ED
  /Plane ED
  /NormeN 
    nXfacetteBox dup mul
    nYfacetteBox dup mul
    nZfacetteBox dup mul
    add add sqrt def
  NormeN 0 eq { /NormeN 1e-10 def } if
% test de visibilite
  /PSfacetteBox 
    vX nXfacetteBox mul
    vY nYfacetteBox mul add
    vZ nZfacetteBox mul add def
  condition {
    Plane facetteBox
         /cosV 
	   1 xLight nXfacetteBox mul
           yLight nYfacetteBox mul
           zLight nZfacetteBox mul
           add add
	   NormeLight NormeN mul div sub def
         Cyan Magenta Yellow K
         cosV mul 4 1 roll cosV mul 4 1 roll 
	 cosV dup mul mul 4 1 roll cosV dup mul mul 4 1 roll
         setcmykcolor fill
         0 setgray
         Plane facetteBox % drawing the segments
         stroke
       } if
} def
%
/MaillageBox { % on stack true or false for saving values
    { setColorLight  % expects 4 values on stack C M Y K 
      /Depth ED /Height ED /Width ED
      /CZ ED /CY ED /CX ED } if
%
% Normal vector of the box center
  /PlaneSet [
    [ Width 2 div CX add 
      CY 
      Height 2 div CZ add ] % normal back
    [ CX 
      Depth 2 div CY add 
      Height 2 div CZ add ] % normal right
    [ Width CX add 
      Depth 2 div CY add 
      Height 2 div CZ add ] % normal left
    [ Width 2 div CX add 
      Depth CY add 
      Height 2 div CZ add ] % normal front
  ] def
  PlaneSequence length 0 eq { % user defined?
    Alpha abs cvi 360 mod /iAlpha ED
    iAlpha 90 lt { [ 1 2 3 4 ]  
      }{ iAlpha 180 lt { [ 2 4 1 3 ]  
        }{ iAlpha 270 lt { [ 3 4 1 2 ] }{ [ 3 1 4 2] } ifelse } ifelse } ifelse 
  }{ PlaneSequence } ifelse 
  { dup 1 sub PlaneSet exch get aload pop TestPlane } forall
} def
%
%--------------------------- Paraboloid -----------------------------
/PlanCoupeParaboloid {
    /Z height store
    /V {Z sqrt} bind def
    /TableauxPoints [
      0 1 359 { 
        /U ED [ U U Z V calculate2DPoint ] % on decrit le cercle
      } for
    ] def
    newpath
    TableauxPoints 0 get aload pop moveto
    0 1 359 {
      /compteur ED
      TableauxPoints compteur get aload pop
      lineto } for
    closepath
} def
%
/facetteParaboloid{
    newpath
    U U Z V calculate2DPoint moveto
    U 1 U increment add  {%
      /U1 ED
      U1 U1 Z V calculate2DPoint lineto
    } for
    Z pas10 Z pas add pas10 add{
      /Z1 ED
      /V {Z1 sqrt} bind def
      U1 U1 Z1 V calculate2DPoint lineto
    } for
    U increment add -1 U {%
      /U2 ED
      U2 U2 Z pas add V calculate2DPoint lineto
    } for
    Z pas add pas10 sub pas10 neg Z pas10 sub {
      /Z2 ED
      /V Z2 abs sqrt def
      U U Z2 V calculate2DPoint lineto
    } for
    closepath
} def % facette
%
/MaillageParaboloid {
  % on stack true or false for saving values
    { setColorLight  % expects 7 values on stack C M Y K xL yL zL 
%      /CZ ED /CY ED /CX ED 
    } if    
    0 pas height pas sub {%
      /Z ED
      /V Z sqrt def
      0 increment 360 increment sub {%
        /U ED
% Centre de la facette
        /Ucentre U increment 2 div add def
        /Vcentre Z pas 2 div add sqrt def
% normale à la facette
        /nXfacetteParaboloid 2 Vcentre dup mul mul Ucentre cos mul radius mul def
        /nYfacetteParaboloid 2 Vcentre dup mul mul Ucentre sin mul radius mul def
        /nZfacetteParaboloid Vcentre neg radius dup mul mul def
        /NormeN {
          nXfacetteParaboloid dup mul
          nYfacetteParaboloid dup mul
          nZfacetteParaboloid dup mul
          add add sqrt} bind def
        NormeN 0 eq {/NormeN 1e-10 def} if
% test de visibilit�
       /PSfacetteParaboloid vX nXfacetteParaboloid mul
                  vY nYfacetteParaboloid mul add
                  vZ nZfacetteParaboloid mul add def
       condition {
         facetteParaboloid
         /cosV 1 xLight nXfacetteParaboloid mul
           yLight nYfacetteParaboloid mul
           zLight nZfacetteParaboloid mul
           add add
           NormeLight
           NormeN mul div sub def
         Cyan Magenta Yellow K  
         cosV mul 4 1 roll cosV mul 4 1 roll cosV dup mul mul 4 1 roll cosV dup mul mul 4 1 roll
         setcmykcolor fill
         showgrid {
           0 setgray
           facetteParaboloid
           stroke } if
       } if
     } for
    } for
} def
%
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
% u -> e_u with |e_u|=1 
/vector-unit { 1 dict begin
  dup vector-length 1 exch div 
  vector-scale
  end 
} def
%
% u v -> u+v
/vector-add { 1 dict begin
  /v exch def
  [ exch
  0 	     	% u i
  exch { 	% i u[i]
    v 		% i u[i] v
    2 index get add 	% i u[i]+v[i]
    exch 1 add	% i
  } forall
  pop
  ]
  end 
} def
%
% u v -> u-v
/vector-sub { 1 dict begin
  /v exch def
  [ exch
  0 	     	% u i
  exch {	% i u[i]
    v 		% i u[i] v
    2 index get sub 	% i u[i]+v[i]
    exch 1 add	% i
  } forall
  pop
  ]
end } def
%
% [v] c -> [c.v]
/vector-scale { 1 dict begin
  /c exch def
  [ exch
  { 		% s i u[i]
    c mul	% s i u[i] v 
  } forall
  ]
  end } def
%
%
% [u] [v] -> [u x v]
/vector-prod { %% x1 y1 z1 x2 y2 z2
6 dict begin
  aload pop 
  /zp exch def /yp exch def /xp exch def
  aload pop 
  /z exch def /y exch def /x exch def
  [ y zp mul z yp mul sub
   z xp mul x zp mul sub
   x yp mul y xp mul sub ]
end
} def
%
% [u] [v] -> u.v
/vector-mul { %% x1 y1 z1 x2 y2 z2
6 dict begin
  aload pop 
  /zp exch def /yp exch def /xp exch def
  aload pop 
  /z exch def /y exch def /x exch def
  x xp mul y yp mul add z zp mul add
end
} def
%
% [x y z ... ] -> r
% watch out for overflow
/vector-length { 1 dict begin
dup
% find maximum entry
/max 0 def
{ % max 
  abs dup max gt {
    % if abs gt max
    /max exch def
  } {
    pop
  } ifelse
} forall
max 0 ne {
  0 exch 
  {  % 0 v[i]
    max div dup mul add
  } forall
  sqrt
  max mul
} {
  pop 0
} ifelse
end } def
%
end % tx@3DPlotDict
%

%%EndProcSet
%%BeginProcSet: cm-super-t1.enc 0 0
% This file is generated from `T1uni.map' and `glyphlist.txt', `gl-other.txt'
%
% LIGKERN hyphen hyphen =: endash ; endash hyphen =: emdash ;
% LIGKERN quoteleft quoteleft =: quotedblleft ;
% LIGKERN quoteright quoteright =: quotedblright ;
% LIGKERN comma comma =: quotedblbase ; less less =: guillemotleft ;
% LIGKERN greater greater =: guillemotright ;
% LIGKERN f f =: ff ; f i =: fi ; f l =: fl ; ff i =: ffi ; ff l =: ffl ;
%
% LIGKERN space {} * ; * {} space ; zero {} * ; * {} zero ;
% LIGKERN one {} * ; * {} one ; two {} * ; * {} two ;
% LIGKERN three {} * ; * {} three ; four {} * ; * {} four ;
% LIGKERN five {} * ; * {} five ; six {} * ; * {} six ;
% LIGKERN seven {} * ; * {} seven ; eight {} * ; * {} eight ;
% LIGKERN nine {} * ; * {} nine ;
%
/T1Encoding [
% 0x00
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
% 0x10
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/afii61664
/perthousandzero % PERTHOUSAND ZERO
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
% 0x20
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
% 0x30
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
% 0x40
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
% 0x50
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
% 0x60
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
% 0x70
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt % HANGING HYPHEN
% 0x80
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
% 0x90
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcommaaccent
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
% 0xA0
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
% 0xB0
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcommaaccent
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
% 0xC0
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
% 0xD0
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/SS % Germandbls
% 0xE0
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
% 0xF0
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls % or /germandbls.alt
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: SFRM0500
%!FontType1-1.0: SFRM0500 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm0500, tcrm0500, larm0500, lbrm0500, lcrm0500, rxrm0500.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM0500 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-211 -338 1855 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B57DF626EBF73D2779A4A6B462AE6E5
19E586FAA5A6FAE6CB4E80BF6467C89E1A97B49A0DDC14A3C22BD6C9A3110530
C714F12B664F8DAF49E7EE5F26A1FB39FB391585B92BC143D8AF7A1DC5828C76
FB778196507F6ED7110C374F71354507E7B06D427EEF72F711D631F86C25A6E9
925C4A2DB93AE4A00FA4C9F8545D5FA4D703130E507323519A405812AA421062
F49FB854B4609D87682D0A4FD3B9BA33B2D25091F366D87C885FF732408D32E7
A8BA8B0AA51E0F13E4A5D7A70070334AE4261F477CA6C958111FAD37A7CCD04C
D8B0CF660CC25C087D9E1DBA8EE4869EA22FC33ED6FBC968D1118422FD213F9E
4DE09D8C881B27E43B46DCCE9E2B7ACCF0FDEC76071C638EFF82CE7140F47015
4989DF72FF5A863C785657413A01FE7D0DFF6DC80111DC022CF3C7527269AE6A
F593356351153315F1988814C6020B73672E573048FAE6EB62D784B055001E59
A19509258D7B194D57F0E5C4C0C66AA7D5D54CBC4EF9E83155978E48D01D7913
0B2216D451B4DD0F51D39287B08047EF0E9553C125E00405138078F533037280
E0EC61CC1EE3A221A96B274A72BDF0145BBD8B3D09DF401AD597FA7054E3D205
CB3483DA30F2E7621DF3F48D108A7B3BF2A4430768F7659478256AACA9317F9B
6FADB8E3E012D2C4CCD0F2BB85BA167774D5427CAEEEC17BC8F508F68AD5FC5B
2DC4ECB93EB18BA078A9E36AE927969D3A3EBCE1CB7C2B075980B6451E534D7D
CCD715EA30EB367961CAAB8E76DB1F329200080EB3739412659725A3E249253C
DB26244CC83A330497398495C3F136A9D6E4007AB3389389663FD46D6C80AFCD
03982615563EDE73605E33B1B0E519149240530C52B8625B50A2FF63325FA62E
76F7045FB77AAA45F1574B9906B4610C16C97EC9C93466FDEF6E41E9FDC847D1
A7FC826CAAA9635A1EF10072593939005142F61809EF49D7C198B927C02675A6
44607478F4AD4A152257FEB6408B04B6111B3770D9D1DD0C6F1D8704969CDE7A
32F8996CA03F642F5DE54E2165E1C01475DC2246C43CA286DFFAC5241015ADA7
C4102DC0100066E14908970B9AF8824628ECBD9E1B33C6C9938B78FC9BB1C805
C51E1A2D296BDF05D292D7F6A5A0FD2C18FEAF1789725CFECEDEADDC389C4E45
02E25B0157964C8C345D7E6DA459F54F6389004BAC5C0B20E59EBC6082FABE25
08EB3B634F656E97438F9B605DE828384EE2B34DA8A960546C2561D8D361B90C
51E0AE25212A52D33A08EC17ACC7C22E06A5D8CC3DF457371FA658A4199ABB5C
36BC967DF98C1B17BA3FF405113F17918DCD399C09D0247C1E89B2A8AEC59A3F
41E2C8B7EAB6BB88A9B65C3239687800B071E8288F1AF5732A5CBFA7B37FE708
5A248C48DD46D9E3EFF6B81FCE5D4EB1EE731847FD050AF0DAF55832342BA4F4
C57BDFE6BD073F2376E44EB97829968ECA4E0CD35AFEAC7BD6A32BC116541818
5517A1647196843C73BA9936EC80F2EA98312A5C98E09AD2608D90FEC2F9C91D
A0DA7DCFA33037F0AC991A9DD7600501B8FBE59C3473A98E06CB648B4023F2CB
37BE4BB58A45B8254495F8862BF21628708C98A1BE0C561289A53EF90CFA34AA
413033CE7E801178FB40CC4C99AEBE3DE4FC7EFC356B116DF444345D2257519F
57701F342C67EE05B6CF0DD8E708355C1C943C64A342974F55929C016914FB7A
7A67BA19A5203A1307077F0AFA72B96B0B3EC6D56DCBEF94CACC518F0BE22F7A
4FB3160C473D6FAEBE77B7C26E175FA8BFA903F17D2E82FFDAE1815203AF1817
30646B5D6DBF430CA68F4D7C4E85BFB031118204544114DB706ED110AD9A3D6C
4DD4BB3ADF55F4C8A7A78AEB5FA4F7B5DFACEE6C0BACA04D67CE6AA4FC6A36A4
51D0FD937886D7ED3F2062C0FB9A5D0825799255C227DA8E320393D40D424BF3
38B19E557E7569F71564F9F0AFEE25C1A759DA7778FFDC310045D90F4FE52124
18FB7458F9F802B57CA0AD1F684ABB249E78366D8E93741A4C1DDC130BB9BC15
6B0C58E975ED942B90C3F2A2248AB6F7FEF0CD8565633F5DCD87B85D0A115382
74C0D8C990211592D6E928AB406DD16C34DCB5DA798010F76FBCD75D6A7CE8BE
5F379D4F36BB1C767358540F98BF7D57FF8C1AF8DEE7C73D21C2EF9BD7AE2C42
4487F79655D92248B512D9929C11653117028A379FA4FA423357628EF05A78F0
3E841887B573C1E165BED94D287C207BA3F799C17BC7F3F368481E40E7D90C33
77584790AF5A8BAD5D996B17F661A123DADFE470069F7013E01828CA3AC791B3
E711F632DCA511240C983B8B3B8E8722B6BEB22D924C473B761DF8EE5BE6E225
C55598BF343A1ADD11CC8733097E65D13F6BB15B45EE9FA75E2CB94C1A948C0A
BBC923323D0B916DDB44D87F7D1CDC27F190B06EC053D712A357E0278A662AD8
9AA556940CD03A5FF4FD9A23AD79BC8009820A9D7383C10F6D914B3E7579E2F0
B5F37758FBFA88369D0D839104DFABE61F4165003FE0BF9544104C2EC5D14C6D
6F457B27AB65FB6F4D40CF9C87603B19F9797120E085C7CFD4CB4274661D9582
E5FDB1DD55C759AB853D4D34771107241DAC1CC3C79A0297F6DF3BA3AE165B61
A169DDC1D006E0430BE615AB2FF44267E134D247848CEE1E283DDBB86F73CE3B
2BEFF110EE0ECC75DF4C6A6A60BE9217C24EEBE0664BCF7008167142F43F542A
62302F8B19C8F7EAE85DAF68E64FB833A5974BBDFA70075A9225B77090FC9326
8653647AD018CA5CDFE029D8155A5A7ACA7B8E12BE8D69A606AD38CCA4777312
BFFB53CC6B32D9D1999D6F90C4DE9D83A08479F3B1E8BCAB1777DA41064F94F1
7A4A1CDC8A14AC86DDAAD910A85D696075B4940B1A7B34C917A08DDDE97D9180
ABA37D2F0405FC314AB457EF84B4CECF5EAF0CAE799CF60EF34EFA245CAA37BA
AC0808FB10315C8C9921B93DE67BA8284879F4F04FAACAD5A17F4876EDAD14C8
CB198BD619F1A79AC9BA473EAC1F8833BB78C3FFAD3540FBA36F93A61934E1CF
5B7E82D101232199F55A7B7AE3B2E133600207A256EAAF61837F4FF9CD6ADA9F
CE763F5B08FBD9B21015A30F225CBB2943FA3190CDB5540149643F2111724889
6FF4EFCCADBDDA29266D238C0E7C800E6370D991BA34676B1A70623D392CB0EE
8C3C475D1F6C5B5B693C1636F456752CA3558BBEEF59606354AD4A6B726C0217
6DF5BA5CFD52ED66918F252747423C9CBDAD9C30E93DB25E64475C22E7952000
36D413CD4316990557A0939B5898ABF14DAFE4CA4729D00D1EFA7E5634C3A62D
8EF40B50A4BC239EBF7CE7DC5954D296971E82F7FC211E1453F193546B3770F1
6E220FD46131B9284891417B54A81B08B5FBE6351C775A2DDEB0E51DD0653924
281F254FC8A135610C3E75682D78AF7495280A63EDFBAC9B5BF5782FF48C2D74
EAF5D173E21ED3A05C0EA432E2C24278F117B96D7FE4D08DD68520C497F7A926
BCFAEFA92D1CBBC4316EB29842A5B72E5EEA0ADA703FCDA71B2F50D23E951D0A
44BCEDA0C4DFE275CF792CB4A48732764C40C3D3D82375A008D38C74B161A800
FDF831DFCBF3816C7A095D6428F6F7703414FACDD0993E654E72028390CE59D5
4CE093669C3DB6EE90E0B7F99B119BFEE6396B6774BA82FCF824907A72492DAB
15267C8AEA3DDB4F8630A197E3928C065A6FE954E0D7B0170E534514F0ED765E
061CDA069C1E3F320297C88600C780BEE103DB6AEAF89AA0764E82699DB69609
A7338FB728B56B22AB4C01AF82C6F9B862736D867D927772803D958E753D56BF
C9D8253D20088D1BEFA38DFED64A77674F90A9F3F62014A59159D28EEB4D51A4
4A20C66E1E7122697E62E4081D5F3269C7B3A2D6F721B4CFBDCCFF1BED30BEAB
890DD6AA6884E9E9D47FEFD2A56C190EB19152E4BBD8688E4C9A891D0DD80A5A
0A010BB54447D16BDC35C3C99A0E81FF6818FD14B9B6D41977104AF92A6EE793
8A36C5AB76A2C1916EE599ECF4C17DCD009BB3E4643D86013978168A44BB075A
EF26AFE67BE1FFC2494E24654B5E115722E3B5982BE1764272E0FB99EF0AFE13
427E0DA7F980561DBCC7D54B1BC1B9AE91F963E1D24F98564BAEEF44057BB151
3B35426515EF069361DB7C74C2741D9AF99C49F1983579A30AAEF5E15A6FBBE4
04E2A5F6FF00D2F662E0281571BF1C68259BB1BB88E64BDFAE35CD5CB56A2DB5
4D66BCF146221638F93B29D9C8157577A68A5F2CE7F880A790CF14F063989F89
7208B777EEBA748F9AB9DBD5C10FF066BB0EC4074A2DA43ACC97D99BFAEFDDE1
D0925A7FE71C5274F606E14399F08141D420A7D171A9B3E3D90FC8F92372C3B9
A5870687BED3ED7AF5D06C23A7B1C0E16F3CAB1FB5AB70C92F1612E2F772E07C
D09E659C502D14884FF032A43817CA2E536208334DBD171724B230CA49F791EE
579801427AEF43834A3B623EE6308B33F865E8C78B03968BBA4454A33CFE7FD1
96C9254B8BF11D2B34E35FB98512F623FCEC960B719C2782BFAC149C2B09B300
D6160544414C1DD16FA343AF06E69BC7A08968C003BE208BA9E14636CDAAAEC4
637F79AB9DC059743E29682DD31C0FDC5CC3CB53564F6C9A4F501AF32FD8B5ED
051965873AB4645892A3032BC29C75B5EB6BD4FEAC5861C134080D23859E7387
C3DE9CDC3C861F663350128178A0F79A5709E2329EC6DA179601DF1348D48E48
DA348FF3D27AE53C4969D45645ECC6B9F49BD4A184B3382D3A886F004E48A987
EE709E7035146CE7A0CF9A7C0270756637C9164C8BE877F68AA9E2F664ADBB2E
BB66CA1F213288B26BC8C3F9F7FB125AC97F952DC8AE62B71C808693E66B33D3
D4FC762880B58DF85D424834BA1C6DF455ED32F1F0507C8A3C1DB49E91FA1C9A
B928680D1AD07D3EF483F53DC1B160F8FF4303657821DA8DD730ADC01B50442E
1D185BC7B7EB89B0BE25E4F55C5C24DB390B13DBE7D33AD85C6A571BDAC4894B
14F43474EE4926E8364817A93238298A7B3D35098C598D327946F9ED347BD4F6
2C080F64B13447815E4D981E86115348F7DF8AC6A6DA34EC67A258CEABC579A8
D808BC1EA137B0B90AA85F50C05092185419AED71F564A1BF732626B6F55C3A0
330EF7F951F35799BCCDFFD73A427A9126A9C76A0F271AB557F5843880349CC7
4C43983B339B1EA97AD1C68EF86B3E728A64E1981F850C02C6203908C0654DE0
42864A1D5AA1A65E99D52BFF26DECBFA3045942DB1C919E0F94FDB120D3E4457
B5539A862C93438EFB345385822D64823A847925921AFF53D813DEA19E78AC27
73FEB605160EB3DF0B3720FF466970B965D0B7381EA1EF0C659555F2ABDC3514
7244290871E8BBCAE2F14C00E308EC630E1834E79873EA3E0B47C3BA14ED403D
1B4EDF0DDEC217336872019CDDD59A11625B6145E19406AEBDAEDB312FAD2335
1607F5C2E7376B7BF06321F4026AADC6D64CD35D907DAE068C755A7D1DCA5D48
CFF737309F2E9FA31C38F01FA6BB929B7D278093A86569A5B8F4E042D1D0DDF0
A49EBEAD19B2E9AE89A65C8FBDBCEE4B905F7287E6C611570C24D2A0C36363A3
B14E0B3ABB8D46C6F19AE914D2E24A596DEF299974B6663A378FFED6820FC2DA
47824B074160730C679A92C31D142D351E0CF1930E183234691D8F4A42F9E8F6
C860B3946D7234C576598D4E425E6518A0A417E91959C5DE9801962A3BE03CA9
6739519E7A5869F375D093E9AE3222D5F968D86FC7A693AE4E6C759D18AF2E68
790A8E264C5D5AD12936EEE94C0B84C00BA51943AFC404C14A6C0F3441CA7080
04964E4582DD5AD548FBC8B92B77DC4B6728315266C0F5724566F3E762FFDD47
92FF706E24C0AF00B88701B58B320496C39BA298EB0A601A94455B2C7E12DBE0
0E91A3DD4CCEB0A322FD7439737BD2D74C3C61C61824D1958E865287A1E57EEB
7775397289B13F3C0D9D6EA10F4F780FBCB40BCF801B371219D3DB3DC55E8808
1808AB8A493BC71FB09322F90D66F6E93AE2E85FB09BD22ED68D1B820362A2C1
AC63C86005E73CF431DBB9F635E4DF768464B5C4BE9E6EE4B257902439CBEA07
91D3A0EE0A5316F9F40FA453C1DD1425A15C887DDC3F530456D6A5598E3E30DA
B29449B42D35388C5D8C26368388DE70920B952D1CBC5E40D2852E8CD9AC588E
2A6C31619F14354D70BACE74C2054B2F0E172C8AC420BD0DA240FDB4B1999A40
DF241505A22078A72A2F43816BDAE9EEB9CBFCD3A83D7C6B5CE58381EF6581C6
ABFCC594D28303614722B9A33EED607789103D70FC7B0C7DD2C8A89BFF0EF2AA
58DA3662289FF129CA0A23C0112734EA50A82A3E16D6B490673720FD6A84B18D
97C290149984F17FD443934CBC9E9025EB1562468422C7704CF4EB34062FA49A
B90AF028658E64F3BCD9391F0BC631AB8362F78A93B8E845191EEEE85CB885D9
CDC33C28FDDF8B550E3E7EC028F73E0289545AA5BA984F105C58A0CC80D7A7DF
0453FB324D770F7112D3543150F87754C6F2A5E26F7440CAB36919BC25948932
9659C3AC03CFA2D6EC42440357B621ACED6ECB6872B5A4EF12D2954DD2D6D1B8
D2337114396B7FAC8EDDD3FAF50DE99070D5D3B0A5A3FAB3255F89CAF1DABBA1
BF5E69BE839B7728FFDF0D51B2F874A2E19614A15C92AA33097B3C7B9818D3B7
D3B7A9C57C6984E8A1310C9AF4FF497D54824DC7429ACD831B00F9708EB1ECB3
581944CCCDBFFB7A8CF23DAE6EB76BD707DA7220F27680F58A154C524663AA05
7BE2C823A4126BDB2D872832CA3B7AABA4E5860851EA4310000966FC750BBD12
87E12BB8B613752A602821B4ADEEBEA1E478EBF5015DA9043C1FC7137647B1CF
44D215C19097657F51EB4333E36F949D9A92E4960AACC2011E842E103CFB1229
24855642A67A99FCCA94BDE4CA0CFC61724687EED3173E67B2924E293DBDA6F1
CAD49D2FF5573283A8D9B404C04C72699732400EDAD7906328F7CBBF38C5C66A
163C7A39715296CD5939B26A068ABABF6798F6EA8EB5F9410D24FB6CBA16B7A8
654B95B35FE54950FFF8882E01A506926FCC96A7B621E8CD0D840054AB340E5B
25A740AA83A53CDFF88ED1ABCC5CD0E715ED9333A1A185DD573AD8350FCEB905
9D0A12F0E358EAB0EBE6B76E576780C1621225A259A61D04E594E6A149CF8CB5
3B48BC458ECB29DB3B12E93E9BFF27EF0108342D68B5C88E5424042A5983E44B
77F361AF2B18BE63F299454F461AE32BF4355F860128995EB7CE8AB4CEA372A4
8C82A681EEBF0FB695968E32C051B376C42D7BE6D5B62B597EF2230BDAB3F002
5F8783A4400CD702B48EE3C53E46C536C34709E5223CEEA0A86C9C89D9BAD324
0D6FF27AF9D54A3CD7A77156ECFCF3C065E7D057944694E7CB6098B0BD07C1AA
8E038B8DF9FA6DE9E1A505C81CC95BC665D78C7CA8B1A71F63EA804BC63FB0EB
6EF5432691C91AD95A28858F39CF27C45923F721194EC0051F70FA13C410FAFA
C56DCBE06F9156A30768599392AEA03F90ECE5DAE3E973D146316BF9BA0AA77B
A40DA8E0AD131F1A67716DC6A07A7C91C1C99ABEFFC56993AB7B2D1F1F6FE286
E7862F6E8D3E1806EF69482015FAF8928B814DF5223B94F37BDF09DD3158A163
E2E0753A66DCE85044D65BFEB8C78DAE2B9C375974F34D058E78A5E2B31D2AA1
EC9C6062832309BF16B8D17F9FF2194B96C0C0446D212BEF4ABC1A7FF088DB3F
1846E41606DD510D2C7D0BE9DD139C9B9961BEED657159198DFC48995AFC77EE
D2D210FB51C9517F1E01E50AD85973E73B3447EEBE6FBC51D8DFC71FC9E98661
DE1C37014DC52E459263815459BA2D699B66449E414B3AFB82E9BAC5CA56F19E
724FC44A1EED5FA28F10A55F99FC6F65A71B56E557371B5C6A817DB4E0D69B3D
F988E4DF9AECB657C8DC04ED4E0B87379DD916618215AE43C04D58988D00402D
F8794B1D73940EF42B7958B39D4D7BE19965A9845BBFD1CFCFD6E038204382D9
9E026DE9307561A0CA750876FD4C64F5B3A864A886A8D7E350753727F8ECC424
EFCFA0DB2EDB45E13804E96C81C132E26F08D3DB7A1CD5A3E4CD9AF5CC4F225C
AB1B0F800B9746BF9282B91F5842FCD0D0FBEF707B8FB92EA58FD6661207C7E9
B6FC7746D687300F90ECEA17F062BE3F57FD2F6DA950B68EF6AF1DD0DC39B8E2
D010486076F4825A0AF1593D3D6592C0788E59485A06EB118283F7907A829EB9
B313B9B76B11A43CFD64DFFDF223A07FFBB71286E8FC1AA09EA7D3C5E553AB89
7E1D4B39958998D5798664FE39FF4B33596101264C75F1C3A742F71DF4962039
87018C30EDFBF4BA558F6FBA61C95548CF5F45CC9BDDDBFFE7E6AC3B8A68C529
8F563EC6DA1F5C2015847725373AFDD25534FE57C583A30090540EDB4956ADE8
30F9CEC9E47617273A11692F6162086CA756BA00EFF2F69E73F8175268820C3B
1B8960CA31C5E10BBE2AAAF25197FB64AD9FC55AB3C2B84306176F7AB7126971
6E972FDB8AD62C98E41501101AF7EB03916D04C885E161DAB614185F16340D86
5A1996E6A6DEECD51F1463A922E378FB7F982ACB149F388742C36BFEF08A6FCB
E2943A5CC2987D4F4F13362D7ADDC3D3BC7DA1EA7D8DE3DB4C880791D8482E9D
9773843607C355FE14B475F24AB6974E13D88C626FAADDE044E3C5A02D6B7493
4E1CA2A19470E3278BE72D0270E12D1DEEDAE0D53E94106BBE5B477C96F71B75
8A6AC0A17AFEF6D76501D740462B21BB06A88DC601CE3DA0A78AE6D8D0B709F1
5E70470AA5B281ECA4092535BFE9FB964000782CB5BF8D4BE40B060C2233D9AE
5D06B7064DDF4364EDCB98FB4A45423F9F4625BFB22EBE875C0E8D393BDC32EA
3DB4AC283C5DB47854302CCC9AB7AFEF434F585F218A1665C6320EFB421D9CB8
9B2FC5F3FC381B2FE8997EC131EC9F3DC89191A056803F9D26AB7BCE976680AD
E652371DD507E715B1E395E1E542F6019415FC62978756D26A0C59CD21A7157A
42654A1A9DB67A8F742F59EE9F3757A3613D69E4FAF9E2C7D0C09F85B53FA64D
D33E517533A8ED0C5C2E15E84E5794B28C88DD46ACD5FF56C766EEDBCF086960
0EA2AE82D3DB145BD2C80500417DC7B7499008C4FC1EA7098B1B93AA05E997D9
C9A692CAFAA72A6A709C68D42D248B449A15DF2E4F2275FE250DA3CDB311CB20
EDD49DBC9095F94F916AB63327FD846D44720EFC9136137E834E01775190640C
827C098C73DECABAA2BB9F74AECF4DF62217946ACE5A1C9CC82CA5E6AE33374A
4F16ECB4FB1CAB6B75CAF210654B1A9D0B3970E155F009E626595875789BC836
FE8BAB7FA82E77EFC996B367BB79E69EEC7FBD973B2B6DFC2770A7D8EDD30119
37B8FAF85749F5F76D18BA91DA8186563C7B36AC7849C9EC825165CEE8D7EFFC
D4773B364FC4D887CBF476FEB4889D9D26DC2FFC5CA2678FCF4727DC836A7213
2D1CA61DA27BCB19B9AAF9846B82FF1F02D2F0A66262BBC6A5466367A223B751
CB40832014D11E9A1D033B0793BCBA9A63D4B451062FBFB68C3B768CC0BA2C59
A79F9010124FFCE47E409F0DBDBAED157D2507B270D928085C40BCD50DCCBF38
AC12D00206B6BC2F9FB5398ED788341CA51BFA6753A26C3186826955A01B47A2
6A3CB87B61FB8D8E25B5BDCD72C3569906C4539B9EFE445BE4B8C7606EC5CF4D
C65CA405E5DFBDC0F22D5DCAB19AF785B6C0EBFC022651EA9305286E320BE4C0
02F68C87C5EDFD5C043A6A93E254921B8B0B30961276EBB0F35BE7F4AA9CE2EA
00D7FF5F01AFB56EEEB1C77982ABB8EE6140B32CE306D5F840E8970BE0144BC8
E1BDAB95497A8970CEF4A3CEADD4EFE91D35DF7679833FFD98AAFA87BCDF729B
56C22E2E5B63F5A34B5C7B9A0C066EE7EABA27D325DF0F65E562648CA69430BC
27D408E890D158291B8EBF9A811A35B4789338531CEA9C31F381797E638F006C
052C76630B40A69C0098E514885C37A18059EC3ACE295613268FEDA546BEE38C
4A5BCDAD888ED4BAA94F5951D428C756B157A590057C76215C21DC2E8014D138
40A391D296B4F65419D9F90D451689A369759AB6480F82F90CD02F460E2C2E7D
293369AAEEB8B2135D6D5C11AFDCB68812634F5EB021EB15B7A26CE0AE7631B5
E2DAFA4C76529E02A585AA57E38AFBB5932BAC1A456FB1E0686A2C291D3E0549
34D4F9101991800124336EAB31789982D566148BB44FA0FAE9BF4FFAA1508421
BAD346F807B86CAD54B9DE2D281B47FD020938E02C1D2610D54EA695186B7341
2392E1CC7C2EE377F334CF6EC42AE09FB8F2078A37DECC1633CCA90237E25D1E
DD0C054762580CF95FC863D5A1E9F9CE271D4EF02C7B3F4693D79C9C46C18A19
8E425634FF7311FA695AFF125468FBAB8559F405E2356C473E158E2A03521AF3
970E6072477C0B90BCD0F1E86970BEAD42A34061F34F83855C0832ED8BBE99AB
D7034520C985BB93CE582C78D45CE0435537BC2F35648BAF1F1DFEC9937F2FC4
91DD351F0EE256CA0F1FF9956FFE7111F40E3808EA55A8208B058DE6FBAF6CD2
75B0FD4C1951C648D1F75FA0C7E46A46B2BF91C4931A003730F15B790D08E288
22E7347A916B4183E49FBA4E0450B7BF4D267B014A25492137965FD1A2148730
352AF582A0C1B3E9BDE84BF5F535410F82355C2A57257ECDEFC79CD3533F8384
2E754D9086BFA19D11CE0782F231D8326FD0633A5EFD2EAD6B369F8BDB82ECEA
94395D64C166797ABD0FDDA0DEEF21582A64AB454981FD0F07389514FE7E49B7
385EE2E22A73C2580EF426EC1A7C688FCF3055B80037BA85ED49D86A5DC04657
AF2CFEF7BD7A358B056DA716700A368865DBEFA5E50207FC94DD6E5B41F5D03A
36410EC69D8AF4A5112AD13B1FE8A9271B428FD286E3584BB89F9F25253FEEE5
F695493B93F468225662434232B4798A5B495E3DE1E98002971E1E8F6BECC774
D5CCF63E842783BDE852A5CD4846E7627C4E51DF8B16E3234052F3014F9B6E27
32EBC81F6BC257517EB9C4125203C8FF1D881F6C47B34BD7A91A4DFBB8CA5ABC
A3387C78E203E2B03A0E2A05CF14D61977508824D328722D6FEBA7C63FFBD250
569E78C70C5EAA1DBBBE119E907CCC13C09A7F01AF160394A467DBA7AF94255F
BF02D7997B7BD8E0D6A70C764B8E444F592B411FC5F685A8D52C7F2CAD73B9DA
3439FCF973C4F22F8A3ED4CA0AD673464FA5B3DEF81972297E16C7309212EF4E
1234E2D9861991C354B46A1AE81878FB693FC8A6CE75C4702CBF0E6741D8BCC9
CB6A6DC57E064B720D7A590105FEB6F0C40612C5BEA35E168F2D8A2C8C066BF6
EB99B521600A5584E6D369590DD9B1E85677D4AD4537BAABC36F78B9C790C18A
FCB5968C0010366723083804C7F9A7525B256291CC92B1DC9DEC00B48A98BC36
1710C6CF862F6D34FCBC7193A93F3AEDB8343A57474BC8E79D37A854D3848E4B
A296E27D7A66202C4F0AC5A9B8CAD7CB4E0BEFAE042437BF1ACC2DEFA87A839D
70015EFA7FFAA12B256EE5767DE6E795FF26C2B74B1501595196184BBD6977D1
5BCF91CFECEDF19E342389D90EDC78717B7BF1A60F4BE92B4AF02005973D8039
1ACFC616FB8D9D7E00F5A884569DF746684239ED3F7C74616B6C7782BF11C905
21E63B94C6D0B1F8B270F61DE04C9E9EC2A214BE6CB518B59E217CE5F72FF6A8
AA6B2C97D8B4DFAADCD9247310B9458B6B7F0524B5410DFC768628E060770499
49C2CC8117B374BF513AF1280237CBE074D111A9FB054EAC869E3C319D8A64D4
F5BD7BBB3754EDF3A82AB3B967D549895AD2EAD722B08FE88611D729ABE047FB
4547FDCA93A13515EF13D1E748D5AFB5D301DC4403A087EAB53B115D3F29F665
C1F035C9E649899F6E821894604DA5047690477A859103CB5CEA1432B9B1158E
5DFC8CA968EA5D22124C4E0711EEEA20769DAA8DD669C3630465995A16EBB580
3ABBECF27C0AAD52F75E9E3A6687364D5EFEC8F31FE0116E502E847F9B9C2799
71446B581332A84C3D18CE04D2388269B2C1C735F6B5DE8797C2D0050C709C5C
9709900E8E943B88680DB34F5D02D46BE055AF5FF933BCEFE389D9C473E0925B
683DEBEFEA6718CCC099B72B68B37C97E610E2D71CED404B9668D1032FE13571
230CA96EC326434CEF9105A1282D5C9AE201C72F196B897066608B3540972516
E89EF389AAAB403F877D7607C278C647B0BA3564C3C5F741EF59C31B4CA1D142
8FA0E147553296D51D4C8E17C5A19790317DAC4604A96808B053B4D7E4036FEB
D5E3BBD5963C615AAD649073565EAB194767E00C463AEBE2BA17C79C794B65B1
0C4E626CEA49A06A63E61EBA1C66553050398E8C71EE3AEFB793B2A86ECC9A20
CA270D52DAA835C2F5AD4A686AD31C292C7E5990FD5EBF2A369760C80B1EB32D
D065CF7FDEEFC4EB905B0C0BA6C712242A5A340A41D3DCE4433D0887A13336F7
479A0D6E66AEE1EB5B155A10640C7DE47E8F285C141F1375478DBB41624E57F1
F0D63E081F6DD1EEED04351AB04308D8BC9DAF2CC5953F23F384C14341D8A12A
491E774EBF6FC475ABBB15A3322AB1C6EA139168F5E866FE4668EF25C04BC9D2
6913CE55BA9EEBCFBE546755821A036D677AD25547888AA1B9C0C78142B90F31
5333168698A10F2490C398AC518CC7FCE39DB3CA9C1496A8BEA1B723D128121F
CA54ACDCC2FD5D15F53B65770B843C23937159495138E4F025A6152FBF212263
1D967DD0B8B58E8E24D022400C1DCB211E820628D55BE970033F40ED720065E5
C2165334CBF577829A5C77E9661739005F023B08F7D87838F62A6CAA01A20DC7
9BDE52BE277FFCB439E6C980326593693FF54006418EE4AD1570F44595901DE3
454925F21AA58102E1D6D8F4804C18FB39B1F784A5F0BF8C67D2CC7455C4A914
FBEEC22D759AB35870C3DF29F96004362D6B0DC62BF0C8348C55ADE90C0069B6
ED90BA08D8A04B1B655B60D215EBB389CD803DA3064F468695A530380AFADF57
549B55DAB5D7251697C4F0628A7B29520B77AA16B866CC56DF2B09AEF45F075D
926BE357AD910B4226247D45141AD506661CFB72E3EBBD5CA2346C701161CF8F
45162457521F31F8E710D1055A5F8A50C2841B63B9AF7C7859A6D73162A8D8F8
5F0EC04A5ACB7071A60DE4E928523F825DA8B323B01BB50ED46CF009FC101F81
33C3902F0EA39A679D879FCEE3756BC21B5F88E9B87E035EBD28B8F67585A228
1312DE9D49289F9FA56B907D4E496BB4EC03B78E7A8335931A5FA25F03989152
91EEF5D99C4E287BDC2339AF2CA05493E8FE4A623C0FF2C390F40E318DEB7478
8E6C283C6CDDA24A62AC673985CE804E119E30EB552DF630CFB2DC8313F060F5
CC88725F37CD59FAB1B8BA902ABC949F1A048433A91BF56096D56D46F2726A22
4BDBF813124FA95DCB0147DFC3307E856186CF1BA6EB7BB45146848E254DFEBD
7AD2CC21BA8EBA1D4B6247EB1B3C7935C2190728B94C3FDD8C754C60E6063BBA
A8B6AAA751ABFE802349FAAB0EF5E3B17779E029BE748CEF76158231CA2835E4
B89514C3E1A90B40B2337BD16D60007B8D3DD2538395C0E2E2EAB9CE383B7C5F
B13228D480A07DFDE76E95B7DB8AF11CCBF5207C6B088F841B14AC51A6B584E6
F9473CE6962323963F7F0BDECBC4569AAC2507CF2EF1FE6B1B7A5D441AB9220C
EAAE542E4F0B3933234DE31EF63CF58A03F07FBF5A818B467A110AF2B0D9A4E2
DCECFD566DD137FD5141595EC251DF1EDC747C51AF4685422AE2CAB82ACB5BDF
CA3D338D87D5B02C7DDD97B70DF6AE8B509D9652FFD7F2132814EA42C4153336
D5FA95DE25B164F92ECAD1BF6D62F338EE1159162D797B148B8942891228AA70
D2B8217522B96396E29C438F41253D3B0B5645FD12419224B691FB11A6404D8A
5AFE184EBA57748E1243084ECD38A0E1DCF2E781553AD92A7EDEC8B2E936E493
C394D28303614722B9A33EED6077891786683AE3F55E4CF016528A13979E564E
771621EFAFEE782C2E5A23B2CD707A6A4F3549C34E00F97E97D2CB5C49EB6EF8
63A81473636120A36120CDDF47B8158D9E0A1625EAD60A69C1BE7493CB2F491E
D94B4CDB4DC8441C334A0D321CF43B5CE79B3C0A8803E7F82B2819A3942F257E
38E82C359BF2EEDCFE744DD4FB37D6E7761DF73E1809D2949244301A62E47FF0
B741B4B256E229329FBD45F6589A63E31185339D7A5F655AB0968CF669366F9C
EE7DBBB9CCCC90B8843B29AE98D01AABE628A4C9DAF1CFCED2D5582D4347BBE4
DED401A585F7942278DC6ABDA33BBD6A558FA5EAD5E23ACCE673604D21AC61A7
0F5944D260CBC86AB70824B87C47EA53A81AE4FC52C46F80FAF63A6C181536F6
3EE410A0253444804882A2CF152B6949383B5B144F553ED6C4E11F01A8FC1D6F
293EEFA2B2C822BA7A8058A159650D5793750BB5D0D6EF816AFA4869D539242C
2CC6BFCFA8BF4737A8E8AAC9298CABF7E237E04092C68C1EC4A20763CE3826CA
18400E0BF4A1A27246FEEA876A3AAD2947EF117AFA0B61A9B6A7E201923F7D90
3654C4992EA47CC5B2ADE77D79E47029E40C4B5B596817F231D26A087035DE07
E515B341248C5EC3CC2B851F262522B364135420ABC88DB06E31E491B927C026
75A644607478F4AD4A152253AA4339F0697807C7933E921AFC4028F57C8A9EEE
80F870F114FF4010102B4387AB3C13DBB86CBA833176323D1EA2402B20E1C4EE
2A11F42E4327DA0FBA34901D53F6E6B223C3DFFD893585F22CFD765A69F32289
D8824AD5C08B62BE72FCC169B466DAE292D82293077C69F4DC7E03FD7A02F465
D1AD49414FFBC209C1C68063DAB0E8784A5B2BD8E5CCAA7E81E8A25A16DCFD32
5D6FAAC3C5346B3298B970AFCCCFA9B30FAE7F4A952D09659B208D107C8CDC57
CD73B15C52008C68A3F9F233B921509D3B2C09E451C0BED6BC7D991EA721964E
9EBEFCA6F34D79C337161BDC06BC1E7868BE5BC495AA4625A4E44A2447EAC2FE
09AF84225F8E35DAD8E608716F4F5F31B45AB4B5D0A179C0582A7F2C0020ACEB
3610ACB548D6D621705A2CC299B2714EC637724FEBFC2C90381236C47E47A170
6AA817CE3DAB393984BFEE7C64ED51B18E590A132E2CDB9F75B17B2F16E43F5E
21312683BECCA726554EDA0526DBBE8E0D9C58D322D134A37B2888678AFF7388
B5813552E2524F347BC1D76D13A4ECA2771CB14A846D87549A0496F465D00F07
66E196C03DA1A925FA9B64A921EDB0C5C2A27C3398588A7085CE787BBD91239B
9EE730512BB8F5388B9ADF9FFF771F1866ECC50946E35B7F530BDA671EF1A4C5
D9B3898D7ECDC4655F680FCE021616D0DB89C51001090A4A7A4D776E3263AC78
31D24F97A175A93FBB1690F9DD007BD7D484C2E2A39D8B968FCFE0E740DFC2FC
A9D28A6742AF910205C9B6214E0F178FC2E3E8FA94DAA9858019428DC505D953
6D49069FDD216819E3C86A6D4BC3259179DE4347ABB15EC3C23600BC5A557814
3D55A93AA34EE1222DB38552091831DCBE0A1978BA7B868847F2DA25B78AAAFB
57A9F8C432539E4C1D48A1FCAC3511A660FB2091D0B1D86F49F7D780AEE751A7
0A0EAF11FE40255751E95C63B325228398FCDA123F7AA801418D4E3BC350CC68
E261FA07D3BAA1C3E438E8243D6FBBAF50EB8FD8FE953029FD32E5B86FB5A5E3
88A2C04E1AFDFBC386DE740111CC81FC8A4652D4B8FA9FED2284391DD5F0AAD2
DD34D2267EE0682D2FA27B8F4E3D0B78CBD11BD3F3D0D13EE0E045B13EDFF918
FF0F7AB7C22E5610EE5F4E9190871D0A39ABEDE3172FA0A2127751E814E8D199
4446295C170E65142069393597F6195329AB926EFD4C397ACFB134D0A284A607
919D9370A70F3F45CC0E935D28583720CD92390440D0495BD7C6F5A86BD272D2
FC3C68647B83EF5B459D8A3B24AA15B2D364E1FCB1BF17BA63096272B30D4982
435FA42C653EE9D144C706BDE9EEA9F569F1E5963A38B4B75F8B1419E59FD7C5
BAC359A69BE7457657A6A65406015947249332D8E20BB4718FBC25D1459F04EA
286BDE84468C335103F7496ABB9CB1B83C5D94730061218EEA88699B3DBEB852
460380F3F67EF2B915F06401D772001C19E1A63EBE7E645FC515D0A6E842DAA6
61FD9B397A3F26BEA91757A8549EDBD9C4EA4FD7B9B68BE31E7907472DE5DC8C
40FCBB2BB86ACA3D96BE9DF74FF2CF281363B7DFAD216D26ED6F9FFB5ADB331B
5F223E9C743FEA0C3B0F9995EC0F52E956C460FC1EB07918434A847BFC90312C
10655B60D215EBB389CD803DA3064F45DC549E3F55B8371D1660A651C229D309
125837A43863502E8A12727F5D50F3C73B5730D57871885A1A37C55A715742BE
8321491F481D2F9EDF441B67C3B73AA68174819AD85EC878F260DF0DFBD65171
980C9059C71DF4FFF65EED1F71404AE80C589C79ED8D74026ADF1B4E1D88353E
072D4A417B3CB90E4103E0EA7119629C1A5597FF7ED694FC1208C4E1B0036DAD
5C10714EEFDD6ABE847B74CC7C1E0A45451349CF5E62AE2E81175A685D143C64
BD1B19E15B6AD1AB10289FA4867D37096BF267DABF258C39557067088D8C6D22
457B46B3851443856541DAF490B533182C297773FDBD586B2CC0113E27D037EB
41BB5233C56897DCD4A9710281986726529B5D8433B54A0F460D702F65F57371
547EA6C877529E79E1991B94888726133C35A5DAE2CAB0755BC232FF70C18272
3B4FA85DA2C4CB43DA2F3BD3868D6373B736D31841334DA812F8A30ECC3C17A3
39F4D4004A2F587234FAFDA6713CCF3745C58511556D425301771208D55E96A3
30389BB0DED9AED5A91815032D5974DA63859AC97006C0EE30580D1A3C1505B7
F9B611B86171989AC09A6BB14B4E0EC54C5AFACFCA851396A1F2A58387CB9993
2F2182AA3F9CBC2CE3E57E676482AAAEDE3EED07CFE3117875E5A28C5079E178
1A9E1FDAD12E2FE4AC2173B050A05C18F9880E23C480A2CD0B107CB61DB5B347
3627E1BF694F3E9CB9A7414BA06DFD82358F0DB799603233C8322E494B0E1D8A
99D7BB75519C04125C88841BE3D3C6E6AEC948DC1A6586DEB6D302F8913C6BB6
0C0312B24B0BD4ED7C9E63DAA701DAC4FE7928673F7B6A68F73A2AD162CCA498
57A84C7529882081279DE3B25A314DC836B1FFF14EE35D303E3785A358E9C113
50BEEDA282AB62F7B307156ABE19B56BD4F691A1AF2418534761F8C356810994
E46D30A3B72488156382BD35215D8D83A278543F8C919BA0608A9FDCDDCB30D9
8728645A0EF2349E6EF4470C55D811309E1EA8BA06F6300D6B15CA859058287B
BB4525F53D25D77F4026258C426CD1EFF18EBFAC7D28BD9F35A475A361080D21
8B2ABF7405C9E6A7DE351875F1C9B850A692C4B8D758642A39CA1A0516229013
42219AA07500AA5DE6D5E073D10ECBE93C5CC2987D4F4F13362D7ADDC3D3BC78
B0D56AE3131FC9786647D584035A523CAE948EA929B5439EDFDB983C046C1F53
88F7E67E3E0031F0A13AB12A8522138A17ED1A8E560E71D8FB80654CCA0877B2
80AC94BC365FD41CE00D6E6CA78C205758D9EA0B988E0C9B39A425D899B8A8D8
983FCE91203D3F13487F4DA7D3E17AE9BE77FAF74DEED1F46E91232676A161FF
9DB7741FD07F83B8718207CA4BA03C8C2F41E10CFF5C14B05682C1FFE7F3C18A
633F50B41E8B79C0C246A98F6C78D3737C42B28588FB5B0B3CA97EB54F18A97E
944E0498E78FBA671B1E88EF5F1EF4FAAED7C4586AF1E9F97DCE05200A928A53
7B7DAB77D68B9D2F7579FD28BBFA862BFFBB6CC55A89C2529A4F261AD82C4888
BBDF7A40109543A0E33F06DFB8454F8E326A46E607822CA2F168E0E8D95B6A53
8CCFEC343661D7DD0F7DF1959F349B12BB4EC7C1B6E2EA77DD8039527CB16E5C
9371B5DF7053FE08309464F85C3E839DDC16CD46C62EA21C63CE90EE04B3E46F
6E109C8193C6E1CDDC307A88FB00A1BDF0C7786819B817A4E887BDEE616AFF4A
66FCF41D02C7EC97B9773098D7B1DE57557F019DF489FBFCEB05EBD4C3B6EB4A
1F64951B61206C2FACA987832D7946D67A12AA8660868049AFD4BF5FC1DD1425
A15C887DDC3F530456D6A0510A8B28E9859C187CDD6D76FDA492539817A1B296
1B6585C3BC8751B9BE4744063177B0782F58695C70CE086528834BEE3A0A9871
52834C6FCD4B6F4420492F25CD6E18D0DA09A077839FA7EE598772B76C72F09A
7FDFA76332D671153CFDD38D8A182D99BF0AC5732241B78FBD2A36C83DEA5FB0
4E14EAEC100CBE4B30F37CFC7C83E9A00F23BEE2B638CCB3023CA8994808ACC2
B41BED1C40F0D25AD81AC221A5B141769E12657A12F9B2EAA14798980BD38BE3
5C9C0B9336DD693890EE25CFCE43E7F7718BC35C7F5A29976E40D6B935E1CC0F
1D31D3D04EB580E03D161E419770F703322DBD74AABF8FC768239F2A78A73987
79AED87FE9930701583E8872111DDE5DEDA97EE65C2DDECD3D907B80D93732A3
C24D358373DDAE6D768B1765AE644F5EFDE49FAE1826CE1209DD13BB4E9C970C
46EF20FFEBB58FDCF13104AD668CA966A7F0E8E738432BAC9F15C4556EA67EB3
F422BAA00E20AADBAA9C8A4EDB0707BB7BD117C8AF5BEDA5B22C02F0E15DFECF
3C0773338B521DE231B13090255839707BDECC5D8976C11406E630C62B205708
98CE53AB2ACC70782F4AF3144E458AFBEE2418D5AD11C801A4412C38F4949F89
257B8BC3921B476F01836831A6B3AD5675DE5B6C8B53B7D715F2A60FF02EE6FE
14F328AA7F40F94C2881871A160FBD10D2A8CFA1276F9194E6556E8CC6A6255B
BAEF138FE0E4EFDBAE71A36B1ADFF78ECE0BA086B77EBC61E0506013C9797290
60A04C88FD7EE21BE265B06D08430292E7462E2C6D4340DFFD4601D7718859EE
D8487BD80C4444B2D448A840F60EBED68894FBA3D0F5A47CCD4017C15430EC3F
E8D1D848C6ECCC6F2E9D0F7EE557962E97B2611963063E5E4796EB958166DA9D
D39F7FEED01625938C05778D06A527BA855AEAD7AAD5840F3C7B9E21D8CA390C
FD10968212200740D75410AFAC562B21C6D0BCF55D3DFE91A020793E66AAC88E
94BA70268307C6378F3B986DDDA740BEBDBD569AA09107CEFD6EA60B8C5AC1F6
D46AAD79527148126ECC74F1B4C26190D1FAD81AA210A4EF88D706BFFE77E070
862930B2AD398A9EA8F460424CF8C3DB5460394CF197CECA724F82B938BB29CE
3937CC35C3715CFF2AC56E4465B01C9C4626A42DD8620AAD09E1635D0ACFA427
63CBB550451EC80B1DCD77F56DA2F4AA6106FCC27B204D7A67C1F6DBA6FA3E3B
1793A5EF36CE4BA6B7078D6097DB039640333E343C104450F9A59E02997BE85E
091EFA8BB161C5C4C7D441C23B766D1920ABE49CAC93EFF63A93F7EDE373D0E5
436AAEEC1240F71E1D0D7055AD93C362A37CEC3F3A8A800758FED6ED30FB66CB
45E6F6628976C62EE10C5D3529C8D3B74E0CA32D30816D569142C9E718E40576
0DB81F141AE5373A6C53F47F0BD7462AE367580D62A752FDB0B1A8C29D9CA9FC
B788794DAF9F64D5BE41229D0627B0AF182E876B0FD46A5C332DFCD8D9565B65
A253E51D926CC76EB64AC9CA83B7FE6C91E10FA717CCEC0D2F8AE339F1FB3126
57E2BD52AB35B72F30CF7593B3EA70838DE1538890C98AAC895AA48BEE6E1FAC
B5DB6255EB11CF42880ECCB4E9902735A3973F350FBFD52A177BE84F2C556356
F953DAEC243FE25DC85F44E84ED06887B6E0A78E0234EB24527A306A3E2B5F6C
C137F4591D3F63B87490338692E1E8CBCCA149F705C5C4FA63BEEC03A321C96B
32D99CDCE1E087F071104B7BCD7EFC7D827406916905CE562A7F1F31B33FF180
99602C67026495FC2E4426C2B5993333227904D8D3118FA28D55E36F811306D8
B45382F3E6EFE9C794A0FC38F09139ECD44EDC4C4D95F0D0ED33AD94335813E2
F68F0697FB05CC89E2053D3D8FE8475B87C18222102AE6868F9A2351BA6CC5A5
5DE509E49C0F79AAA6140291083972293092C92D8164F8D4B95A3BD6EFE427EE
AF3D3C4B2272F5BAE463184E90C3F43D68281086B9DDB21D604056A7672FF770
558BE133B2C1C7D7E176C468E6313A3CA43B6942EA1ACA42EBA1FC619435B95C
5C7603A80BAFFF3A40A7241CFF20023B40491EB898AD834EC65107E430DE2E62
E16269D6967B5937F585BF8D1F0A66805BE9B173D505CAED4D969C95534CEFD3
1FEF6708C7D0775C9D5B267D4ED3B6FC050C642D4F8AD470257FFD9040AE0091
C79CAAF2B985CA51017885692002CAC58C1BEF5046246A0CEBA481CD267B46A8
47B5E077D703DA799221583EC737215883E3A284AB05224B71597529F45E4DCC
5DF593CED5C386692EA6C88E9327862E9C661AB681AEAA9A670C64AD4C063A41
FD97AC4630D914249FC827E1B35779A961763DB019BDEA41F32B1C74A1469847
F4C89FB45803BDDC598699A43BA00C7A0A5C2851F7708E6619770A190BD48C25
934F6FF32CB40AABBF21AB550DB7FD13D3073A7690664EFF3E68182DCEA45E52
8E0D29235C8F0CEEED40044A8F508D04F905F584A5514FDFA518791F396FC859
8E59109FDF33DB976A55583FDDE9B18DFC86328E211126488BD16311921BFAC5
5C6348CE72916FA355324AAB6D450BF0B3F3342C66E92808B29B09222E86FF1D
890EE2689F2A3BD72BE359B9006A13430F0AA9F267688976C76D1021CD015D97
9E0E011CA35D529484F38F6A4DCAEBA1F1DCB1F6682D0A249F7B020D228F5EB0
2D553CD0A893CCF96BF5D4FF75D9D47BC014ECDED22B528806F4DDE140A4B6BC
65677D3C618177382DFF490224401BD84B1E8F5F267E84DBC86356F059BA30ED
8AF544E782E3F688BFE943C25C094351812E7D0817220FB50C7ADAB8965EFCC9
52FF92B62301FE5950FC46FCD1E5868FC3F79BBE0179E53329E229F8F69A3C74
9DBF25538EF06E332C11D2A9EBFE7949B84EF7CF72977070C63EE4177E3F3D2A
FF3864354515794B7A1BEA96746DF927B1B78AE9D4F50DA7E9AE6CC9EAFFA5DA
E985DE052C9848B696188523202996FA3E70A93D36821BF6DD1ED132230D6C53
9D9956444E02CE12CE51B376C42D7BE6D5B62B597EF22301E8FDAEC825C73F51
8062E8A88A53C47846D2266EC000852A744AADC8BA2C0BDB7674AF47A2607D18
260063013705AB6F7A67D2B847F8933C5FB1577B1231249256E801390FF602FC
FCFF86F100F5F16AE21621F96E0CB4EB817C1090636CEA94745736395AE5FB08
AFD1CC526FACC58746AD3511F899A4CBDEA55DC35DAB60D79EA274B0C86C0D33
985501DC3F0782AF68F8DEE9B0A86139A5BF2386BF6A4CFA4FD5ED37435308E9
91B8D5CFF8176820D3BA3CDDD85018920ED59CC81A15EEAE7EAF60D41AECA65B
60D1AAE43BC14BA35B722F2EE93113FBD3E3C03AAF06F68BDF7D3EDD17C69195
D52981FA047D23595945100C6CE889D66B44A281723CDAACD83143FB6E874B5B
D7116F9166B4007FAA61BC078CF8572241F61F5148791C6FBC4B818F7FA8F2F1
2C63E8CC2FC7C9FCC921E9F5ECD28CEC3ED28FE9AE5B795DCE25425387A17F55
2F930687499925245B8299819734601CF746ADE472781A6A46F5AD81709E4C17
1B08BC9028FB6365221E676C846E1C751809E4A591E34876AB8C52681BAEEF2D
4CBD871CED84D38D33FC2CA559E3D62EE7F0360573AC236E17EE5F7F1A518EAD
D653AA65D5FDDACBF202F68B5E140DE04E29128761B2553DDACB43A101061D84
5166E002F1CDA2F1671CA4665B28B641A6EE6B1D7A954D9FA1DE350AD6C69A79
3520439F2056BFFC8655FFA080FB0559F7F94A744C6E54A007A5B5BBC5E1DB6A
0DCB8D0CF788AAE48B92AFE91C9C2C25409D303F33072AD2E97EF4B309429CE7
7E14FDF25C31FB75437153FEB8B4E235E3DCA09CDE93BCDA243E3423692B4000
866543D6266FF881EF3CF903C0B7C19C20040D6423F521766A4CB15DEF8150CA
A554093C0A40FCFBA03FB3E435FE3276F0250738F3A2D6B50F7F393A62B85C59
2947C92273E55B4AF2A738C2C03D0F7EB3D7E34D4C9132C0AD46595DA14C0C9F
67B91C9D195E2EDD1C60A2AE1CC2C70CE8A4658145B45A717F19085186251B59
C6600D4D0532FFAD1FC4C4C8B8FD51449F12F72E5F943C30764074515B39BCE7
8F8DE27E3661129006A8E8E0EAE98AD6F5BF332EAFBC0449F8A90932CD017D54
E39521E10284FAF9C7314EF032F1FBA346FE9F894A786CE52CDBF36979804DDF
61F36C5BD8BA61B371564ADFD19E24E33905EC5F0911FFE7A6A87C34B9F7BC58
8FD51AEDC2771321F8D4A2B4549725090BFC15BC61EFD959E669CA5970A117A5
F6E8A36B9161FBC7D89A16E52664B84D31D8F36D1A6FC954F67E8941AAF17132
6237A8979519CC9B81E608C0406458C2B4AC2B9591F561256C049219FC0286A5
271A9F9F6F0A57F1BDF8FE05F4BAC0CD62F2AC24764750FB3C48325C552F14CE
B4088D55E131975DC6B05953DD41ACAE124C8AFED17E524C96C5CBF2A8053108
EEA89E328100AD7FA9FA045C41D5986EB0A40B544A74DC7093A2EDAD3B3A1EA3
E9FEA9B22BF2E37E47408D4E49D34625C2311705AC395FA02DA1E7A9FC0025C1
D64E47D199791CB636F68B9FA0B7D6F0FD8C3F73B1E159071E3160F3888F3C82
CCDFF900EA83147A6010DA648760F89336567AD435BA18492B2129862CA58FE3
B24BC2328A8DA492349EF083B9A54388FDB8F030EF94155FAF8FC47B68F1A3F2
14BDDC669A288045AACAD1232D42257BB4BF8EECCDC8122ED12212183A966F19
4269A93913EAD8C4D2DEF0B9F513BA5BDB44B2801C75316AEB9E6A4A7953E4DB
6AADC9BC7DCCA4C8426E631CFEBF8C4F0D045A064ADC629F29929339018D4A16
DAB4B447F655D5091F859380F5BEC8BB84303FC93227AD94319ACD699FE163C6
14C3AD53EAE81EAB9D59CFEA352AB41222ECC757ADF22680DA2784F6A58697E9
AA3009EB6DE9A1AFA37B06B0B33AC405074CB0AC68A2380FB0D632C46159CB8C
CCEFC47EF08F2724FD6BA12B9E6CDB10043E8F34D46C3996D920EC72C2AF3FE1
FA93049C6FB741A9478619D958E77E6235C9439FB8F3DFCB538ADEB75EC63618
86BE37B336D6A6BC8D2FAE7B790C2E27378A94FC40FBF2E9CFCE3B75B77789C2
1C0E21B673D3E3C903E6C0CE2B8E1DC0C42209A8354BC2B327B0F4DC2C257659
6196933BE1A2076237B62133A32C5A8956ABFB5E9BB5570E2AAC19341A964667
19B67170E48A326DA0232AD9F6C0FAD8D4432A87A0BABC65B76059732869E4A1
F3D98DF31EBF1EC8FF0B351A67AB3561722BDA03FE40DA4228AD798D2B4821F7
0DFA40A05AACA4EF00B081E79DA64D6E2161ED82E26639450355B012B63C2DB2
433CFB111BA27353C45F710B6BA402099B046463E90C56D614A7732AA0BDA864
1876CB103B93575FA935F691C825AF35DE0FE473BF6BC9CAFFB5CA5F06824FE9
8205D719FD8D20567321D2B38A2A241A8F6912E929F3EE46586A5F2ABCC68686
1F26D9FF0DC11012FFC5CE3431D70BA71C4C0FC7235CE6B9B1ECBE2FCBEDFCAB
73B87EEF15F0403B0B4C52AEC5D6B00B14D3D56CF55E3C807AF98103E91CF2B4
94BDAAA6B8513441BF6B5C79197471532FB73B8E184807976033648329152B32
31FDDA00E9FF7D67C7D378699F74E83C4CCD55EFA64E8B68D0BBE9E5A03E8598
20C9FE8BE97BE672ECE20497FAC928C3D09F1AE155DD8261A38CFE71B67AB4D2
A45BFAC53D6668CF22A75928CFC8BDD8257973D6FCD5ED814757FB7775AB5C88
32AD632960E68DDF4D87009B29978423330B2D96065A09BF476B3D0DAD9E95F8
14167377F5F4158687F05300E1034AC01BA7DBD5D2D5F00FDD9F8DFB782BECCB
DD39190F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM0600
%!FontType1-1.0: SFRM0600 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm0600, tcrm0600, larm0600, lbrm0600, lcrm0600, rxrm0600.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM0600 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-210 -320 1719 944}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B57DF626EBF7C144CBECBB0B8AC425A
08F38901803917D730AA3A77964447A6FDD9D1D5D6CADAB899C866A153F41D19
22B1F8E853431D34A87708FD95EBAAE0636D632C6CE8C8A24746216DEA10FC2D
C907A32EA036B850F319450C5EEAE2F44F6816A6D06D366C75DD9E360D9B2A18
87A6A24EA1491639E588EE3DAF1357CEE96FDC53B9C5C4428602EC516A115B16
B137347E3ED03B4937869940192CDEF71C0F2AE65E9C3738407DB9F6064DB42D
E38A19BCC21F30DC69ACFC17FB5C81CD536C0E8FA6F05081FB5CD8F85031FA0D
119767F746B580E784CD0928454272AF2B8FB4F5D53F2F011685524517BB6B38
E8B42394EE37942132A010B6CE3CFE2E6CA24D320C12D62B1C9D401A74AFE7E1
D4B2B0968BCD3E63619574B096BD23B59496071FC1536DFE6937146ACDD7CE00
25FCE9918F9F3439D5F9BF4494CC501FBB4894E8C454BF46C615A2407776C621
762E39A14708EFB767E2EBB33C8ADD59B3A589F3220142F98A253A164ABC1AC4
C32C48557C507A9E3021229008ABA8BA85B43B193A537EFE14EE90DE56EDA1A1
CF40CE8C0C510EA30599B1381005621984F2BD4A8B15EC634B26CEFA8B03CF43
612FC97D3C94DBBFAD6F325B3E3C314F0B0AF5DD1BEF045D7E5A054D99EF3E21
91C1D5C91A760D90DE6D62BF425C79A481AB376FD2CA46F949C16FEA1B452840
4AA8B56B201E4E7DDEA75D821FE434B5676522496D357B621059C6E9007CB5D2
190161111309D2476139AFE57269C6361CB6F09E0F463AEBE2BA17C0DF2B676B
EF8AD942A3BD1FB35B44B11FCEFCE048E0A413CA2BBAEB9BC90A5D78E6B1EC67
E8D53B310731AACC60AD7BF22137C721B0B6AD0233FD1DD83AD47EAA9EC9E3E4
45BE2DB9EF5D34E7F747AEF16932B3F3C6D6D3C8C6A90BC4FA26BF967AD9B019
417A876EDE63682A24C06593AB2C0F1D1CE0A1C1B8976C7550F275C4190A3AF1
EC6DF13854712FDB81061A9F5C00FCD0A977AB4B7EDFE86FE9668BD550DBF3F7
DC47B85620B641E77FE5F73E9D14B1D8CB415F20F739EF1B49B6D65C7366A3EF
E4E0275CE8F0D3BF4A2151CD13C45EF003C1492E94840A2977DE53BE29CD7775
3162646B1D7AA69FE0830C05ACADE1E4039D242E7434E22EC93615FA8ECE2D4C
27342EF751F4FC23E314B5E22BF8000FD3DAF9A8B70334512ED37D33598B51D8
1420F45BB03781F64840D49C9FB69442DC88166575049E84F39641519C59CC09
CC78560917B2A7265C39784EC4B319959677CB943985B96CA9D8FA3A7F776916
70F5D42E29A509EFD1D8A9DE08F1FBEB0759F70A51E2136B6E937EAE13534405
28AA547B5EAF4EBEA0BC14C055FF8FA189A4BAACB0B978A58EDB6B8787C84C6A
212F067A28BF6C8D599A656CEB8AF1F0D2B736572A20B8CC7B4C8D58109179B1
5292027209A25CB68EBEE9E67D7AC8C5A90D47F7DA125579AC4CFF4CA716E425
C9109C1E32527227875588480241B347367B30AFDFD12CF23A050D6C1328C340
A6556729C317E60CD87639E1B4F3089932369CB542925FE084E208AE46D117F1
A0394D0BAD6A6D318033C85E12B77DB6B54C920160633B59C2D9285F7363165C
83F1DE2D6CB5FD306F441F1C09E1C5281C859EB777FDA513DFAC697F562AA3AA
092FAA20A211D4684B72AD8BB8A5D1B3144B7822C5431691AB86A1D989C6F6CA
DD3CF01D2D43AD2E836C43E520792075672344DCEE4F9F1687F5E18A1F7F2808
A4CD492A90B1AAE543C2D357586AD16D5DA61C12E13338F52F290C7D1A78D50E
363B81CF19262AF6A41B35C3CE298F8F6B866E05081E15818E964BA26343A1BB
05062BA3BBA2174F6F457B8CEE274AE7842BD8077F90731D9C031B08EF9229C0
4D4C6E222909211E8149E3D6E0956AA272BA4C49335A08E4F946E74BEAC062F8
FE26A02632ECDFD0BF97D135B0FD0EB25D48CE4F478E134BB12CC9AE3A5456E3
64D2117D60BA66CB7B4A5AE95FA40A28D7DEB27B069A47979A1CB7AED352BEF5
8C560E44F27B9FCC33D3F2076382F2E96F2F1C94F11476BD78B3F62DCE3FA965
B44AD9300CB1DBC3E3A03639C338E6A47CBA39AE6DA19468F81907C0F2E2A593
DB7AA7618487B1D3D924DD0CED0B372AF195EED1ADAA95369820F88AB02E7F52
2ACBA51836956E4FC7FA005F9847900918832730A558067D2FC40EB84445E85E
8D8315D0A0E3E26DB60F6F40D6B935E1CC0F1D31D3D04EB580E1EA68C289E7F1
94D9CA3F7B1DB6FF17B5BA27C4E2B5A23995C881B05A205779209177897802F8
08498A2A584787139457A97D7E6068500894304EEDA172A99BDFAD7204FC8E23
23C873222A626FBA2FB12BEE4E016B527EF236E5AF135276C81FCD2A8FA1639D
0D55F3644B802016095E6C99BA46C719578BC48E9065AA87E8BDD5575DA8BB21
01894B0C047DB7EF79B8ED91091CB575ECBB38CBDCF48A1E092152EF822F5380
F0E5CFF5154FD2BB8D1670F027599C8AA6FE85CD867387C82549B44DC9F1318E
794ED89C47409E478B53DBEFB94C0024CE2B31A24FF1964DD143473893F650F8
1E28D0CF231296F67B8634C080131D4DA2FD54B4CF7EB11374C471EFCF1206AA
29EAC385C9DEE25CBB81AFAF6027C908EEE802A295E4248C4A1BFB7A8CB00F44
6D25ECD21B236424453711EC6696146B9904A8B18B8920635C99049CF76B116F
0162BF431ACACED6CCF9124B91389A2FA3AC852DF8F0748C75C19B65D2F728DC
E0876AC20486F7D845BE697229F5F1DC7CFAA7895FE9B3144EC77E3DF61AB8F2
2FD1CFB4E40FF4068BE1111CBCE2EA64C3B05B1B3AC68A0B8A83D298C4D9F570
45BCEC024AFFEC50470EEA2501AA72D34045969BC0B18565C063BE0F3E9F9FB5
BB83FBD4E7B60DC1EC13D3A6E60A62E18CBEC95D4F9B797B26664F9A9BFC33F4
366C494E561534BD33798A933C315BCBD971C5D5627A380A78F81319D84C6274
B75247E7AE6939D00ECF677824D4823CFA87DE5DDA61E2B4C573977F19D9D9A0
B8D58006A2A7E81C50F1CF9F68DBAECE652A8E228796299F7BBC7ECEF86ED1E3
99242AFADB8A19C661F538857EEC8AA2D7010D493631FE0BBB09C8ACC305F5D4
DD4290C95FC176BC039EED99160E3E7290D32036155553AAB657D60E2C36D1BC
7ECBAAADFD0B21040E80F87A53D8F90EA0F63D004DB101D5CFF6CCDB24D778E5
7338E8A6DE3B431A32058344CD094018F9B4B8790F6F59291A879E9B8EA83B9D
69D43746B142E9AAD81311765583564A44AE56F46397C5E1009223C277E6B0E3
E71CBD4239EEA0D2DDECD7BB7D063C152982D388DB7A0B4ABACC60B3D708E521
1033D3425821DAAAB8FE4ABA27990D6B91B3822A520D6F9C1CB12188ABCC309F
EDD4FA497D23E9C78A275F71858BA4CBD359B870D40067F132C3D31CF06DE8CD
DFEAFB8A0CBC0119E6711BA65181B4EA0E9538A6DAF6921C5F3881436FF74C0D
1664229029635C383EBCE1CB7C2B074B5AA05C938E87FBD241FD064DBF03040D
46705A1F6ED7377C7126ACDCFC02B7C16E0A77DD6C9A899394FF19037D8A673A
A442E7311093FF3D0A3AC14F3A7E73E9B60B21C842F26EFC7F16D94F29668DD9
7D27867B2D2FCA8876DBCC1722A7C5127FD3D47DCBC817B3D5859FBE06922B23
2B0AC83BFAF220CD42CF45666E41F368E21319E382F750C4BA3EC3E8F6CDBA3D
110893CF1748613BECBF7549175718FE22328FC3356C5A1D6607986E151EE943
E301D9F0A0B58494405D4DA5606E89BAEDCD9E573A2B023352069DD1BEBD5199
146A70324E3CFF770C9A0815EAE958E6A17B3CBF9B54D5E17000CA4114259479
70F983C721DB246CC8CC072B11B3AFE65E5C942182AB71396E9417455C5DF4EB
DA48A165A439409570DDF9A03CCD80180CB25B803317EC7F3DE1F15EC45B64A1
F4E6C4956DF4F0118B300D1B6D20927C4E0ABC977DC8D49C6355B9CDA3F3A115
780B4AED8F5099AC2362EBC736403D067D95F379CF44F3F87740C01DCC3A870D
125837CA28B754F35C5874A9204432243E66A9837BBD9920A5FF22189B85782E
E6195EF6ED3B6830AAF55514AF1C63E8BE31F1F410B1B4BFC44C3E7405DA63B0
5F451A01A993B6641CE1F15CB85317CFD5AA48A8F8DD351882D808976A265030
337A8DC576F4A165DF6415A5893135ADB098022E7B84D9CE71BFFCE11A66AA20
BCE3049F990744F6BF1261BF5F17C6202574CBBF7165183946BF0855A675432D
0D3BA6137B672141302E0C9A9A82F0FA379DFE60338A73083C4108D9470B9A6A
2D88BEBCC30B850EDB381163192BB5742C3A1EE933CD7D3D2C7AC2D5BDDB2548
C6300FF4A5362BAAB8F50D5EAA8BFE9F953BF0CF63093E310562A68D662F0F8A
E1482310DCA6672C452F9D35CB11D347779A5523F607B504C7A0DF01F728F1A6
85854A512F7B0BB9F40C0A431D263F22D091D0F560ABF27CC28850C4CC8AC536
7B366EBC90C9E374558153AC833F4251F04D159DA667468781C34EBE11B77F7D
00AD989DF67305D3A25280EEB707DD2DF0792DC67F835A307680724ED3CA9815
2A36BF36D2F51784D216CF9950858BA54CA7CC4A17F54D043B5881BEAD0F3FA3
DDE2C62A9EAA7B5CAC4A2E427257D7C2AE685F7131B04C23ABCA88D3E224CC0D
4C47CDFD603270F3CE1806150C2BFFC46A5F71375D722DF6ADBEA3E9F50D35EC
6D1D463D49582982FDE4EBA45699E4BB7660CC8A938AEE2340AA12BB786CDD7F
AF7FDE25222EB7D1B85B203D71DC802866F884E753A2A0FEA464ED04E8C7CF76
43E89D5BE373C48E9327862E9C661AB681AEAA9A670586F9ADED6DE71B653E1B
5F49E9CCC94270E49529011A9EC366AD4A745A6BCBE22DA1E5D4695BD0ED514D
CEC1C0B3C7D589B1CA0D10DA32EA97C42CC132FE55FBECA07BE6F152F1DDAB70
0B6CC69B9A1B63AC5634E056C0F79EEE9D91071D0413F4FCAEE18AF239FA9A43
37A44F0D79447E9C5ED2573FD9DE75A1E4D7B0CF43B5B28255712F2E5C5D0F68
D1B18A4445F192668A0F4AB8C27EF1DED74EE602FA579323C5E59E09A4F10ABA
DCAB7204AE358E7DDFC645A619BC423F77E4C7DB510BDC32FCE3B34EB4DFC3D2
A1790D49EB6412C2618C640AA60E3E1C4057B07496F619A02E659CA508BFB769
7284F9D5F89E5798997FCB661211C72C553CFB252C7EFE330EEF63D68123F899
F1164FAB22A392B1E463EE135D9D9C902B17B51AAC0CB2528AECE9DED5CD7296
08CE8AAF3A48C72C78E9693F6829E3381EDCA87B9DD51F01AFAC344014375F62
BFD0CFBB4C097DE0CF3BF39C25138064E46C5E5A503C8F0D77EBB70150A2C54C
D77EE5F902FFDF896FB2B71F3F05B60DD151712ECD1C0A710040E77E88BCA0EE
694D1BC7F57292ABA161F72C87504E36306E6B4631CCE454AC5F434DFBD7B601
80DAE6860EBDF62FE4F7FE74ACA3475F26B881B3477407C51F4EF185AEFAAE39
BC6BB6BEFF9DECE02DF429857C99EDB3FADC61CDBE7134A84685C012D596CC56
7D03D641C190D9CF2039A003B0D1B9D4A5E9539858CCAF28AD7F03CA78B37667
40C47DFC68C7D18DF5EBBD067E65874AF23CDB0DD546C3D2F3FC1DA14062CF64
4CAEDBE0A0DB2CC5E8A65FBE05F8891932ACA1B50E852E5FD47142F762E107F6
91AF9E945ABFF26CDEA98112C2C8B5CFEBA48FA8766D132335B2A4940D4037B8
1258E54FA714BCEB9D1A3A2268162C687171D0935CE72073D73878ABF61030B5
A9733F6B21D48B4E59D982BF9E06969E6BC5E6D5DB6A310F723F5519F243C73C
44EC877FCA7389A25DC6E9007C357491BFBA0CAB5053A1A14064448BD3E8742F
6F04C3DBD06FA0669CF7775414D07B3F5927ACFA908B12495A477C1D326469AF
678848D0EA70E5E9B6E0D538FE9400C351D86CDB7C52B72879152C794199C3CD
0439A7BC2AA2A2C038FAF787628427381FD3DFAB68A367D1FC762962B0D5A0A7
6151A94704E28798B4BB88F6735E7BE7B26A2E25877E5EE22DF07A30F745BBD5
3201C75DFB142D13285E87CC401FB86062722874CE85E3AA78FC49D68F7F48CA
C29A9681715FA7A75C14B685E2004635A717A7911245A671875350CC81F20A83
DD496C36C24947A1EED27A40109D38DDA5BEF5075B4D37B7850C4B8FD2D3A67F
359E0963E59880303D59BE1D3FDB4BC86873D179D88A0A94D2B63DF18953A8C7
1289CEDA0A84C9DFC6A98895446D46E90D8C93231CCFF8B18526D4B876AD9E08
87E13D0D965AAD25730449352FCC07D4BC5A15613AE032CCE548FAB0C8D1C07B
A89A215C8FC1470D926D6E7D4C105DB43791E82077A55DF592632A3E6730387C
5E7CC9F09E0010533BC14E56C291413C501E0AB5C62A9DF4B29195EA4378CE94
2D14E1E9AC03B9A0085CB9CC1F693ABF03C400DE4379F746778AADA0979B620F
84259EED33AAB9D7B7BAE9CE7EDB09A1387E31A3179211295573B72AC403274C
694E5D0DA0864719499BF534828BD05FA84F2458380F0F83803B5353FBC52704
28C8F57AA1F8DA68D133F004338F3589A99DF60BCF37D594B9283EADA5947913
8F0A4EC6C6AE763CA422D6755320D01602B364C07010B5F178CB8C6F6AECF2B1
D346F644A8126EADC4813F842A5F5EAE1946E75E8AEC58A269D0B4B7D9F78D92
C884BC76BC592152756DB6D6B122B9875063C2DAD8F9A550781DF65AB43D7D05
C5E39FC4876E46195F82494D322DE3779FE9F8714B518561B17A9860DA936CC6
1223A77214FFCF55BA91FBED2B28C6D74015EE6CB698E393EE5B7F4D5357992F
6D8C8B9FDA94874E501104AD024DB575F3504749F70DB717EB72DD4F6B4CB9EB
614E23F7D32B7AAA7361EC25C282B6A0A49B5EDFA8FF2CD410CA5374D1C2D78F
E64DB80B78261A2AA913F4FC32095D22E0E2E8717F0CE7E9B0693C6CF02B469C
E9F2C4C82CE70C176517FE9668030CD7EA9F222E44FE2E6A8B1E5252A9D4BC7A
7CF1A9AE29408762EC9F22D923CA574511A78FD505E6CB052BFF9D02D00F4561
2764D8E27354230BD298EB33D9DD15F881DCD822178A446D8CEC5AC289BB9BEE
6488E3781B1FEC0FA77A4F9D4A077B51B5A149D85E5803C606BECCC8E16ECDAC
540523109C2D67621B6EF21D2DBDE76CEAF0B699C3032C28D3CC3A9DFB4194DD
4AB3AC91A12073495CA295BE6933B1441A825338B3E019174B8F1F6C9F49A088
1C778C74EF4E266DE64CD9FFE20059D241C6709E4871DCDE8EC3694BFBA8862A
330B515EB96D8CB78AD3E99033081FEE7F85E61AEB6C09620FC5F2BBCF76FAE1
ABFBCD46925290932DDE0D4AA0E3CC3C51F181D90992785B8D77F24BF59E3D1A
0EA3A059F6075A69EAD7D2EE94F53C3380BC1F17536E1902E82B66A4511E9E63
F2D7A853486251992EDA8A76508FBD4DC9F1318E794ED89C47409E478B59FA5C
3ED9C725B93755E8315784661CDD3CFC4D87F864F3D952C3C7D1A53A98C95127
837879FBC5344878436F05BE2C5BEF0839BF87DD18912FD7D3646552A788EE6E
DCEEA21BEBDB854D0657819F4A6D5799A8B95D1CAF5760DF13030605F7BED34B
F377544C4FE0D9E2CB94C90D217AF778A53161CB156A7F8DCCE5CB3C0197B92B
1E413DDEC857FD28ED582E646B346E4D93FE54694EEB77F329BC4A761605889F
AF87884BB606362C9871E1A4D4F3A0DD97C43EAC87B96A7173DAA892D93832BF
7DAA190CF4FCFB72DD0DCFC91E50358753C897AC2A47FB4AC5E9B50E73D9AE90
3E6613562221FA90085DDE5D7DA6EFF4CB716748BF93CCC7C6A83E5EA7CC8E1E
C71AD88E87889F47C668325DD037F853AC9428E88173DBEA327228CF763A6954
B432891B8F2DD3428DD96AB93E3A62FF73647DD1FC0623F8517213544E8CA05E
5E6111ED239F4E4499CED87A0501A4A39A2EFB470DFCA7C766EF8114F3027275
2554A64A69B0857BFC16F30531FFC2D3463B820335ED408C1F2374FEDCA87687
CC113B93086450749F59CC549FA14AC44E77FA872027C1041723FC113A457DB1
B4C0B5DDF3DD248B8BC462230A005D972B219739022860C06E72D4F82D7D8BED
7A557276FF2374E36EA9667E9C4D83910926C7B1AF5D9210483ED3DF45731C69
CC6EC9CD8DD59FD1C7F22A266FE7BCD92563CBCA6C2C6B50905C92286EC71D79
EB1292E6BD02BB5C388195E8035A55BA3C769132EE95EF6A8A8FE7596CF501FC
00C265873C923DA723401541055834F51807453C7253F0DA055DBF8A0A732BBA
A284751FBB466964587B2F57EB8D5467C1ED2932DDD7D974F59A929CEE826F64
08B56A3E970F0BA4F7A4C566C61F054D8C429F0A7AEC6F42E3C7976EDA674C57
434FCEE9AA048B59AD93EE9AAA8BE98438C6183E0B94ED8252991A78663B92C2
D4B4ED1204D2B50EB843420ADC081057601DAAD9BDC21AA65005CCD1220CBB38
6098BA3ED1AA95C72B7D9B52E1643116E662CAC5F8B14B952493BEDC9B67EA93
48596347A81D5448A78AE0722AE99AE00B384F2E8D9F9ACDC867171F0BF2934D
7D66CF8B3099B051B7D6BAF4F76C41856986C1341AB0F1FC68DCCF67E1AB4EE2
8F46D77A2E3C5970FF60F5A8EA6428A753A30883AD0E478802D0CC5BB2D00665
5BBA3AF2BF9C0EA3CCB2B7DC11D6579DA37AB425A5E3124AF58E8D7BD54BE090
8444365AF1CDBAD2238164B0F1D3366F83D997A4F7DC268533FF505FCF55D409
355C829CF9D4AC5B27073C16AA8B80A61DF255239C0BD691BC7D052022E889CB
DB888C84AC7DA666954D63F5634D4D446F83297FAA9A51C82D6FEEB1F8D584F4
345DFABAC4C2122EA43F24F738F371A77BB00E9A42DF896CEFEE3439663090AC
624D90ABE51EBC2D7D69260FA5632C0FFEF90A864DFC8050FA52A4328ECC575F
3DE18E174F6D518807D02D3EA7E77D79E47029E40C4B5B596817F2378876BF4D
2C305337055B9FCF4542133E0F21105715814EFCCE88F9BDB696284A5BD9C7B8
019222FE508BA4BAFE39A5A2B5ECB118586FB381AA8928962F64F44664D1AC53
7D31DA7E3F61477095D537A796741EFB75E1F6A834A508614C4541CE81A539F8
903A760C8780542A78C7156878591C85D37B4526321909E34176F3E042860C6A
FF44BB54E99F6CAD5255E12F68DF8FB77A6480E97748EC9E09B9CD239F61DB4F
FDD73F1821C85C6847C4C503F5AD6807F29A6109796D1854C1EB1A0510505B5B
72BF158E72300A2CA19B8BD40D61E46A153C3C25D0C7DC1256F76599ED41F71E
CFE3BF1A71DFECA66E04F30CC7FF04822E9AE3FFFBB92A8ECB72DF7B32D9007D
52EDC516EB48845ED9EC42BA3DC260B1E0CBECC7898D6AC135BFA75A9EF43251
1E003BD366409F00A683B123A0576FF34E102563C5798C446D447342C7736BA5
6BBA80EA8BB281F750744608EE366E30C5CB623702C787D6FC4EA8E472DF545D
24A3DF3E216F728D89D06EA5960EEAFFA4BC41DDB56D3D5FB07B3C626523F230
0BE6193B8B8B70BFADD6913C261A9054DC56953E9A8C9C7D8E3B9949E46F7FAC
4CA92840DBD9A852FCD1D06764E93EC2A6373F36A725F5D7D3DB29675C6C0221
4E81FFC726E6F7382AF4433EC880CEA71A4BA7830362372A0202BF126C35FB52
3B345EC97AB5684F3269A8FDEFB9466A4066E81C54781C05A71B623B6F8091FB
9D94210F34C1056BF638CF863B0B463D06B0D39916C2BFA9548D54E24C86F131
44CC616FA04BAF43DA1C74EFA205D43BF3207E2C3063E6500BE5FA0703E25105
A09E79B0AA18A1C345F153C67290B290324EB8365B1A4507D9F708B799C5966E
0BACFF824A275DDB6A89D89F5081F1FE0DCA40F04BB802417BBEF56E3EFDC21C
AA28C35982D81CE2A83171CF2BD29C23074544C9F4CE9F86205CB05F370A1F20
1B5741C02CA87E5862A9B1F1A1E4230C4A0A0099D280AFB05C2ED4A5F7BD5CAF
A9135CC1969E474F2C2E0CC3933A1F5C39BFC5CCB48C3928DF8EC5EEE1780A78
C587F31B62E3BE1991CA0BE1D908E4C512E1AAE11085D68EB9A7078FE42912D6
658BF3ACCF715E63468D6F77BF18AC181025AF9377005A6B6FCFBFF04C73D9D5
5F145963B6D0C6B27F94965C62BDDA15586DAB0F3D90947C94C9D4473D5A9C49
0EB3B6FEC5A91F1F266609281D84C24AFF9C656CE8765F7A44066BD4350EEB84
71691D2638935F2489E87EBB5D3F92FC7CB45520B129C5612B04ADA368E75CCC
7A54048E3F48D4314FD9EFABBB7D77A8828768D6F4822CF05153D3E5A4A71219
C38592C86237B17D6A6026A1F39941061598C84237011B4DCC72AC6BF31E280A
AD4A686AD314AE577FE9448CCCC17BFFEBB66F78E2C6F07B071AB9186B9BBF59
48C2C694137ADB9AFD39033A42F990426339FD6A95C3F46780518D34CBE784BF
7D6FA959014F0E9A6E8758CBD9F6CBE68F5CC53D80BF9FEF50C6C974CFC51ADB
D60B4CC365B29EA2F459498BB8DD44A5DD3F3FF43551384B8E746F870E68F4EA
8F994E54FB3169DA2D3A10A636DE6B8427381FD3DFAB68A367D1FC7629642E70
3FACFED58772BDD4978BC0A27D0FD32FCA51B070DAFC00C67B49D501CAA5B861
344413F1F255717EFDE079EDD6F3AFA7705CC40EF32CAB3866965D9BB5DA96D0
7E2CDDC0C6A9B7E683199CAD092D5611A19657FC7C982519BC3A09A9D795F030
7C776C25071D0B0354CD853222F53920BE2B47FA5F9B2204FA846CCB1904421D
A3242DF909297315D82F74BF79F47CFCCFDA431712371A143FFDC83A9D7A88A1
4159B3A436BDE5E19967A80B304325E3CF06E9B2468083435CEC83A6F629B801
453ED2F28B1B9EDBF53AF1626D75983A6C3B383A6FB3025DA828E12158E4A9C2
44845DAE8BEF77E829EB5FF3C2A88A4117E0DC93A95C4D46B4105E30246C55F3
4047D3E05B101DDC75509F64E99855336EA75E82BA9E34D4C3B896C593F85AEA
9FA0EACA669BDCD4F0E2AA3438FAC6FC62FFF85796B81569886EB1C9C20C6CE3
5264953AA806F512E976E351613F23E810E145B329EBD2EE9D8723A6E28DF047
68CC0AD74EFF6DA4523F8298CE381D567C22A1B58098554491340EEC6BEB2AB1
AB21AC051340F5C24A518AA4D57F35D454521E715BE967990071BCCD21A8206C
5C40608203A5C662F178E9F0671D80ADFE316D582C7A94DFE656954A7E9E5ABB
1154009E0C18A6CDDA3DDFDDD88F70564DCD8D03F8905BAA1B6C6A386B924491
D64E03185A78C61F7393E000AA41F04375839EF5540A30BECCA0318EECFED17F
D37779E82F47ECCAE0749E97B0D9E4573F7B6BE316D8AF143BD93111D717FEA0
C56A0C86CB2804718E1124A0C6E82A0FFA58FD013D9EAD2D88B01654F4C983F8
1A3F877C027FFB0F440498A023876736CEC917E68548A8CED2095BFA7DF83AA8
9AF9949188A90AB9C87E6AEA45F9C3D2D7DD49A5121D995CFC630B9E1360A784
AF0AFBC5982F003CFFF22CB3EE03841E657F3716353FC1A8564DBF7145BC5F59
B4395881CCB81211038A6D38763047D0180064377806909AE2A524884E52445A
E7F45857949472A9005CBB14F32F1C3D39BA8D1243BF046098D499D17920056C
56795EDCE10321CFA3B1CFA4BA5DCE1627CB5B3D175E88ADD1EDDFE83055D809
6D73F650F14CFEF80336C985DD66CD26DD6475231521FB620C2C1C392677CB07
502BD623E63F673C4922CC21BD97066F37B3B40C4C9DF8D4DB0AEBF35A2AE606
51A930E97F6E2FF49AAB53CEACC4610098E8E203760F07F84BC5DD2F2CD98801
4662E46950E002DD1EF770BA4778296D06C85FF4ECB3E8711A7D96A669411066
9CADA14CC5D48364F8273880ED40DACA3BC49CAA5BAFE5F553D5507EF1B5711C
32E17928D26633B242128B907F82CA9CA946E84E8396F18FB4D1C9F2D3A6D13B
C6B93AE8DD633ECD288DD69057F351AAB2D25E6D9A09EB37455E03454CF93DC2
E85BFD19567EA7C79A95C907872F5603C27A5F76D534722FF10FCB40EDB69502
8A8E84998F5E1689C4D585728A94E426B23B8103DAD5CAE80C6547ED846947C7
CB0D5BF28CFC6DCC07D024B7569AB27C1A79399593D71AEEEEABC20A0709B11F
311CE63E0D94A75D85AE1BEA97194A2B62D7F5A3AF54BCCC1ED05DDAB14D19C0
7C64F7E34AECAB27A1A571B1D127B4AE78A4E9D77BC70743C30BF59EDA5E6206
FB74DD581040F921CCAF47EA535BEBEEDC09E5F9CE40F7F845B1EBDC5B1136FA
BC9898C5721FA9A64D8959043EA55562933CBC859DEB55EF822F5380F0E5CFF5
154FD2BB8D15422F5AF9372D3AD61B2D6CB66CD6BF4C733FA0CF3832B8A12016
A5AF5A64DEE8D4BA6042FA195ECE203D69FD06AAF8C72659580928F44039EC6C
77923C16E69883362F840A947FB0D690D6005BFEAFCECEDDA1F3DB1A0C2DFFAA
11B149ED60FFD0C08B8C765679FF0FFA221A10977BBF4ABBEE79E19BFA83DA58
B7E0B86AE371F88916F7CE9C3787474FA99D22AD65B7BF32BD714A8F491E2808
B6A9369B642D5FB4378B048A811626E0C0CBF9A367930A8015C023B5538245F2
C015FCF5F235343A90F7EC9BDEC0E8B841FB5BF2DF389AF363A8D67761C0F2A1
DD706C88E65030E021D4DEFD6F871F7EF9D23EC242624851D8A184C40A73B179
2DA8AA5429637130FA6B1435B35CFFE1EADBC6A675A7CE095341582702DCE4EF
EF3A673DDC442F02A39B1C2274D5C4E09D5EF58E253DC0F8D3DDAF5AF7F4AAD4
51781E12C156A0C13989BD4CEDB7186444F1649D8A4E15591C09734249B37BEC
07959F1920EB0B6ADF80F97B2DEBBFDD58DA9D4689E5D207751DE0B86F7251D8
0BE818D61E6740F1523F30B48365C2A8588440F9DF56D327DA01637CEEE0B707
F36EFC28E1B3A46318DB4A058B98CB92367AFCC84723B22E05955082E1FB3C5D
A2997D960DBCE77385E78500879B375DFE6258B3610AC8145BFAEF69CF8C1849
94DEF49D77D9F3C98E953BFCCF3D7166BB4BEFF24F60924D537A4B2E5568C871
A39B3C32BDF8A354C9CEC1281F96770C9A13B0C2720DEBB9432F01A550980BF0
1404E87440A3E6197D5DFE27452051462E2F3A2E1728C6C32537B33DCE4EBE81
5CDEA4631EE275B83B62D4195BD05545B04A521EF4AD03B558F4AC437E82947F
58A30DC4C3823185A18F10F21A04C3CE364DD00222E3135715814EFCCE88F9BD
B696284A5BDFFB2108B29B09222E86FF1D890EE2689F27AC0DBB5659EB4FC9BE
78A90A8BC6988EC021106493CAA0667D6EA67095F7E64231E9D8A5F942BA9513
5C08ED14956234C19F7580C2B003661EF1F2729556E93802297CF25F0ACE1D65
44668A511FEE990DA3A112221FD4161E90B8C7D900193CED0B6E1698F966B4F1
C15961D374DE25A7B0EDE87EF9DE8BF75DC41C003B05ED038B66C6CE38A97957
AFB653B04F2614CD81E64F1C330C0EA23FFB44437311BC55643D5AB23257F948
4534F38C37D19152F9B99F98DD697B9DD91E41C8DFF89925CFC5D85A28B616B9
EDA1ADCC3616A5D11228209CEE30FA83953E0F95D11C201018FE91AFD0B44644
1E0D4C268B79B86A81A3041A6EA24E085EFD18962E446D65DF0F65EF55031CD3
8EFC48EBD2582C723C32D368C2080CA8069C6B0CDE19AC94E0BDF9F7704DCAA7
8FDB914A7DF0884F7E2BF3CAC51DBB388102E674C972E3A3DDEAA67148875B3F
A6DB4D7266AA1D574E595671D73A3499EBDC256E313A5A19233DAE151C63CF7E
54B43BD28AAC792C2E450B9BF1EE715F65BC146CF13E9FC00E316AD709E0CF9E
BBA3AC28F42EE409EBE71CA5DE4E232A37F459D0EF18D8272A518D7380386793
5EF9F82706631264A3631413D94E02A669BC69A711612F51064C1375A60F63CB
797D3F2267A66FC82706705826819B52AAAD0F72ECE9DC7CD4DE6CEA6D5E8BD5
EC5A3633B36E531A430598881E5E00F9762A049FB15DC548DD9B6C71BE4FC366
2B61C59F2CAF8ECF54E132FB78F6843DA0B2594EE9642FDF96DEA84CAA9A6FE0
F9EE7E854D53B85936B31C808693E66B33D3D4FC762880B589A038A5102ECCDB
8736CDCEC853DD25DE15C6F86294CF38E4AA678BA8A08F81174FFF1FA12D73E7
AA25EB57451DACFEE99AFB89850C6243CBBAD33F74A53E3F70FB08ACC8E0D151
442175A1B1EF865445EDBA2C9F4E71A972E63B498CD052FC87931B81EA6500C2
268DD643900B9DE5B6FD103D2DE1F3B7875616349EC7A6B72D81C1624D48749B
7F8796D2855C1D366F07CFF3950EE828851B409827688B0DC75E790B8C3BF5FA
A2C6D758DB6B0F7DF64C81DA33E9A68B9B834875D96749FD58506FFBC9507DDD
77014C2924CB223E405F48F339DE67B23AA4C8B47CA0DE5E713A988B0833D77D
22C6A4E93F0E0210F030C09354A99608ABBEC8F6ABDCB403F0E9B9F002E0E963
A85D37889376D26BE35ECEFC05C265F81067183ABF373060EEE77393A53270FD
8E621120116AB4C81C19328CD271B372032A0A3229790B7831A2EE223AA7588C
68111E3120000834F31E53D51A3D12A141F41BF0471E32989755B7D83FF58464
7B807D752C9F0598CE0B324996DD0DBA1D8074DC6D874CB2247B8358B43FB427
0DB6395806EBC72923899A0FB79F8113DF87DE9D4BAD3A8729BE2E79F4AC51BA
4EFA0965A11DE5D53C5A66EFC05539C901B03E68FCB40F57F3C85743260BDD24
1E10AD256DEED77B14571B11FB879018812A646471E9F0C1819320B766793F24
9827D7B0C791FB75399AEC03FDDCE6A420A6556B0473D8CE242D56D62EEF6079
504A5809102BA714C1D454282A55B106FCA0EA4DA15F0FE86B4060A052979EE7
9B616B0E85A05CB8C603B43394DF2A4E2C4B1EE23DDFE63DA3C7C8710FD5B93F
2775696BD36C6DE515EFCB9F1EE295C55CB1C2F4E43E67F00029F54AC2D89675
1FC8A196672FAF4F23F9D40B1956EF5BE0EA84B15E6A8F1FD76BC306585A1225
8CF5584E8048A95BDB54CDEC59A4699BD9568E2E9A1BF9D2E5842CDDBF74140C
3E06CF36C34709E5223CEEA0A86C9C89D9BD6F7434E9462CA6CE1CC41034FF9D
DD7C0B479B82352E0497AF024C1D02D39B4380965AE8EA3789FB48CC5E29C2A8
6767D2874B817EB8E064F4DFDEF28601CA4F43E13DB57C81054245EB54984558
81367B21D4B71CF5A14A3269EC5DB4A9580916DE799F5F09D3C6656B3F87A0CE
1D458591A88B2F51962CBD6085B3E530D4DEB4429D777D6C653BF3C326945F5E
C60809A9F78E45BE3409822E5A52593C997CF959E00469F192A288CEA5E41229
3FA1D62FCBA2BF778FE68559CDDADD31F2F3BE22AD097C23E3D43BC2A5698E1C
EB0B5AE3BF68F02A192428D4C5BDF2944DF4D3FA880DC7C73D37186DF6A9B62A
73482C427DC7C43DFEA873FA4F3241FE1CB13D5E4D777BA1B20B2DC5E7492FC4
475FA531D5F9AD0026521621F41AA3D7E7FF53A0F7161618E2AAB51A9609808E
57CB966FB9721A3FCCBF9B37AD7801A32386E6AA48764C909B0F3E3DBD53B7CA
9E411AD23929B0BE66C7C79F5131371E0D1C13D02F8FBD144D40AF22090580A4
CE7CE922E05D991CFFA63F89B994932C81844CE88B89FFD650F8BDFF365FBB1E
F36BE6029B707453F8EDFA049DBF73D907E4E856D60F007C12820CD75104A1FC
3B39B6F174FFEC15B2AD9D2B225CBA3B73337E0D1FF6E3B2E5004AA42EDC8E67
E316A893DCD1B52B1C14C88C1767D8F0A4AF967900FE599D419B3E98788FF157
F2DE91B7552C551A93A97E2F142D2EA8A5C2D3D467A8805ED5563F49920F9A07
3E9A0931B90650E6FF796DDCD038BFF2B745A8022BD9ADC9353BFA3BBF553C2D
E2CEDB734273DD9168D6D4F2D9077EBC356F8514797F918B34DB9422D197A64D
FE86C909ED4026200A9FEFF374224E08B2A88597E43EE109A13F97843B172F72
82FECE1279354D5923D7A9D25672C408D6BE0DD214F79A08B5FDA8613055B7C3
34001273112220F8300193966BB4C3A0DE35572BB63A7B90986A8C1CB456A012
97D4938358081189E3226F824BDCEC9D42FD75CE5F5B3D5A5F9D7CD2C87E175D
0435404EF38BDEAEF0BF8C67D2CC7455C4A914FBEEC22E21BBE2FA148D62DF34
40F95E97DD9B83EADFE0D19A48F5F0D556672AEE047F1A3924C079144821781D
DE65520F564E8FF997531EEDB0EBE6B76E576780C1621225A259A2C390F61DA9
BE399F69980BCA1870F9437DDF98B5C5E6795860F8EB626A6C452DDD53A655EB
94E2FDC07E0435438122A624D8D71978CF93536FD0274C5DA5A51605671FB420
12E8DDFE23EB148AD8E1E23412FD61F93B0224ED596C293A3F2DB8A1C8118C56
61DEA6D4EF824E4E8DE84D6B70B315658DDBE16D82BCB452E2F93BC5ECE2C1B1
98297D4CC32B1D6B7142F88FE20A5AB8A16663EC4ACF6F39971298918312250C
1BB477C45ADDB33BAFC6FE5A71F6077A28EA55B38F9D2E026F45A03766C13E3A
6E5ADF4234D75CCC07F748AEAC673B9A3CC07CEA9151BB3BB206A6AE130E3961
AECF0CEF5235E1EAD9EDDDA6B443B60D1B20A3D2F22F4D82468A31EE68C2D6AA
1703682A4671C30E226B3861D674E27F696B442C31F0BEC519652AFE9476447D
197D259E79B8A5BFB7A119CF9009266474A9B6A94BC1A3F7DFFEDB3327BEB4D6
B83004923DF88971112DE0551410F0175B06F454501B1025AE0F18E165117EE7
3470A453A058CC424CECCF0CBBBC526DB2A3F53F28CB84850C95BA42E77E089E
2C293B0DD12BB1CCC1BAE80992529539B990706A7E05D8E62B26B9CA13E18DBD
66830A3CC3202761617AF55B678B6F190B1966AA20AB390E42EC0B89A5A5BFB3
05B918CD2D0B6EDFD1CF9318640AFD502DF08D7496EE9341D32AB3441765E123
8AC2BC2F8A98D16F60B7201B996A7C66E0B2E15B66EF0E8B59A6A52B3C5BEC13
B783E6A870317DB2EFA129D784901004EB112AE678F1979B767AF62A5965A160
BB04EB45943BF7DBD6469E715E26AE66082B43864A50D37E8C350FB87CF551E3
DB68463C2C73438901B700BC0250093A7C7555C4FA0324852EFB3480CCFC3B95
34BF36603F3F77935F24EA6C597FF33D69D02627465E8326ACE6F0E9523EECAD
6B0AEAF364AE4C80E5607CEFC6E723505EAFDC5CF7DB813E365F3AC66020971A
09CBCB3004F5E43D8344D989BCAECFC0F1C4319DFCF7BE6724DA4A9A860C3B92
961EDD64636A1E9DE835560FEF4F937EE71C47A262C2D2385181E3F22BE45C2D
6F1E364A30E8C8E5BFB97F824479739F7E849AA97B2892DA03EF8251B1BE7AE0
4C0CA35E0639689602EBC13B14F637A353D5AE542D94719AAC9EE1D540B44022
77A83331201BA5A4AE0B9FEA6716F601BA31D8A0E1DB0A9DB08CAEB99C22B2F2
F8608CC44B46287016CE1B8E314D87507F1FE502A7D952D8E73461A05286DD0A
033DEFEDB32694A9D0B28B7B42929F29AE099FB7331038EA2BB3C53D1BB66A23
18F38D99F67408AF14C7EC19F3A13DDB6BC484C22ECFA2329BD21F8131B159C6
27333480202440A0CA36225772F61009240C6CF74A3AB02E841134E4A28CF798
C374B3DE9E17E223AE2FE9985F09DE8EC180522A90FBB1D640D2A6B38F279F98
0D57F5E18BBF484BC0F6FF8CE3720C7938161863B28AB406FB94F5F23C47EF3F
E333B16AF9706E0EE6A07FA53EE9D16881092BB98CF186D8241B5A21BA22E5D4
CCC029B3C232811CF0E4B1F2BB064C3DD0600A57C6044D9646BCBCDE44BE8FDD
4B53ED658D048C5B426A0A3FF2986C6CA295B8746F32ACFE1CA99C8B22018E76
2544A34F1B14E9EFA5B3AD0BA1F17438D27593D7A52ABB72752EC33390EAEC92
58D51AEC9CC2F790E8467F79548DBE174E29CDF1B5AEC7DEB95533ED3F634A35
92BF1214E74B029A7071753D8C57DE98149A3C1DACEE22411AB1C521297233C3
448A51C8E9877DF60CB6BA20A13C3A4C7E0504CE00414630C5CA174C5983CE8D
EC5933E783EE93CBDF7584C849F229D5383797B33623675290F3D98118E8CB14
2DD6D0EEE2B8BE6AB7028715272A329E5F5D845C20C8AF34B15CBBBB07036357
04AEB1AB98D6FAA29EC69EEC9AED9F240435345FA50E91A1707F9B7CFBDAFDC0
B34D10F241C4706B28E605AA5B29EF26A34102DC43A42B35B071221DB5552DFE
B2173E7955B1BDBFBF1418DF7832308EB60CED7D2F5841767258BD28F1C7923F
2B18E8D82BD808A0566AE3EA0E57D5B99D1128F8193F53E23DF2A805FB9721AB
4392D61BDC14FCAC3534C65C2EC005975DCB7D51F1D2048DF06164EDF58F5AE0
0F69DCAB5F4E9D01334F4DB23D0D8F61B0EB7C6E5944BBDD139326FC0699D55B
AA86AEAB1BF329FA98C4C94F23A4A6556E238089C7ADBCAF015F3B223C2E5CD6
9368F0BAC1D9896EFEB11C35A5C1612223307EBA37E7D67ABDE015C94A45362C
74BEF868651E4459E3A12252571F743AF61BD3463DA6ECF445C884413A47EB24
BD060BA3F1D884F26CF41089169426E44CE9FA0FE557779402C184A4941811E8
3649F87C126C46A8C8568FE34B94447EAFD66F6CE9055A3D9E42CDBA2647F86C
EE0790E1E4273BFF14BB6E61BAFB497EAAA77F8BB8FC39191954A6EEE713D22A
147E3E40AE93DA1F075E84FC2FE0B2A3698E3F716796AA10B77917D792EEFB66
790435D7FFF7A471DD9AE53236D4DD320B3EDD8FCDF7A816E0910C57F24FD107
EABE24DA14A90F125BDB7326E5FA61AE09FDB92A63A91D9F69C74D95B368D165
FB20200C8B457A28C771EC6A399BFA14A9C30A93F22CEC8DECE75B0C0F3970F4
444818AB259FFA594046A3FA5028B30EECE52915952C8513B77790F5618A1146
145D300EAA72C7441F142268ABF63F356DB1AE440806E2B3D9BA1091D0461B64
7A9FAD8D2C7353442F8F076619AE4DD0BA4E3326978EA7866559897CF0653AC7
8BF7FB2277C35C451BD6D13916C1B68AFC494F646964CCB875D7E3696C9A16C4
2B87DC2C2C505DF69355EC3E5C1F343AC2F6071317CC3035F9C88B306A2EC947
1EAC9F2C02709DE6FD026B6835D12D487FB29998A30FFA67263BD59BA2E1760F
73F58522EC6FD339BA613095EE3786AE2772D2FBC5D75A7FC59B03A3E675A407
692533DEB969AEE111E75168D70563A337127B6605ADD9A0BD1C7A2F76A50086
A54F076F34DE6A129E6F95C41DEBDAAE23A37D8C7CED1561D4CAE9E03728967F
7D0C65F6999FA3227269364CCA16643C9F1BD0653924281F254FC8A135610C3E
738883A56EE609C160DE8C752E2E45B8C169D7D58221067FF8FCA3050F9901D2
F91ED4F2948D5C3330A0985DE6150645266166FC9C29498F852DB592E10EC37A
E2049EA3D399E3F6BDF65E4CA34B00B0429087212E76A3DE3A67218CF24DEC9C
75381FAF2AC65ED9F9DDD31E75E530C5EB5E56720D6CE4B55F0D05D8411AF327
49D5F391CAF8D0B98716AD2C1777CD8841F8A17D3B8FBC8E3A578C8DF072F674
3A4A26260C362AF7068A8A8E859CAF55E46F84B2E3960DAB18D604C9E1285AFA
3AB3AF782E48D7CE22ABE468EE483C19A5CF2A51F61981D2A539A4556B9A4308
12D6195322A25CA5ECCF3FBFF392E9559945B50F4D7C40696774E35E6A9E4FA8
336D6E3FD78756177FA1A6CDDBDE5CD4F65951323731577C3B60CEEB3AD77C07
BA81527F97C89586F7CCA1EB12675CCAB12798624E84F8656A6FED73192BA9F8
17ADBD1FAE698D66DF174AB29E242F90407746B9D6D8F77B1A7A1DE94536A24A
A61A47B1A58C3DC14CCAF497CDC4B39155C33B65E0BD277B17FB4B643B69ED7D
8F45E68F2A60A84613979A3DAE4B8D2A0F63A77F07ABEA1BAA714F6CBC3DAF2B
9D536EC849A4630F4F173876694CE76949F58F31816635D2412028C1718129BE
2CE5BB23092A27A5AE85B3B56C6370A3542EC04E6803AF2582F5515AF13F6A0A
49F6367351904E1E2865C1F737A428EDEEF2473FFD63B302B915FF910E63CF73
6743B84BEE7156AA61FF86610BFE936F0A571CC81E82250FE4B2B99749E610D0
236C1AE01222D74FD830D63A4208E827A9C2CBF7F0C3DED280D6FDCFB195416F
BEEA9C6556FE0BF405D2A4882A8C71EAE1B8944873E8E67A74DE94C10E7EE856
F678CDC3008A08A2A16D9EB73F6EEB2ECAADF1C109B63B0B10874FCD812D449C
A5632EEF618E6FB9645B608F03B4897CE7461AD5BAB068DADF6F95FAF7D1E975
3CB3EE5241C75A3E4A2E69A8BA7556E7DC1FE4052517107A32A3990936511260
6804D0E68D704039DAFC5C05855C1F6DBCE36E6313C32A4C728BC84A30E133DF
5BFC5CF31EC0CE6F75B5CBB4E810DEF0921A02B0D1E6068418F41A007E62F059
69BE76B9B45B043A1FCF2CFDCA9AFF9FBD0A09487138C3176DA0C04E0FDC543D
B3B02ECE4C75851E7951E39295F87BFEF314993EC66F7B9ED637163BDB11717F
E7401CD0BC8D5DD424FFE364428BDCD23FACAD7C42490546598B1382AA53EFAE
26EA9694E9A5273105F11543F8133C32AA1444A5B3718C3E9F981E76E8FF657D
7CCFD8957FA914BD46DD9D5448E85D01F41E5142CC0A7FAFC02A20E3972BE90D
F409488F510E909C721E24D014879A246E321EF659D0D19E4B1EF02FE45A4D65
C13DB9F96ABC40B5D1670A21D840EC9383FDE56C1874390660C14E283BE960E5
869A967516CE23138B98E6CFFE8187EBF064D5A975F6121234B3D8EF25A3CED4
9CBDE58480FD0C9E9EE33528A11713AFD9520F86CABFE102F0047B3476CFBC69
9206E2DF3B85F29E5096844429BD3B52AC6F491A24F2CBE99DAF861394ED682B
D914974E5A0227C679528C9D5BA28781C1FAD7BFC6F91230E8CF1CC32D55B845
8C47BCB678ED15459D627A9E65A1323BA915C106CE08A081632544650F926F91
B7B84E228C4D5C918F2CA4FB1CB68EF960D01A54E1B71BDADAA74B4068077057
43A7238461042289D8B3E729DCE5D211CB05EB43C89247F1D581B8DCB886F94D
51A32B031775B8A30ABFFD3215A143AB621FC07C3319391C9C0F1501308E8F83
2434FA4DC081442B2266D1431C46F8AAA08B1B0BB86F9EFCCB15098FB08FFECF
AE27F49E6F0A52ACEFBCAC72D73E65169DAAAA9793D0DBD102AA25E4E52E43B3
7906E1C4AE758DC8D7971744DA02FCBAFD56A6415D83334B829C83B3C93EE951
5E9C5CB3943B9D00568942AB2D85E122417E23C75A6D6066D0E23D2D1460913E
0D24AF79501D4AAF1117D4ADA03CB2AFBE30987B1019DC080F678B7E5B378976
945E19A05B5F0D10B9A47787806F9F69D5E10CD7116FB2DED29C9DE80276197A
7689D0A96C89713212EB83AC5AF8C3254846AA18D71F3C765A794E87E45FE582
9CE4C2A656A6F430781CC5BF9739264A8EE1265DCF82C186862D7EEF9F827F1C
C5E65B515BB9489CD0A12E2586EE2B0E9DEB3BA8B06F7C69451728CF35A18622
F2C49FF5532684FB8D0F4A7136879F0FAB0930956AAD16BC525B3593073BCBBB
984CCFFF49945CB5D1BFC428DEE9963A4596FB29631B6F7391BCA4E76473F2C6
977BF5D17D8D207E603304077B139B56D46FB9A4B093EC160157567F48B332D4
210E053D217057104EB02036FA8CC986D7996F5D37EF78BEFE17C2D518B07469
F871F979B0CF6DB13144BEAC7E130204CBD6CA04405C9B2A8903B0D202AD890E
700B9A05BC2F952CB05DA5AF20B551159F13B93D9B5C2B043960AD99B695828E
511EA649164E976E6A2DE3580643C2EF4D6A55B5AFA1C37B10E3BE7615C82FC3
000FED17EA056D12DAC64379EE629C95B1BB7AD6469E23050DF6CA1D73E538EB
6D4F48B113C0CE23DD088D7E03E597EC53A2322930BC6BD6C485107FC37F18B4
6D7857FB335448C16C3980A769A82393EC5E3A2EAB2BD07F3F3D64DEFADC5012
622D1797A899AFC90120FD7ED73DB24C8042A5253510208B4B0D7DF6B36367AF
A422BAA634B6D413CBC814AF034D8886E146E74BEAC062F8FE26A02632ECDFD0
BF9A65FACC14BB93939B5B9E26AC8899CD0DD0341352CFE0239C788889DBE2CB
072755973D56FD5C1CC7E9B4F96AB94C3421F3E2F50D792A3EB9FB4E1533711C
07DD5A7B8E16DF4C14A43F3D6F9EB6965DE9588DBEB61C2463D9DC4791447D4F
0AA5585589CE492D8845A6B5B355E95EAFD6989386C7DF2A8EDD79C1FEDC28B0
BBC0CE198A3DC7471C53D6A0C8B0A6894A97EA26FE5F9C284C70B3887782B21F
6154B5B458D75D286477D04EBE5DB44B15C7AD6CD21FA920846A32154D39C713
1555AF7A866B15C8914139C28D5D074B934B26ED59DEE755D0ADA383BC3E3DC3
5425E1512AB06A575FE7FD3162CF242FCA1ABD971F397BC945DA45C49E7382ED
C9D924BB09843A5E0713DA04D41802D11CD481B279A1AE06EF7E4366C62D27D2
91FA4F8FEC19BFECF91D6547AE0EE608A8C37BE31B8BF811D4DF910AAD34C379
47EE4C5B2F917370A117E46EAA5238DD087C88E82F822FCDC58A3796B0EB3186
0E74F649329E0C00E98009AC80EE6177D9E09E418B68CFC3CF6B78D38684C8D7
DBD0E603260A2770FE9A3C115262786E8C2698F87056EDD8C2AFF2FC1228C0FF
3458DD2256B631C83835BB72CEE456DF62E587D918BDC79A29F5708FE4EF0321
C0A911B7A4E8041B1A13FD266EBCB354B51AE29FFC41FA65EF7C6391CFF3DEC0
CBF1361C05E59443622A96522575D8D86FCEAB44FE0209FBAFCC9140BA35FFB8
0AB48B6BF3DC2DF69EE874DF3C2D2533C418922CA15F914C576203DD8A41EE4E
56E83A8A0CE8DE1F408884FE98C1383EDD312FCBD763B0796B52B9CE34558558
65BCF312236EC000852A744AADC8BA2C0BDB7674A2CCC9D63F56A6398BE03DDD
1BDACB1A00B9E29FC47A0F57EC4E54E98B4ADD86BF5F81BA215107AF7F4880B5
39B756E12586737F89666B3EA353C166CD05D5AB7DC23CF5B04072FFD31EBB90
DF8B929E806E915065A8E9FB50C6CB420E62D9192A5B54C9093CC65A6BEF4AA6
44B698DB9E6748CBD7600BA4271A835770DB51CEEC9B5491969EB5069A147DA4
A0A66EB88EEA855072A39AAE37C11C32B06D9506BCB1058955B9A28E26D5534C
BBF2E5452BE224886AB603F5D2BC28692E499E4C747AF16C90083BB6498C9487
6F3D6CA88C01ADA276BC559B29CC1D1E472DAEFAAF1CDC157D38BC252DD95583
6D500449949A1BEC88F39F16184683DF42FF420578683EAF5A46316135476B45
A3385300581E9A53DB27E255CF50A21B05052E44F5FAA181DAC881136499BD48
665272E51BEC44D260EE0BDABB0B95FFA8917D4C03EE9FF98551BBE9A1C7D764
E1AE3356B5177ACB34697431303BCD422C867DCB59CEC6F0057724E5877D0D5F
26D7F722E53653DC9F6509B2DA2B0E6E8C5362593190A801E17C57BDC3F57A4D
75393F0FFACD524211AD714EFC5E2A81C650FE0F11156B214DEA1ACA0EE4BE7E
DC04ECBCC1A8989A149427959E245C5878B938FB2BDD29FB35AB6BDCBA75B0BA
1EA386DD7358DA57F5B4DADD4137DC07A40B59473CE3F788BB698DDD4A5EBE82
7B7F1DF5915A8E1E458475C5BAE6206F3666FD9117F33B7B8D8085AC32D294BB
94EB4B81995669955B8FBA239C82BFF9F8EA68A35441FE11FE02BD3682B4B8BB
F447917EBEA19734567D96E577D15DAA7F09F9AA322299351044D260AABFD8BF
208488BF33E2350CE6FDD0E66E06F048096810CE1E8B3882D5707E129C78868B
5680286A3790918A41BD9DDB692B805B933FA51FB1D149BF7186DB8E6971E724
230645AB79DE328522A26C4F1EF4E67E206E11C0126DE1CEA6799CD238FEEF56
37BDCD09552411048A5B0D022B82B7A16DC539B976C05B5B9A1C219D632017D1
ACD206A4D836A170426598A94849C298801277F89D3E87CF798CEAD8D9B243A5
E57DF0560D4E83572F551C7B04BAEB865998F356F4FE1D79BFA88BF4A4338A55
AF91D1015C042CD9ABCA84B5684C55351DABFB171643BF26B853F8F9452C06E6
A2A1AD5A6C64CD5AB47623CF20456E33D416DA1D47B4C78A3BA19BE4A269F1A9
D317D92AC26733FEFC08E384163D95219A80AE82B94AAF3A27CD8EC7A2FFA583
B96D3EDF419BEA000E9441F73915915DCC261EC48981C6269EC7B009B21771F4
BF37C82F6E76A2C0631A63D75CA355E896D348A55CB1748925E40C5D2CAD4DF4
B6A8E97E9842A1DE39B47575918A0B2E711192A3124C930364C14155177857A2
49DDFBE714542FA7431A16479A3DDB388883F0627C637787716A077792E8CC26
0D24DA3C67F37C2F4A045A38F882AAE41482313E88AC303C20366BE1A7D47EFD
2E884EAACF18F03A82618FFFFF95085F2DBAD869EA1278BCDB94B752205C0E79
B8893C8AA1969A140D1E1ED2374909D3F8628F1B291FC35B85400A3E7CC0022E
7B5FAEC22154BA4069028B79083592867F77914B91237E2C6ED461D5DF59EC46
E6CC1C8C11F2E5EA0575229960D7634A75A9A7E3D540BA20381C60153828CAB7
59303DC99A1B8CC90F02DAC754AA266C6C87917E5BDFB16CA84290E01C6BD41E
BE72DD3B8D22650BFBE0DA268A7663AE038D0D8E9FF6382D0BB84E6EB407EC9C
AC512B4D8B9BF0211F66CB1FDE75D1F16898A76C52B670599FE5BB0BE07AE4DC
9231F7CFB137BA4D607D6D95D6EE750116A064FF340AC1A25CA879EB2E61E47D
13173C30D95C56CC89F061837BD5928A53402BB822C2F34232608D80A6D4930C
CA713625621E1AF4004B8FEE36A7B20560EE2374D2A10B409C1D92832CE38BBB
EDBC7274D23170EDB4F435A68B11A32D98B3CF09ED00D9B4DB94B8F49861ADD4
BD5EFEB0680B29E0DD73B373934793299DF62ACFCE8136C8EDB1E350AFE044D8
F5C003FFF94325A682B4CA11B9CEFEE5E1196599A813D650928E20870C9A57A2
011F0F8052882FDE4F5AF4B7EECE1C4D6E45C7C6DF9D1EC6BDB38864E6D31B1E
BBE3ADB11383D30D8B2CFAC23E389F578791E73B005BDA819DED07A8118D0809
D7C85E6DA400EB92C1FFE0885B44F054B6E02AFA1A177563B6D9940C95D80959
4101C91FCFE3C7B1DEBDDCBFC864B113995D945A52DE9300110809803A5DFB01
1E575595FBFBB79B5DC065972DF125F97E5C071848C7328C412C8124CB1DCFC7
97F4F5A59D5E518C47D82764D59DA3A1F45DA9943ECCE1214935DD25AD19856A
131432FEB967885CB01FDEC6AD36CB4F789512473C649EC814E2F77C9FAA685A
184271C13AD34A6E9FF7BE9971CBA0815FA4383DCBE87D61276BD84C5D2F15DB
2D6D684B4A603B8B41A93DB68C2A2A15C62E6C28728E5D8F978E0629F0847EE6
E2D058DDD67C51597F9C40A5CBA3BDB8B4F5F4ED2E00609711F52A37F0EB16A8
15DC623C89D971C33930C4E777A30ED35CFEE41D6211CC894CBD79865524E752
676F8D459CB7B65F7F7833A54B03E04F7DE1907F587973C16E33947C9980D4FF
F7C575114E6DDBDC06E257131FB92EE4C2E9969F56432AABC2E8694ACF5FB9BE
C3E88334406B2AB3BE7D9DB1969AC89E3CD08828C27E81AF897217FF1DCC559A
71812ADDA4E342C2BBEE7187C6DF173F43ECF2451B74B914754814BA45FA48C0
DA4AB86775DCB6867A9EED1F59025F12BFA6BF26C82A7AC74A2DA373578CB822
73E8FEBDABFE0043236A43BE9B694324D7F3DF67839B5FF6AD6886BCEDBC7243
518E22B8A12F47EDC6578CC3B006963428F2F0BDF28305F4B885DF766BD7E757
6479277F1CF086AC3E99C9EFC93883317C5B9BB4EFC9AEDB51FB6DB904E58392
87927488797C05E6F7AE27D65DA9B8D1F05387E9695084C86D2B5B0E2B0BEA99
CA5A774C1D59924849BE60D87FFB7AF9EEE28CFD381F7F91CFCE86DC3C772F11
EB2D078CD6CF13D6A1F9C6A9ECCC6807C31476A77CBB3D49D46921D8C5384911
F05836F45939BD48B9AA4FAFB2B1AB82E984E6C40E7C6D18EF21279D5E8A2983
ED306C96FF91F7CFD7B7C2C74DF084F45A02B293B411D836EF46FA2E283612FB
33264E4E7A5E6C69920FE3A2B241A4C79ADF26FFFD9E32D8262D3EFD94F1F215
BBE8E8F323B87A9ED1ABB174BD51C09487E21D71344CB02C1A5B0B5C604C0DE5
A99C23986689A0F0111AE0A106E4D61DBE6EF7EE409FD9020CA0DDCF7508F4FD
79A91F530A0380607E859B9169B9471FFE9509B54D10DF700AE30D6C43DADB44
2C37F64C781651E0B93648B2324BA9FC9442807F800957FC7837F5DA2C1BF177
D44F2DB11E87066F7161A5CF5B57E888D31FB72E2F62010EF217C5F2E64A9787
E63614AE8D1B6EC1D557BEE96F3B674948B90946B3507A28F53E19E55098C512
83B65451F3B35EDA4B318FA8F4DEF096E1FBEDF983492DA1F491FE969F345F6B
98B0D70C07B14112C2454225794F211BBBD5A7B2C17344891256D721114BEFF7
74DCE192FEE8B67DEED9369E19B00B456223027E805879E7775B01E8B54EAA7E
4BCE1BAB18E96A485A29EC31C7B37D8B8F1F64DCF22A2E90991956D71D1B306F
85FCA5FE9A6FFB2A4490A038D20AA921C54C2419B38B4788FC95E17656F3E248
05795E8ADF9F45A8D2D9B54860E16ACFB0771DA2E982F03F56C9A2CAEFAD90C5
BD34C7904351A1C7FC0FE55777560949FCC9AFEE3532CD3875BA907B177ED2DD
ABCD88022FBE914949B114B9285AD88818C3E2D3A52919588BD1658294015EC7
6A0703F9EAD88C510E7D36BBAB0947152D874E08011042A4C5A1F142EF25A436
F2DDDCD02122B40A1A2DE0909762F8F93E57C51DCF8AB8E1B0EDB6CA4A080906
1DC2CBDBB5CAF9C7FE6BF513D9810F506354144F98E0FE67482E7E2542AA4240
BF7022169AF5E324F654985D80C118690C6A3C3B58219922B3EB2BA11A269B13
71FBD8EE07195066332C020BA89EA87E106145A16431C85A6BD3D683E67DF4DA
AA8A33DE2722490D54015FA7DCC3A679DF7D29AAEFEA49667C1E0E88A17198AD
2F2F3941DFB0B28B0F4458D09A15382967944C2BC8E108E7DED7BD2241E84160
5A326917AF95CB5AB18ACDB9596284002FC5AA613CE433E30739EDF895D3C004
6E05730C345B9B37ABE98302BABDDDBB501B7E42A1AF35A250324EEE2B5D5302
4BF206FF2CE077C34597C7FAE776656FE3A7D62A7FF58D562F3A92DD0BE110A2
F36F1E0150D4697A70FABDC299D33E29B5B94EB424C4DAB191E0E27195C8C808
A55DB41BE0C09AEE5B491DE6E74D3F0B1B53E988622AC63A0B88AD1513F4D419
FE6281BF45D300AD3C94AEC244845D6F80657A421D581F75A269E77D5EB93F3B
C8192101E7A97972C2FEEB422B0752D47DBDC0E02618D05AD6498E4DDE9C35D2
A979BE99A949984B942A373348741758E6CEBAC7A701A52499A7023B2DA17CEC
FEFF1AF8BA6ECEFD33FC872E17BBDAFA542036F1E372A4B05F93D4C0228E3EBD
618103E8C5FB59C15A7BC5B35DDDCECC13BAEBA1E9DB8B7934198A718062C641
0EF067782DC79FE28FB5C54EDF8A4CEC8FCE5C9D53322729B337DAFDD7031994
2124D8C7C624B0CEB0DDE7D5B94233461140ED2A2FC215502748360966F8AB7A
C8C8FAAC068B9988262188425D7806775A12F48AA55DD6ED989C5B9C3C619106
9875F602057B1E39C123A5225283FB0E2C9708FE81328417DF9E89709AD6DDD7
B1CB8CFCCE280B327F5CEB80B9760B5163A950AB3C3723CC1B78BFA3B1DE61AB
80465DA6A7266F31C952EA5D79F573B8C7D70C09370298E7C3B4AE694785E1ED
325AAA56EA7D37688DF654A2A28360375D2EEC970959489C3B1D21ED4A77C08E
39D9D2CB56EC8C0886023155FBCE60E4B443CED230130A2573236B0C28BD1E92
DB3D9473F02F30FD701682D3D962A0AEAA22CCC5B56402316D7659F779E658F4
339B20C1CAF45D21DF35C6248AA98C5FD164DB66F1B20A9B0BD175C8AEFC14EE
D6E31F62181DE6B711AB4281B752AB1AA011BF22B382D1FC5DACD69A9374458A
9A261D52BB791103CE813DAB4499FD0444751E20131AC5BA4FC65116DDA56C0E
F2CB4107B237881A84653AB9B338A59188FCFD97401D91BC6AA07FFC96CB1487
A9A23BECED2E1D1B347817A0BDD1E27AABF922D9D64CF2B77AEA5227267E1EE5
8A8B94C970342F7C7E3675721CDD45CD1D9D8312FE8055E6E4E3902A6C3B8DFF
7A65E6098E3C7495EF5D4BC2ACE1A5833BEE6EFB033E94C143076DA92D274AD5
F8F9C9C7519A5169EDA8DC1A88E982DD01587BFB23D1D68D9AB2B558A8128B5B
0BEED9D490A6355B87A3DD96219B3EF16C9F6A410BEF116A1CBB3CE8BD6F225D
C83CC5375C973A8AF6739D8A0079B486685ADB2BB7419CBD614114D950300C18
BDAFDE97BFB61973D79AD1E52F5042BE9DBA57E463EC6F0FDF95D23070AA3573
297D1B8ADEF70558C748EA188E8FCF2F0941BC6DE9371825C0E6DFFC4699CDE5
11EAC04F8483A28F0DC7CE855B38E731C5B3E4D5B852C9858E639D821CB6C8DA
597E2923D832198C4F33F8BA5FB0509564E315AC3F11C563A0B3C8B5EBB09DE5
1457C4994C8EBF6F33CD5BA1E7FBF38E4FB95BE558C71AF2ACE3884BC02A8E7C
7DDA886D1A87A890E62EC23B7520B617C3C493F6AC9FDA04D47C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.0: CMMI9 003.002
%%Title: CMMI9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI9 known{/CMMI9 findfont dup/UniqueID known{dup
/UniqueID get 5087384 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI9 def
/FontBBox {-29 -250 1075 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI9.) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBD07FC5A8862A8DB
7E2B90C16137614CDAFB584A32E50C0935109679E31306B8BDD29F1756946A67
7A7C2D9BA6FAB9B20A424AA0E6F4BA64C2801C2FB5A1156CBEED0ACB95F697B8
BC2A6E6AA7EB1F9FD8E3C9B1A16697EE1F0E7400421A7765AB218FC837A49365
82DC6B2C877A7DA84A81E6126EE96DB25C17A207D3020A045DCDAA064360DFFC
E3CD50E21ED239D2A6450D04F879A26443ADEB6A20ACC504989876476C7D1A74
91564FEA1F4CC2C8C8FDF666DB537F315AE1886C73CB5B00E67E7B398A6C018E
540EAEE98BB8136C4F044EDD63C33431D2CF9740F051DF365A4045D9D8782112
7BB5D494D9235BA98CF2F30CB119F5A904C32AD04C960C43FC1F5FD8DA7D90D8
93AFB59F3FF4F796481AE2A7548F948FECFC6C127C4D3F159B08F206AE8C296D
EE470DB2F879EA79475E029D22D7A8535C09A18689DB0609CC233E5199C02756
972CC9C94D9FCE264DEE5D75C8D651E4E2D1189AD9588CB815722BB5EE3C379A
6F31C2E6AE1AE4CCEB29766190AFA20EA937114978752189F1A9F42B39483149
796FCFA123BA9CCD1D9BE28289660BCAE16C40B5B504058D55CFCBFB4F4E3D94
DDBF39F157E63946534DA81C018B1C01B9F10DDB55E0A5C2B3985ED1977C039B
D6755EA42CD09E27751E159C30B93F376DBE61CD3AED34BA36A768F232EB3B80
E3E6B77C4A48D408217818E398B83D995AB6BC871F20991DF57313D6EB0C793D
0F28088EBDB7F38DAF7E01AAB3476EC24D7BB38A9889A7D3038D930FF4289B83
F54A7BE1E2D98A3822098D2E4D067A0D400C20C0B2B4BBD74C13ED1B827490F9
ECF48F8C3994C1C5AAC9CF783BFA4F307528F51EAB55F961808A42ED53F00C97
72A432EAEDCFCFB622389BDA707B6ACC9433B065CF29EBFE93AD14B8ECD5F47F
F073F11822C49B8BE924CDFA6348C3A75E9BB9BF3F31C41716B34794B28CDAC9
4DB8B087E180A9B3B17680F73D9C12C8D86A922C948093629F5D7F542ED882A1
692F4F6696865E53E3E2DD43B2D5E8C989CFAA5CA5C4C5999045E170BDE9921C
BACD6F2863F5553EAB2BA2D4A9034729EC0C4201DE90DA89B0A27C5A5C974109
4E37BFB3F46B3A506169FB0C68E1CAFC844419A8D261A1FD86A3BB78E33D5FB1
CFC687A5975987CE45155E5FDFAF0CC5FD5568CB1C26212F92E88255F0549F59
41B33125946DE43436BEC00804063FBF03EC796E3361B1C852EC3038D107F80A
9198968265D5488B26D7670B22C2D75EDFFD1B7B4AAFA36DFD94640C9D0E2D20
5BCA18683EFB91834A3939AB8EB60E2F09655BE003582634C52770DA9668C292
2E02929D812EE2B0CC65F020064AD5BDAC5F5693B30508F40ED8E20E87149BD5
8DD41AFF83FD1944804017DC5A04512E593549FFFAE501131CE2FDB65EFD0B8B
33809CBAEE411B3941C241550B9C30DD28088708F1C0CC3125CBEDCD985EAD28
03313741F67DB5744A87B381147D5BA70AE1145C27F794854628D87D6C1ECCA1
749E3465B950175D3C3F40E344297BD92D3190041A4392033A79BEAEAABB8DBE
CC14E39612F43721CFAE6F79074429221CA588AA2501DE520A464DE157A03AFE
3C082FAE7628FC0C57FFC61D0330AE6332D20FDBB09BF36848FE05E782D6379F
64F9C82C45402481B0A35989027F9756BF5A79DA2D96E10F39167ADB4305578F
90B509B6891338FA1D67DCFD61804AA6621526B2EE4769589A2646581712AC05
DA6E98D16494F07D612743058F54FEE516BD89A8EC3E03F9D7F905175D3412C8
F7329077FD6EB25213F3CAC94BA0C3363B759401B6EF7548C7D709F3241D030D
4EB46A1AE81863C412BDDAEA6084C37143A4C5E41BC646315B1CD09F934186CF
49D1D8239E363A435307030BD79536B50B723A39DD763DB539F24A10DDA12BD4
E467339D2D6DB177D6FC539FA77D2DE4118EBAC161E928749F7C753ADEF86117
58619F1155C563DF2E11ACA8347908B98113AED58FCD0394150EEC94B7F986EE
88BF7171D208D8F1774B1DD478F0C2958AE372D257E7EDF0F6B5D6059CC4D5D3
B00FCBD2E9CBE79235B9A5A3E943CC27AABB58728C95C7DBD4F4A1F8A4DA99AE
7377B0CC0BFBD454794398AE0D5F7281771FFE87B25A819F36E692286A42D776
01794A43CA9BB30FB8FFDAAF014F909A369E34C2F6C75B7D4EB9DB0580E33F46
19654443AFF8384B95600B86FF8E41FEFD032355626D60C7507C058EF832DF41
194B48A36F11082D1DCF4723E21401E0C7447AABFAB4639B26E3D2730E348F55
53EBFF39CDD03E06E2FA5FB379603C879EDB7E1A10F89695C9C47DEEE52BE0A3
F446F187AB9D7E93E6F9387F21129034F36DF40605D28FD526AF82CA9D232BE4
412567F06B38ECCD496EF40A7B243E46C9FEBA4F1BF4B1ECA029C5EC239353D6
C0B100BF7E7DB33BD1277DE104F15AA19F37340A777741AD1AD693BC76DA48CC
C6F83CD84591ECFEE375979972B0FAC4C10B625E4BFB261B9FFFA83C31DA0108
4FFB6377466E9739E0EB64424BD9FC7239C7DD834EC6788A0F97FE714AF92831
E1BA36A8A9E24739F1DC82DC26CC3CE28C210AA7C569B19E1784D663A0CA4E81
AFF43E86D6F5F63778847700072CEB77A4EB946DC1F23DBC00BCE773203F76DF
00F0B085F31420672974DDC642D885E95BA6BBE43E1CA8ABF464D9881CDECC7A
E98E31B9754C9B72A8BD5CF6D4D214DBC3BA7A0CDF6635953F5AC1E7639C4A91
C7AECE4C75CA3389C348F656FC2CC96C84C85A926237B6504DB51937C9CFCDAC
B75C31ED570D180757884E27757783DB2D5F35ECC48C496CDA342D49AA947BF8
2FDAD2F19DFE8CD1C76A8FA08F33681F3E12E229D7DAB45BE3A3F258B5ED4980
F15340CF20D965252843E026803E8AEE736EC41CCA82167401977AB719AA2F50
0B791EEAA82027B3C712D2EB9D14BF8F94FBDE2227609BCAC41EC08DE2BAC023
28352F913F7DF08D4E1C66E83F764578B22B4EB7191E852B91ADCCB1BCFDB1F4
E63DFD152E86FA9DE9BC8908130EFDE29CC4401339C05B5B9764CF8EFF14951A
C6C13AF979546996BF22F2B96D3D585B90CD27DADEC78914DA48432C6ACBDD42
20EF583FD41F2F6D6D10C3DF7DD077304B5940BB0462656E306CBD91EB9B756B
7014B1884A36201EC582FC9345C386043DD2818FC301EF78791C1D7854F8FACE
5DE9801DE9F59D5B4271E003AB897B2EF49501589D681D59CFFD9B03F722EEF4
74ABD29997515DA3591496B62666744EA76DCA45504F8075C0652D6779DBEAE4
90430C2945FBD60AD53B51DDBEFC7ED703C418B4B244C8FFA5A3C1B7600C5A55
3EBDB93C16AC191C3A28EB2279BD3F0D67C826BC6A73D3C0AD02262368AB4621
98A1605F2887BC5880E1AF2780330E0FD01D7CAACBB0F008A42C427F38236066
54799594E515B289044BAC4DADF8B3686B4372C5110201221FDA923F131E07E7
93C44BAD406838BA4D1C277EF74098B8C0EDC41EEDD58C195D7DFF5FEDBF96FC
19CEBC6C3006DD2CBF76916B4298BB915663C2F61AFD7747E03A03BD7280197A
9DA590E3D081C6F53DBF94E8D6FDDDD910A70AB18A0F6D48A590FFAB314D6CFD
E3FB20C1F3C91063F00726A2C13A3D48323F9854839405E5A29D66A43E6E2B84
A8B3765F1D817071D4D6FF42BC785C2D11AB2B9452F141696CE19C6AFB9777DB
107D6E22D8CC6C26440BC48248AD8805C4329D46BF433741CB519B21663392DA
5DC7FC9BF37E5BC396BFADD7263D09F6B4D69594AB386B7BDFCF3BACB97A0E08
22013E716E642592A20136CF9CFD61D4E515D80E06A4CB4FC9D9B916C93CEA95
B83B98C48CF36C1D02291D4F5C0419338D64E33C90C90EDD2BA3B96D70FAFE0D
403A060CFF448D3E28A9B1E3916018465E86095BAAB4706CF7ED350D7C554789
D7F4FE5F180767DE8739259E68CF142040BE1E2E8C6152DE3417C1FAEA7584B6
20781DC4A9796431EE713DAC4E713C839D7A4FDC8AB6BFEFFE767AFD8B67FDA6
943AD387E5D3BCB09039ADB64ECC2BE2620C6EC269E708DD06C311F450099E33
AF46AEC644222E7DC4DBB9371EE12CFBC4F9B27AB46AD1DA96CE006E1DF8291F
A550A93026CBFFC1087B134EC6EA76F5E109CDA58FF47338A0039A786A575F70
B8A03A4F9C8D07A4C856C77D9BCC8E3EAA740172D0C2D0A15BA35C9E5717D7FA
2691774DDE730BB9D7C70D7AE103DB8D35F3728470C76EBA0E670634E1A0BA84
2FA102BAD7271DF2680D86A4CA6FC353869987700E5E3FD778165456033D624F
E9B3E80EBF431ACC934AA0357E824B8AD73E222B510DE8445C55C07C8E5DE46D
E478F832BDDECAF2EBB11941DCF84CCD887043FAED9AA90D12BC8CA9A0C8D94F
8D3BF1F80B14B6CAE6BB1C6AA405AA64BB94D5A82CFEA548BA070796A02F9642
87326D066101435AB9EB40BA9EA9E61B363F5F5E3B924369796E8B78DE3414A4
2B79C6A13ECB2F34E6299658D07D2B3DEF3D4383CE009A927F0EF5C196652842
D96B857AB5E905201E7E8BA21A5EBED1FC6863BA9A1A6E5390407F75055E2EEC
512FBDB3E82CEA13663F1A1944DA072C765D8CED06AB461470C5723BDC1271D4
4D1D049D3EB131743F1EC9A6ADDAA038ACA2C41D139DC6A84EC3C61AC7F1E559
6155CC2F49171F6E07CF56D721D9728E87FC7DCBCAC46455A3694C765FE807E9
9CBC2D304AF37E0F28CCB22F239541B53A4D24D09C662559267467EA487BD33A
0BEFD4899B581D20582930703A868655C31BE935364CA6A95FBCB22CB714C040
9718824DFE97929D0482430726CCB5A5307957DD2432A9B6271E849148DEB76B
FAA290FF6D0B18DC5B76407852E81C105EC6CFAB0F620C6DC9DA555A33C167B1
430A8BC338BFC7D75B7099CC906AD923FA107C74D3FBB719D77A4E5A685FF9D8
56424EE4AA074434B809D894ED50F6A60A035C5223EA25DD8983B9B34210DABE
718D7B2BEB293FF1B63CFB1CBDAFC69552963D90F5E3FF533A3FDBB626E9FAA3
F3C119E5E01C7BFF832A033C3515BF049E29558B1DAD652F2888E339E67D15AE
95F9BD14E3253DFE9072B24C0E7E85025B71096AF51C86AECB2921126A43156B
EC812B32B1164BD9B2B947D503C015616DBF2024F5C8CB3236C1DCA653D661FE
6B1C19A22D272A176B7F1B7F9E67AF40DB0EFD4940E58B2A050249CA4E55CAF7
6ACFD84FB46FEF952D18552B3972D79D808B4C263B8C7E1BB647A2D03E102867
630D5C3F2C917F765A4F6FB8106BA6A9D0093E27A4CB6049C2371287D94B5111
6E7020776EBD744C6C920464BBBC0AC206033E8240017F8CCB112596ECD7CAFA
89950CF43FD87ACA750C03A778A37FBCE9C82C2F5ABB135BB02DA8E8C0D24475
3BEA9D79372D0022FF1ABD378C151417DBC69FE5C9CA38D23A3900E34BF924A2
90777ACDC37930B67DD44A2E76DDBD9B89598D5F626BFD325A978D277265DA47
38CFAF16E7FF1946E15F41CA73F7B4B02E5AE8FC4C37B115BC567E4EEEFEFC34
EC8974B1465AE57759EDDA28DD38A9210871D35D331AE1BE6097C3EC21C770C9
B25D040B2ECCC3AEB1EA1BF99E0C2C0F192C13BB9152CFCF75332E03F9CEC376
9B8C285A35F53655BE38713E09AE34BA2DA9C06FA42A6FD2D00CBF2AFD2BADB9
1571629C65DA38A431710CF5B01FCA68E8B8569922FBC3F9B64A5509B6F677AF
1B97E91FFFEB6308AB68AC58F9BA43DB5E764021E75B56170EB44C2C0A7DB86C
62B8982256D3621EBE3DB3994DBF5C5A14CF34B4AF3BD5697F8E3203085DE9D5
84B0598169760B925463E93DC87CE70AF4C2DF0F4287D2F2069847BCCF7A37A2
AD451D5ACE4DBCCB2E14D5DF38B226952E7446BF87BEC736EF3D5AE793304618
D66D3299AB9F9CA1D13F134FAEDF36750046E27706C7CBD8E0877BB6276E5196
BC2A355D109C0253644918E1CC11B717DE6FBDA201E769812752888CD66268F6
4ACF4A9449378F9F9923D584BA1B51F33663BE7A306887BC14A37E3C5A4654E6
531D6EB63DE3946BD8BA95CFB037991174F36D61D842071E6625605CAA350A24
FE551025D10871FE0E2599A63900C8520EF4911C53A03897C8BEE152451708E2
43FCF4E700C583A5E8DBCC03BF9CAB864DBD19E1760945DEA0EC0BA38BEA8256
D3A8D4F70F6685A99C6BD2BA8B412A26C002D76138CFCC7DF6802931E5D97BA6
0151F6A4C572235B4196B22B7B2D14B32886DF0D2CA8A277ABAAC53B63F64CE4
E4C088192AAB674497E8AF81961359C389B51F4A257373D907C615030BFBEF53
DBD99058FD06E352450B658478C10454AC8FC0232B70D5CB916981978053E358
99D322A07294748BA427FFD1E45C909171017B52B7C742FD77A8560852D819DD
8DD53211A14D7B2FD11E42941722FD3985D627FDAF87EB57326A0D290B5077D1
8A4230BEB40523A8565F95E0D44F036A571DB698EDD9D94FEC9512369E5E5E73
A3CA5C142617944F4F99C0697ED088ACAC007FCE06E5A6EDE7D0E03A3399DCE5
362271BC31533866BA79FD1FB3F608B22CCD4111FFB1BA35D920A23AD157C6B3
C3DAE11069D5E46DEDA7158C6478D8B8C0D9DC237CDF0CC6633911673C43FB79
E4F9B7F27495201E5ADE66255BC2CBE9D9F237DECB62A19D62CB41A1C92432D2
07F0629E913A71B3F1AAF8B8C5AC66D3C8605A48F8913E39C859E163DB1DBC8F
0ACFEE80A40B6172032E95A76B752B873FB4DF23CF3A655AF1A1B88C8DC156C6
190DE72973950565454C0A188A33395FD3D529A88F2B578356DE8EBBC12F04C4
5B899F667D9E6F3A4EC6DD8DE71FD4C2E2B6D56823EE4E0526679D71FF1B868D
F261489F06F97B010CCBE640E2F57BA3DC3332B329F7958394BA9777D833AB50
005E8E9232547104065ACE33396772B0E0BD66D2C6CC54DEDD071E444D8C95F8
6F88B31E20FDB80F77C83151B7E25BD3736B4F9BDC52EE78C41E9475E5A6D94C
D348AB42F5E36B4F167D29EBDFBD43B03F77EB296B06A36880FF17D412E77EA9
F2E7C25FD05E16BEC6732681EA21AC3FF6893B93FC09316A370CDDB86D9E6087
F6042C3F9ECD742778389170F5F041329782FB9F9702F7533E51F355F71825AE
2BF4F8FE50D413AC9A20C41B42537FDBE8DDC5A5C793D3760C1EE13716068752
F0AF10812250BEDFB4D7133FD58F4587BACD572505C84A7D3802D27443175FE0
0D89C3398B55176D8642AFBAB5CBCDFD6220C8488564B4306D74A58CD2921AAD
73CF803C754DAC2F30A5324886E273064FA51781D5BC596BFEDDCE3982EA1AA2
62CA7BAA1B16C6EBB99B2AAC4E6C9CEFB3D10F19987045C4918DB239E6E63D79
5F44B9D097118D081153AFF96E5EB39CBFBB99A3BE30909F614869031358EB98
F07A97EA78AE50375941B2474DB46AF3305F2B208D45921F93743A6CB8AC584F
6BEBE25ECAADD5A789EF60C9F54446687E7B030DA3E5243189F02BA46BFD28B7
DC14822E136AC7E40CE20458DDBF356488045C95907363864CD6943643BF0109
EE027A3091C11EA392EA91320EBFEA3B857370AD8EB86D73F035A476F7058222
E8CDE78CA1AA9EA69A8AA6EBFF3E67324C567B914134DE042D6F8F18A9373107
536E8D90189917D343F5299024239E2EC1D2D177D82DC8E344A7CF2AC71AEC18
36F139E7A4EB59A67192BCA9ED0EB25DE13032F6FEAFC3B1F4FC81BB0EDC41DF
B9EB92618667C59EA499B788CD26C2137D70F1B0AF793AF5AD0D0941F2E746E3
F5A7F0288BC1EE11E982EAAE763CA422D72FBBC0D754AD58FBF92629DC8866A0
431213513744DB48E52EFC89C83FEB082588E4F30D7DA77BB4C90E011A8C6BFD
78C82BDCF2A4AAC3F5414C57C9ED29EEE1D68060473C239DBA7010537BF1D2CA
1310A26AD4FFD2CF7ED858D02216A81D7104E06B0E59B6A5445CE933820678CC
E1E905B8E057D69C1BD301EA62B5823CC14E138EC2B4F9823C1ED93A3E726489
37C50FBFB33288F7892AD0AB4D23D3BD69CA57971BACAD7E9A84A22EA84D9F04
BACBD1FFE8D6E50A3523002FD72C890298E1D4DC798B72EAF8D572F802BCF7CA
B9C4A655E474ED1BB4AD90EAD42BCC0E2A36DA39947E5F637C6135472A1CE667
22A4DB5D343BF7B8981142CBEE4AE0329B12FF798728549DFE43B6877C9F622F
630A594CF25CEB2500B7970269E97BE39206F95831A34477CE0C19D0A530C9BA
385230B6F295E472132B0E6B6A09E5C817D91528577BF4A90C0A7A37B530AE75
60BBD6BE00912DBD67406CB92661525C78ED5ADC6C0612D827ED705F8790B1FF
6003E88CE15F891D4AA116053E3547F261FE758AFE7DAEE5F4E8DE445CACA05B
8A88A11616D268AAA04549D5B781E8823236D2639A9CCB06989DCEFED25F4802
69E9B72229FFBF1FFCA08B4D851D237758081EC961528A64DCE8DFB1B1557ADC
838724535B9C19A231271F4BE5FA6DA112E1BB6FE0CA93EEE19B31BEDFB5937A
47375B36573D2D601DFD3EAF0FE89F30BBD8BAFA9C6F5458FE1B5BDE968CC747
C53E13A917BEC4EE9542E6D1D670835B43B163A97D79DF270B37CADFDB1BC610
4FBEE03E0D5C69BDBDBCF74FD0374C291A4AD88D201E017729DF9F16EB81716E
3DCA00B959A2C393A05AB6F8C8922F2FB0FB836350A12C92123294857343DFAB
79C2B7EFEC53C0300C9C7D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFRM0900
%!FontType1-1.0: SFRM0900 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm0900, tcrm0900, larm0900, lbrm0900, lcrm0900, rxrm0900.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM0900 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-196 -322 1502 937}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B57DF626EBF73D2779A4A6B462AE6E5
19E5878939A488F2FE1094A76925CD24DAD4573AD3CF34E426708CF06E7EBFFC
BEF5595408106E2189F418D17AD510ED5B6A528E8902AA3A5F0FF52AE3DEAB07
32F06B63E28BB88229E046F4FF8A356BBDDE82DF2A197F2E26CA00D5594725A1
83A89A36487EAAE1AC312C929CDCE50722FA6C596C261E4D78D6C6ABF77F5CCE
0E410ED74287A0F201140F8D9674A7AC585D3CBC72CCB824F9E1CEBD08AEDB3A
A4015CADF471F7ABD9B0F0AF73A8274FD441BC1988A61799856E4770155341D6
516CD0E25BFA59B67AB7E0571DF3F5BA70A82798D4CE6D9F23F52CF97CA370D5
FFD6359959DB68E52196D89FFB84700E1CCF3E2E6A52CCB43303FEB31F296C29
34B019803C53D8D5DCFDE72099BFBA29C176DA3AA9F20106D6AE6D530A490578
AA65868A24DD5024A28C6E372C33EA2F6573A6592AE985F03A99884CCF7CA096
043D8D33EC0550084F5D85656F821D8E06996DB3E47A7C4E20CB4FA8F9A1FDBA
8A8D5E42F16B4FE307D36B86A652C196C9968BB436C9CB66C9CA27658DDBDFD5
28224AA3A9BDE394CE703771433B4BD8B2867327DCED10CD89FDAAA5663DD04C
0F4EDA21B96627D495493471C6F0A2BFEBFC2951896E3A52824E1B82EC39B16B
F11A8545D54E1C5AF4BC701B47E1D8D4D073272FC1D51635571A371ECA95C12E
E1C25D2B992EEC97DFBD6FF62F64C001793DBD8BEC957386CF5BDEF6C38A4DBD
F39E9464426805353EB6B50E527BEA12C147153B2080AC1F7C1C713AF14688A8
62D83B9557A4A5B851441290AF825C4C92C6C50EF812CEEC88EC5847D3E6B82E
9EFC37F08E99ED48352198C1DABC02F158FC5E78E55629228EC140AFB4086200
E77BEB9D615DB1A4373E7169AEE1391C89B1E6960B0587E8F372149E7FC4AA23
6A54765B98564787AE6D5F7213976AEC2AEAC2A11C2149FCE3D586030CD43125
DC82E9FD230281E2EE9B068092FC5DA01140478958D7CAEED313A06333463A35
0C18C4C0BC997193BEC3DA9D4670667BD1A0D9674D2A5B3E6608D9508A43843C
45AC8006EEA335B5BDE077D6617AB838822EA1B465CDBD6441A8B9E9E7E910C5
DF47B5ABF9E15825F57B4779BDDC764DB68A47C9100D2A9BA91688E21F9597D1
BCB6F12D5926B94F3EE771F02A94D59AEC23193941E27EEB978C7E907A6B3FB5
9E36D639D56AA2AD38410B9889E72C81E3B4A0AB917247805FBE1CAA6EE29875
F2898237ED7F32F9EF2BDC823E1B348495B77B58A847723B6156E44FD7566182
64F76C76DAFA8F7470FD9384ED7686663594976F9208C6B3C19D9B3853489351
4F17F2EDA0E5BE179E3E34339F2D6419C881CFCB2EE057ECFDEFC6BA0DCE0449
EE9D1F7DCD406098F095BD409911662C426AE79AB13426007826D5ECDDFCA409
57850E313AFF4BF6EE7F96CB6B7DCF5B364EADCE957B001530E3BD2F26923CE8
6522C401271713B28F986B2C54E0F2E5C5A13DEA2D839B35D992832099E14BCF
76530FD861E3A8381E4B481AF8566A58B62F7740A9F04D7B3A39EA77F70B3DF2
19A0415894E427C5F588A0614B44268DC40E2FDC1551966A7BC3D0FF1A110EE8
BE32A4C1A5DD5659A0360FB1272CD354E43706244A8CF09712165DE31F47CC67
1E0CEEFDD2C398A2780209DA6C29EBC9AA2FDA1DD2C0383F393899260C1B5420
6E16BBC9223EA5D9B7118C938AEE2340AA12BB786CDD7FAF7FDB93D536AAD6FA
BD7F73EEE63BB1BCEFB778A1E19C7A52272B3A0D6983DF61299B43730B6F59DD
7AB109AFD722EC2C91256ED9CA78B4F29F970967AC551A3C5BC2D722DDBC456C
101B385B2E66F4D60ECFE4F467B74DAC6AD6BC184C2882FDE2F2BD5AA57B369A
A2D5077ED01A318468C9DFF780A58041164E64CC4490D44F9C16BFABDCCE4DEF
92F7EBB72D912D0075417670BBEA6C15A31507C02811B93E04BCDF5449CF2CD2
F277D1A76BDD781F8149B2ED03211749560EAF0090E349863E8EE1B62C5AE53F
29A49EFD77E43BD16803965F1032B0C786713F2E8F1BEEEF87F841D02CCE5FC6
093564301431AC809D401C6B6D2521BAC3FEEAC930222CC6CC2A36CE5856080F
B347E8D6C1E69C54CBB72DF9C83D7CAD2A46E131BA4EB5063894975DC194CE15
31F2DF116AB4C81C1931D8B1611A44C7C56BF3B19308C7344ECF74CFC51ADBD6
0B4CC365B29EA2F4594B6E4135758AAEC999AA5917A5F51E22F31A3020528B25
A251FBA395E4760547CA4A07EC8D03B6C0594E348CD00372D5F1F4D4AC5B2707
3C16AA8B80A61DF25527D9F730B1855DAB77A983118E236AF7253968647B83EF
5B459D8A3B24AA15B2D2BAB2A93F481037964BBCDE241983B0D4BF3EAE36ACDF
1C7D5C65ED6EFCBB887D8F999D41E547585243A37E9C40B98C30AC73912F0958
C2F689B13DF2D7F68297CD6EDB5C10DE964A8E6F94424263E5C7C571EC7CB0FA
0CA4525083C52DDB8358F0575278475713BC9C8F5865B057F758EE67196B86C7
70AE6A6FC053205C111BF2C07680D1A9AD9007EB369B2A6B80A28E14C4038677
7DD756390D2674F352482FA1437902FFA06E1A60A26CED51F1B8AAC17D417532
8E0E6E8E605095672AFE32D091CD034AC704BB734038E34C9DB624F3980B753C
BE7EF196BA3201D6F2499F8F92A52E6AAF677B6E0088B5786E70D3D1377BB5BC
C8DB8FD1FA6DB83CBE37DE8B956090BFCEAA4DD7CBC20E23477F8E98A231D3A4
4BC29751CB1B2D860517532C245D9611D6A9B976ED0551894933FE78095AFD28
A078885043E4F830DFDDD582F3F53A695FE9FC44EE3FBBBB321F4A61F5BC2918
441A86FAD317D469F44BA6B44D40B1CB8CB60C0DB64F4CCBE09A67722DB25014
F7C0EF51C36B43FAFDBBA1969703CE9582D9B19235B8B288FAC45368F6BBB505
3ACC459A90321E1A1C91324E0DAD8726BBD7C4D33C1151214C2610D3993603E6
EA87D6BFF3DBC93516338CB117EB72DD4F6B4CB9EB614E23F7D328D3A38636E1
FAC744DE320B8B122D39F100C99D95A2324A3AE672290E29A1B1EED0B300A47C
041B52A0FAED2A6CB461A9D43E99481B90A4BA405AA0188959D96F399FCB8E78
17649012946227CEE29ECE62D3E940621D84F130C37820BAB43D4BFF0291CEBB
DDFB529780EFE743521D1CA9F09FDEEC439495E6B92C58BCCF98F8D73B69B5A2
50033CEDF8DF389AF363A8D67761C0F2A1DD706974D2A948E52227F67980C92F
C469CC030BC1A6ABA95172DBEF053374D01E8E6D964A6CD0D6EE00630EAD7137
A71E9FC635A97C5A2C93EB5B54B5FD26EF7D426640589F5C11B330B4C94657C5
279043B23AEF6DB43045823E30DAB29449B42D35388C5D8C2635D00206373CBF
3A088C74C194CB2CA47D3D2D1E1FEDA48B197B121CFA00032C1C46029EB7F000
DA9CB220AAE72FD4653F41FCC2EA5E79E1781A9E1FDAD12E2FE4AC2173B73E7D
30F6AF4BDF1543BBB1D0D9F5CE5A949CE42A6AC05B250302BE7CC4FD908EF361
9736ADAC8B11FFFDCE7F3FE6F3845521A115ED36DF0CF09FC6260E5651091536
FFAC43F0D3E5D466E8226C7EC9B0B2C42BBE5A01A4D014B8466A8D22219481E6
454A486BE1097AB91FD2CB5FD50817B81EEDEF8A11C702EC301368FE4EAFF1CE
03839C340D8C02C98B7E760A3DD64BBCF437DB53D1C47CA3105049D278C4CC00
FBB14C0DCAA264E9448988C136653A30D77F9FB4962E06D983C01825CD9C9559
0F26B6935D4D9781A60766DE10AB158618CFB2FC62B16BF9349B86F3CB13A98F
648FF65FA074AD2500BD03763F5608ACAB6A001374FE99A300E041D441ADF5FA
C106B67E74C28D0283D1FAF55AA924AAD955C7526A993B0F3C82BA6D5F35AB1C
D114682C44276B76C91E92E6AC20CAF799D2402A16B2DA0059097ED2E47A9725
EC763E32D2E74E99A08C36AF8E5864D8C886E7B8BB1D5FD15C159B840A418074
615F73776D77912CFC2812EB5A14D3D81053D9DDDB18821F92375622B3967CDD
77B44844915EE2EF025FDAEE59C1C033E1FB1F743CA205A0CC56AEF7091E907F
5615DF52524F9CF3375637C440436D22B11B8DB01F63F4F257409816311DB5E3
BB4BB0A4C81748D360EEF28D140EF9AF38DC6618C5B2CE27AEFD1FE7AAA64CA5
048460E12E194490A4C13B5AD027226931620828B99F77305B3AAA579592AED5
D6F05FF164B01B822780D96A595E5189A650690EC1802D41AC83BDF394274671
B6DA35508E5CF0EBB0DA86B3581FEDB1128B50C1A0C60F7542550BB439428906
E368EEDB75C1B29DDA38C6BFABD3FCFF378663D66AA743F9DE2A18520919F961
24E666A4614F00F3428FCE6C7D2E3451EF0E7D1E0F1D3091B37F4FB223E2BA5B
B0E57C04BDFEC15103EA47597FCC2A7AD2D7F9612ED8DEB0B4E237F919152F8D
9E86229BFCBB784DB2DCBC4AB72831F3CDE6728C071FC3FCD30E5811F3E5B8FD
5E0B08AD851A31D9BFD710DA64BE553250AF41749C9790693C74A698EFC6A015
BB3CDCF576A0689E9EA289FFAB96AD0636739049F78BE5C0AEEC0C4BAE249BD5
295A90F331BFB96FE305B9AAE7ACB3F0543813828CEB7BC0E850A95333418619
419AD0275CA05E1EC09B97FD98014544491E52865C4E88203D4EFE0E85508446
D21DD84AE75C05893B870D4D6E8DE5D7DAF5518E3E835894E9BC6AB4D041902F
EF9DEE29AFAD535876DD15C315886DFB61E135B4FA038CFACCA0CD98EB6581A5
0B6A672503A45DC4A1907826D98FCBA579EE2A7FCB0C9F24465DD39A710BE21E
E92FA7DDBEBB2AEBED9AE61AFC1AF1B664E9BBAB13EEEB40C3FED31E06372CDA
1C65BDD9097F2C8D8C39EB6D342EA9E3EDD2C9C644CC5BF05C0F7D1CFD7389D2
67E9B5AE090C2E12AD5CE8840CEC82A0CB7D46F90924B9FD409909E8708B0E28
1843FD50709F615EC830A4325072F4E38FA4D9C8D4305C56B6562A13A5D8FA62
77DE9A3DECD483E00BB9D0279C92C3926F8802E58D0AB34760F8D136DB14CE10
E042B26C218BCB42366A781D86A0C3D19919429E44EED60C9350FFDEDD5CD677
139D6416B5E4B5848BD7FE5D3F3E547AB07E9424690EC9A5EDB254704F9165B1
EF14DA7FC108ECD290F44490DB9C708B0954CABAB9BFDDE8067A3F294DF8E979
2F2984F532F14E139DAAD1AC10B7349186CDC274F5CFB30CF083545173C9C9FE
F135A9CC96695DFEB7BCC8D0C7369D870BB9976CC897466D51A72D727146623E
1DDB6DD45C1F88BBB4234F335AEF967585E6A22648D8CEFB6B76FA1AA1135714
F97B739EF23FAF2766D72A304BDA21FF1D072E782BA21CC042E621E0F6927D22
3D5752B69C930053655C34FC46979446834D001BFCAB1CFA961EE73F57EB591B
D155181FED2B7B34262CD2F43A07B88EADB32E7C099833E00DE4CCF34293019A
B7EF59606354AD4A6B726C02176DF5B9AD483E7405DA63B05F451A01A993B664
1F7044AAF6997A01D7335A08B8BE47F16C096125C661DF1282BA2644E1BD70C1
E35DA773D287D6941BAA470563F476A14CEBEB857C068DC5EFCAC44C25A3D185
E483A0A0BF7A7EEBC0694A7AAFC80506B00336285F6FCEA2C3B2713CC34AAE72
411A05FDB24365FB0DDBFBE137FA7565C8DEFB1D9F40700240BC165BB7461970
24694C64C8DDA0974D7B8A9104DFABE61F4165003FE0BF9544154C218854BF1E
7E171BE67C38AAC6952E4040761A8FB358F5D55533651D791F5D8482F794D6F0
B4A3207812AB6A1C609C8D47E2B2CD348F0DCAA1E650E4EFD80AD24605A9B6C4
9348FBDF8DAEB6555918C71679658620C86641448175F7A30868B467BF7DF146
42421265F2D5E1C843F00D43F849713BF55D7609511EAC7B9273A0137ADA6FDF
D1CA44E6155688F1F20901EC87FB8A49B81F8829EA3845E0A4133DD0378110B4
21AB29DC563808EBD6533C709098035AEDBBAEA7CA9443040F8C180C6D51ED5B
06D03E9679987C5917FE4B01A623E7943D26FE078F52AB6129770274B0A54583
3BD6986DDF098E443802AA6D9F56CBD6D1C649691C3E5A6DD38ACE1E53ED53EC
EAEB89B7792E8CF7A0413B9AF2F3B948EAAE22DD8340656D93D61EF3F8DAD463
E4C9A8E628FB695AE74DFBB08AE5A4C9FA9D30CC55384267425303B80674F8F3
BEFB647BD3E977AC97BDCA201089E8394F95F17AFA309E0CBC1070A024D69B78
CC1D73F8BC5F26AD901614682E0D743143A3D98557752B889A8010DE1F1D17CA
FDE159E0EA76812390EF7DBEA50DFACCBF9BBB924D7F3DE5AE713CC37BD96277
0F37D4A5F465A92845A304A65AD994C2B31CC6F6C40675808D37510FF1A39A95
49E7E411C1E1EADA0EE7FB44147531E5A25555EF5E6ED7D95728286CA4F69060
C9BF7BB9A75976AEC88F893A69874A3F0293D687F8117DA25C0DE65C3C4ED6D9
DB299B9AA3BDBC5FEA372EC5A385C6E286A9F17DF31FBBF267514344C1AD8402
E71211788A1BCB560C5ADED027701ADC14FCACB1A666A5BBEC4DF7F4D2D22039
CE379BBDCF532F13010889FE59E50E677BDCDD131B92433771D0BF879D16EC15
34FC5FFAE11212F993C8962C812057FACE8E609FFDC2C3F2CD8681B8E7BDFAA9
14620593130C72963B10D5C4B19B9AD0AB4EA03DB12CE38B87580F899959A300
0F649575455415B05E6963A4FA2E41842C07B475C7BE7DD6D130248E8235BA1E
EC1B49E608C5EE2A22D2872009F8FC63B1BB851608EBE7BF82DE680F6924BBB9
4027FDCE0822FF30241DBDDD37DD43FB4027DD39AA60F8479B7CBDD92563CBCA
6C2C6B50905C922918000352B2CB4C6D8BA140B2CA30F4D80D72E195C7935B39
2722566FD5D4D7FDDDF1CEACFE7702897152EDCDD9C72073F273A4F4C9B5586F
FE8A1B0A3766E92A79516C2AC37C1805286596FDE8EB0520FFFABB84BCE97471
6428D00EE57AE742531892BB3AAC186940A677701401EB4D647A9FAD8D2C76FB
F6826DE88764FE7439BE4FBFBBD4E18794B570C7B462C654AF5FB352854792C3
AFBACD886D57BBC95995799B528EB0A09D409CA87549CA07417E5EF3C41E23B7
70F5B44F5533E04FB4EB99E3FFA8668A139C73544288AEDF853C4B6AF02851DF
4D7C827327345EE1C478C774561911BC1D3FE44C2EDA6D7B9B5610E99EE29707
EBE512A28BF6C0756F62EB9030C7EDE9848FF6156B914FC6D51A36351CFA99DB
19267CE6484AF6EECDD46D9150B09D4EE490149A800CB4C0EA9427CC91DEF8E6
1760E4CC4A71CE34FB84E69A7D4A0B787924720290F7E375E2D3B8A0473D9EDB
DABBF0AACA0ADC2FF2328F7D5C7BC28B9F1C3F5C60FD2930A58B99CBD648D8B7
FDE346285FA3BEA661D6922E038507878C9029DA8413018598F79D4DE96F37F1
8BC1D6B638D132A8C4562DEAC3EFF381B4801B46FB63EF56AC2F8B119123E213
615F5C3DB5232036BC9F876A7730D984FBAF9B1536E72BA8FD823AB6D9C24CA4
B282C8E264AF16F66285778C3E2CD4BB631D9C72CF854E7E85B8B2BB5EDBFF69
B57A6554BD70E5361848DF8FE8E50DF6856F1D10C8EE6ECFC681CC39BF34CC4B
D0C53F5B9CC9E1F2EFA0D6574E8217A7D2BBE4184493FC6CD54BDA8F3EB84C32
883A8035B81C6191E2BF8CAE319A3E8EB67B33BBC7FF58AE1CD0F2D132F6DF9F
824EE4C20B1642B77D12836425FA0B8C5E4C3B13B5A0A44911F452C3383BF819
478D7050113804083192B9041EEB8A19A3607C34D2FBE4393FDB13FC3B396EFA
687DA046B496D11987929C4B694FC682088F5C1CB471D9B9B6F3F51341308ED6
D4AAAEADE13A6077CB637F617DA8ED1557A30E9B207BB438598265DFE3111E1D
1826E11DE8CDDDB17DB2FE123382320756156ACD8F427E3687B32BE3388478CC
DD5814AD3DF79F7A39427A74D7B5E4C981DB49C5EB8D4636B3EEDFEC7B4BF051
591E0626BAED7D93D1E7538098DE0F035EF43360E849EC81C6D1E20D257BB664
302EF23086E3B533A0D740FC3F5A418D2643A9DB38681252FCA4A6443E7579E2
F0B5F37758FBFA88369D09B166752B2BCD5508C5F4C9EDF99DDC605997681B03
EF8E7DC70BF2F2C0047602E7D57FA4588C68111E3120000834F31E53D51C9628
465C8B54A63AE2EE076A49A29126CEE6645833073C205DCD9B96AD58B0946C6E
11EADC5E33E20D6995D97B207AAADF134DE881A7D3E38598A1AFFD9ACC653471
3814A67AB0699250AD3E136F1FDEAA3482339446715B76EEBF53FF8F503A7EAD
CF5EA73EABB9D59049B95DA04FFEA2884D315F5655C91B961AED9382E1314AF8
EFEA168F36C2CC4C41866B0093A78475FA18A11C8FE5D6E3F7826B636922E4F6
848A23864E553A210819F660022F0BF9A7C2610B4149A5E0985E565F367C2DD3
1C0A36823DC364060DB336139D0743ABC7BD6923A2E2D8B405DC61C25B903313
697FDA85250BDDE99E7767093513F333BAC3131DDAD2C761F444122610FC4127
A96D834A2D0670AB8068A9224DBBDABC8BB3E6F5817FEFB6A9645CCA04C286B8
47E53DCCBECF96B048A43173A8BA72A620D25A3A3C6F9533E2007432A6D79718
261DEEFFFDD234A21FD81C60A2DFD883DC496EB267545DAE84A4B76A65DD7F4C
2FC1BCDB7D890CE92270059D2267FE20CD51190F2FE3D0BC8AEB38935B314504
3EBD3CCF93B8F4DF389AF363A8D67761C0F2A1DD706BD12210CF75DA4C7AC443
7381828655204767EC0675264154B2337B319BD148F82797630867AC626BEAF7
21C36FA673DDEF25457C95F1630BB899B09DF1E30215BCA408293AD141E65721
F384CA12B6D41E8CE89D32138E26792C220BA49C853CBFC1C16428A20A42A63E
A253B964356B262080394DE1A4E8C260E59EF4B244CA58056E53F69B1CFDCB72
3D56BFC9D8253D20088D1BEFA38DFC7C83AB7E808487A9993A4BFDD5B3BA6931
437804B891084DF61B766E07A2FD92799E39C03FB8219D823716FB5F2A2D6D8E
C2BB56A69FD69DE4513ADB9FE0041E7E81C909A13BBF238C0C4549DFB0AC519D
E36B7F9F0870F38AA4DD3F4DC44F3F4D9B7F37A36A44180D879EF97B5705BED3
10DD87E3187C0BE1A64CA337B7D1E585108972A98F61AA416CEF86EB937CA56D
494F7D403806BCDD516465FE355B1BA190E9598324D4264B32555423B5E0C970
E31077A543DE555534E1BC46F7B947784E7034070E228B1095657EA880C4956B
F9F76F93CF20C262235138ED58A63EC8A7D32EA287FCBD67994D589C290AABAD
111D866EF25BE7AA909FFDD31DB19CDB1CFFBC4EFFAFE0660FF19267358C0384
B0294B7788E5075A2B39321A1CE74E8CB2D9CD77EB6DE0154777DC8C1356CE76
9555E6AFF35CA1B3967EFA01C4A6A78E59C56CE37E144582777946A8F4EF5ACD
55D679AEF5FE9DE77B27D19B1A06180CE092968D293B7F333F1891915EBA24B1
A968EB32F4C709E562DF10BA6196EDA348639FC3A0B479A3E6D1D9E3E1A66B8F
999268F0EAE6D3A03547EEBE6FBC51D8DFC71FC9E98661DFC41060D7440B63D0
B37CF366B627B992C9E33775946819F8F8E6F082C7DDAE3704E8ECC9A548E89D
8D50A3776F221A2E8AB1C9294E225FB10538F5EB74033ACFE7CCBD4142233A58
F86E367B195713C9511A3AD6CE4C20E2ADCC38E6E23E362A2B10C44A60DDC565
EBAC382B6E657A807F670D51D7F882167197CB4ECD37751466B0F02A6373CD7C
1227AF18C40FCCBA3D5E4D403B9C00A983BA989EF86D5C5A1043CBF3E4C8BBE2
482E8F141F1CF8AAC8943C973FA5264B6277B4D401A2D66F80014EA3861089AC
8F16222481F720351205AFFE1EAB195E947D18B6626BF640562AA3AA092FAA20
A211D4684B7532789CFC29BC48F0A621C3052E53560BB36A3C4D1025B630C12D
4DFED870186012B6030FC6853E7D2E69911E9F039C1267B2FDFB9E871D0A39AB
EDE3172FA0A2127751ED17700D5CCD3353433F531420EAB8A5D4782F884661F8
162C27FE5EB94E154DD58C609E719D0C01F608F4FD1AE5538A2F895747F70497
910F4A826B53F06A75CBD7ABF2B3A9F0E2E73B3A0286B45B18D71DABD43C43A6
5A6B264F2F3C07D7961AD86A0F83CD942BF94384E6CA7738C88B3673D31EAA8A
EE575FAF70C64C19D13699569928B4DA7785BA87450549EAD86CEBA123444AEC
233ED2B260068BEB96FF244F95637897D9F07AC761672DB00F9D6C6A22C1A0F1
767915D357EF2454B9673FB763DACE83E44F3CAC5975A71116AA904F21408C40
29DBB607CF1A0157472DBB8D45174D5852CA247669F6392CB3D359C1240C807E
9727DDD03F574982E348725A1EED4392F8D780F9CB2509B655194B6C33F47679
259B1445DA68BD3AE4E605931EDB2CBAD9EAE38BDB414649B9442625FDAB68B7
413B676C717E25102703F4773775DB4AF929B84C1867C57F83EF6400CDE498D8
C76B8D7AAFD08B7CFACAB3BCD6697A9EC2EC72F981FF88F93D3BC37315BF6F90
2399473AE2DDCD849C7BC2624C540143A430471B06294C66DCC4D12B83677F88
664105F62E8DDA1B8D66DD0728FD0D8236E1A66D5EBC706311191E6640318704
32822FDE4A2B60D6C3B7B7EAB61134C09C8CB07D8072E499327EAAF56E76BAC0
94CBD224C3534462F29A4363A0E9F7F4231EB78C7DC42F256D8A354EA042C8FC
32A36A296F42C631BA46897E7872E31F12A3970976CEB7DDB6C649E2F3ABD7C5
C1196C1D94586DD11A043622DE877E5D7DF711C33391EBC607F7034F17F42CC8
1FE186A8707443A8F0900488CE42393F166F8CA876786A5E434C7ADE8EE15141
81ADF543EF1A076EF1B7856738055848D63CE9D0CBEE4623AF724518CA938E5F
E97D88F3CB969B58A84F719C44432BDC745592EADB2562EF83C9B918E4B808DA
F8C383C0DA0E4E787A65B89CD7C7210B02519E52EF536E91DC86782E3170FCC2
1D8660740B81F171E0DBBBF9E07B66994CD71004640A1080DAFABA017A1AB8B5
6EACA7043B9A09AFD5887F20BCFD5B5FF7FA2EC08BA2A8046244826B7BD440D8
F34690D6064094E4A6C89A4DD039AE68F9C29A73D7DCF7716339A5E2509EFC96
87BDC044FBFE435F9EB9DACCEA986AF342C5B273961C7CCB8ED6A0E0444FA7F8
BA03820EE1FC038A7C57FA622621B52E62982CF5AB72D9D04A7D6DEF03FB39B6
EED2970CC423D0477175D396375A554ADE9D5B8D92455CC5B3962B4FBFB4A849
808E11780F77B1599FCC348AC52F48B70AFF0E2DE650DE6BFB38017C2E5851A7
CA5F66C1D47F5A594122C6A164A4716C56D64FE77441873B6D8130ED6C59006D
0F76D3420B799F0EB54768E2BC40F003E922138A4A1F912313533AA5B9C92312
E0FC17B2CA279C208C0F8DCDEEB8775BBF59EA7202B80851DB119A72C7A06D69
8730499815408A708FB02B9C55E918E23EFB32956A7D1CF5943AA806F512E976
E351613F23E810E1422FE966985D094E43795B9A5031AB41EF09E276CF9A1EC0
A02F6DF1D34537CE2D909269D054991BF91F550C7C583BE34AA67B0D673ED14F
6FD2ACA6B8303BD3710A1EBC91ABA01F6A13EB652C2C7ED85F449B56C804A0A7
EFF533A5AB1FDA2C912562546B9AF10606398170FD7B15E3752792059D48A485
12AE8DF3C8981C3B26C42E52DB5332A89899644AB40B4DF5FFCECF203CE27B1D
94452B2EB783245B5B8BC1E36922C96AD6DFB8F165AB603C6B75E46490FBF648
513052588E00A9750877A742C00B7BE3AC8FB0BADC8A797B760777A4A3906727
3599AD506B66011D344D5CA01024B33261751AE621398B9F41F8FB9426D76FC8
897D0CC0A750855975CA5ADD2266A3E33FF41FFA11EFC863359EE6BB645C0549
2A2752F88482CF7D35593FB00A1CBB399DF555ED8CAA5EDBAF98C0591CCAE39D
3EB838634B5098B616D5AFC9A3914E3C26F506662A9A2DCB58755BEF74E24AF0
306FF73C736FA8E03E14C9CDDD6AF4024F3C93692AD3D5C01B95731FD32491F2
3C47D5DB3DB83F154D3B99092C8C0E18B95820B0B6F8D6A08893BB4559C6AC5F
D56E491D9DCBEF1ACF723E2C63913DE4A741AD7390AEB5B34134F0BDC8849017
E6E59BFAE4888334B4BE23F932D90AD2994C7B06CF185EF056B858D4D90F3A29
CEF4525B15612DB4CC937F0597693B20BC525842391B954A6A70BF7494F7EA1E
E89B9EF4A405D2B3ED02A0833AC19C37EF92F6BD7B6E72DE89FA7215188A8AF8
BB2E6B5748C0D3484425440905B6CA64C9AED4DD342F6BD1F2693AF14688A862
D83BC930A1508B0EDD5C340C3BB6ECEAB97DAB9A15A4BD6C8EC20F333F2A5B15
B7EE274BD769C28FD9F66E5B84ECD64F2604418C986D2AEAC08FC3FB9B59E3F8
F46BA7864A3E811F47986CC3B299284E1C6259400D08E20A7891130E312ED1DB
CF19E8B87F7DF228F406F9770E51EC9D012B80AB20C271AAECE107BF0645F4CE
77AF772890E20DBF7C8E4551427219E0E2F2C83F179D1C3E90C0B1DFCF8FC52F
40EEBD7899349641E64351F1CE1E4241222673015698D34EA8DD889C1089AFBC
623F91A30EF5C69988D82C722070327FE0080C2F6E3852769C1225607C270674
EF0D3C96BFF905962AC5EEE503AE51060321ACF9BC45510A83595F3B6C224C90
8F7EC7337791DA2C049DB33C58F7F7A0DF0A797150296B0B418D0E3FCA3C3EE8
7B3B6DBA15F254B942EF9645A307A2AF89A540DB08BD8F2F1BA6CCE64AFA125B
C63F27A775F7F638371B463A586A8717D89B6E39D77248101FFC908FCFBC1930
AE88C47B68F13821ED0077F1BAFD0860C102ECDDA6D3E10FFB63DDAE8346CD6A
6CB987439E47362D32249CF31398B13B38C66C040264D661760CF68440375C3B
89756B84EF193FCAFCE5A676DB280E0041D12B5C7DC292B4FB5440CD229F47B1
BD06E56AC9441B086127C2815F527F070E680B42E10B19815015C0EB11EA679E
90C2630834AD03C606A8F0F00CAA024F7DD2E55EE432530AE946826034D47C94
F21491FC191896A1A193F1640E1E4BDF9F7250D90FBD295191A7C09D1761D395
88196136A07D21852C7D70FDE73C4A53C193A3E1729921C790177E68228AAAFE
6BBE85E6E15687CF71BFAF217E1FA2B6CAA8AA5CFF5A751E3F95B9158895A31D
138C51DFAC44B6D836397D450CCDACF6E43B952B8DC7AE5A8B25FE56025D1868
6C0D49A70BA8A7826EB571B8428AFE5F69078780542A78C7156878591C85D37B
4344CDF45D8CB8761689551078DAB918F9559DE0A2F03897B3E95945C9621FEE
D17F06097CF27C16D0F91307C9E07B898FBD8BA96EDE7C786E996CDAE034C0C2
1206BB80B003ADF1C9D06E2F27F82D2B856EB27BBC2A147D34B9F7BC588FD51A
EDC2771321F8D8FE24E710597061588A42A137E05F6347EFAE21E4E73AD17C60
343A0D6983DF61299A95E9BABB10554E97F464ED2D5C234119A258DAECDB770E
8510EC6E91B3D04DB26F7D6C5EBA38BAC41205402A9F4299F3DABA4DBD798F00
65355A9BE443B981A9798BC43BDDD7EEF144598408D6142D7FF5D962F67C8128
B430073F69EFF0B12D93208D7CE9CBCF9DC4CBA126D53B1F5C84838452A6F180
38040A5E5462CA5AB28EF440B1BFDD84BC22009889E72C81E3B4A0AB91724780
5FB91374175DED074B727868B4BAC5C9FE00B2766D85EFAD154958563F32FAFD
38D3EDDCE3D202B5E4B2A7BBBE628889F9BD1A4077F22BCE44093FBAFFDF9D69
0162B7373CCB2430A542F52F23545A02DB6BCD1E0D8FA5AEF6C07701A51CD257
EAA81E2977977BD4D051ABB6B75DC3FB4103645D5B24E1053AED099C152B12D5
0AF4E1B2519FBB2B7794F11881578A4F1D8952E13EF85CE0A07D6910D9B1C3B1
D24C285191CBBD78AB42099207B9092C8DC53490864DDC9A3B24E4E4CF3178F9
6AEF2B847C4CD45F22BDE7BF32E3C29CBBA0F4B3C42681D5D51A18B8B8E03576
119E934215A8C111B0912E20BF09446C6287CC2FD79AE15C3D59263704F53CA8
D5F03992546C1BC5710497E93304BA3758C1B399DF814A7405408504E26F6240
554BDAB6DFFDC5C07A9ED6C46282927088B156AFBF523A1F0B038E4612C77712
4B81A22694CBA15AC31B3E91DBAB6B4EAE59456EC1E3AEA29FB8FDFC88252055
D5E09CDA43120C2DDE8881D59E2A92657A89FEBB7411F951CE1EE010EBA01F62
93B2E4B8E94D2D8BE56F7162E3A65309EB49A540BCB27417EC24B847AAF81E7D
74B636B259C0207CDCD62B5F4F2165E1C01475DC2246C43CA286DFFE1C1E6E7D
C11B95954B10C7D3E55F65BF2B90AB6A8FCE2CD3CEBE741ABA5642CE4116FD28
0EFBA46127656070359652536BC11083B356EB9F8EDA3D910A44F15C37B7F241
5DDF1E32C806C11B4924382B0C84B72B2F1B3BA768F1A1EFE629D8501B147826
CDFD2D16DEF25915569A8F2A93D9997F399B52C12764C6958033AE0406D28CB7
B7F400EFB5F61C5BB382627AC9B7F5565043816BD94B0C14115BCF50272AC67A
BCADAD9C3D933F669C4FDCD23779D12720DBE461FEC4C627F49E0081ECEA2116
A4CBA9DAA9F9DF7E7BAC80F7656458B5D063BD8616CE476C16F646249522FFD1
849213B0ABAF27BD4EF882F7C76315BC3528BBF43BA55B66ADF5E402D61545E6
5619D94CF3B90397E5EF6995A4C460B2E47F1E4817F631B0628FA575A156B19A
67FDEC2E330C4C1E7B4BC36E956AA59233BEB62F8D1691C523B6B445208E2636
CDC752F5D92E03067AAFE4AD91AEFE519F5C1044680F62F7D9BF246114F4032A
0F1A63AD828414C293AC9620B6441B03DFC62EEAEA6A530543C55C8693B835B7
2F954B2C189776AA983605EFF8B4EEB957611510425936F1ECABF64BD9F120C9
B824007A796A764A0DB0D085EA16E37643AFFAADDDBE30F9EE58E0F069E128E7
575263811E5D05D6BFE9E66869724B82B61DBDC1C6F261165BB35CFEF55888C0
4CEB3156137BCCE7845D749E68B130781E1660F125AFFDE220C1625481E0D1D7
A49BF21BCF4BA06745AB423F613FCB1F5029F79910B7F10FAB381D6957AAF01E
B0B265BB441FE03FE3684393D0D61FE57BF62516C1F6896669159AE7D5CE9C30
C2B62DC8DE61C2821A73DA0FADD3EA3070447C98E9157BA2EBC0A4FAE72F7551
651C0FDBE6859E9DD7C64F95217A0845405A06A1F93205614BEEE01DC6DB2E16
059BD017E1A19A9EE448D00FB4A227DE741A64FA5C69D1F139689335EAB32E5B
FA7BFD9F1FCDA46CAFBB77243277ED8B54D4DE7D6F24CD10C67C883541B3FA94
D3F16196B92F24B599A8236E1CA94E2A4912214E3767912B26350EEF2CD6F87A
005A63066D76ACB6D1A19E5F06EE8D5BCB224844AFF9AA7F7620B292A0FD5344
9F0E881F42404EE1EDA611DC4D56477F8CC3E11FB631092942717C47662B6192
E27DDBA08533EA922D0027DF30DF1A78B9176B981848E7A9DC280B3C3B51B057
77718EA541C7688FDD0D863BC8A440CDCFE812554DBC9F11997A8F422670A0BA
85E3A60ACEEA96BDE7DBE7E2EFF13DE16260228AB71FAA49B8E0E64085A38D7B
0EB12AC8B71EC87C16FEFD3F19A075FF8712A7B1F23D694364025FB9412048DB
062B65E1A0B325A6C767CBC8B7F44A227270D13BCC07A1F93205614BEEE01DC6
DB2E16059BD2F37B4D826C792D17909C39575F3C31D5B30C69B3D22D9CDB1E64
E737AF47A894EC7AF0FD711072F4A195980113ACAB1D2ABDAA76EF314567EF7B
00886ED9D52A2109681D72C2926734DF4BD142E097AE4CE80AD412BA1408B3B2
B68B869EB02CE8EC07EF3B7B9DB26351DA95DA8DE125319475804FABE4A7715B
BD86FE601397436DF6CD99E6C05BBE7A7EAF17172DC46CD1C58BD738A1E23E51
9A63022CC2D4EFE7C1107279134EC8588AECE9DED5CD729608CE8AAF3A48C72B
402E5B029A6C729A95578FE386BBD02543561824EFDE8BA17A027EEE40E5DD1E
46D3707280CFF37D45E858C455D36538B1ABCDC5488F70BC014B71E12C393D6B
C36B369C2D992F1238F17035281FF5EDEC9711F4ECCC4BD41B9C34ADDEE724B0
8553905A0D8303F80B3EE28DDD9B321D244386844FA4FEFF0963BE875F2EDE38
345D50C1FBDB908BB2E180B1C3511FC764C7448537E7372AEEF633855AC2256A
1F98ED4F9DD0A56CA6A18034373D93ACFD2F778EB0C18EFB659E73D1C52B4C79
F7C85AB08C7EBA76803BC740BA063808F960E2E92A0AB8699E2A1BD9654DF7E4
3F51F478F357336745BB031487261F7294668D8BB5D11B7D12AA5B1F928225A1
698B421A3386BCDF80AB5898BC2950BF58168B20729C387B48A62BB0D606F78C
7806A21BC16945370AD05472C33C523F93DDB330373ADA61F40905A8B297BE5D
2373B3B01981238B28F0768DC7F3FB4445692A4E1DA2E49D9FBCB26AD548F07D
FC738AED56E6C35E2E89F3B8B853BA2AFD0CFB80D2FBC9439819E929B93AB90C
B9C15859CDC7C5C40370D0DE88AB6F497C641FB78DFEFDB6929FF52094B47C3F
2D092B9C9BA6489E9A90E8427B96A2EC04EFF9989B81F3D1279A89E3DB99E3C7
AB4AA5415FA2D308CFC6BFD1C5AC1710754083B85E2514D50D391A8D382D7C38
FF0224CDDCC3983756CE0D57AF0AB73BAFC6FE5A71F6077A28EA55B38F9D2CAA
B1B666DAA85591806591E6FE5E557D707E9543483425DECB077CA8D8D0B82FBE
1958DF7581346B2254CFE2AE6F4E4B0F719841BE4331646A8BAD1DA7CD15659B
544EC183B3474F086F382F10C950B3DF19AD8BE7A5F55420CC812C5F61CADABC
C6E1669282A5454A69C0933B3B718DF5BD9581F43810CF883D142159D534942D
44E0F0B60157360919C7AB9120987649FA1754F54A0F7E40CD00344753C23C63
03AC847DEE0F6518DF2C51B7E47C20CA3FDB13EDE5F3BE6A2DA1AD29B22479EF
2754CC82DECA3E47EE01040C470EB5FF9CBA9D1007886C4663E7439EA6276014
042DE97C5DFD1B5068CACB8701D9A6EB3AD4F83A2EDAD22EEDCFB12B283E71B6
AB749676BC04F01A86646EEAD71BD76C3012EA5DB38F4D1B48071F527443F53C
596FE53A6685C17437F7B1EB1FD9E60AAFD7ADD70E4A83479A1446D42290F62C
FCA54713F071524FEE9C9DDA2E4DA76D7341409FD7B93DFE996B5B60E03F5E4D
E80BCB263A0B1BEA33070791A9CB5904A2D372074F3896E322C8384A25F2DDC1
B19AC7CB85B9CAE72CAB43FFCD33EEA7F0CE1D0963CDE4E03799EAD412EDC003
8CDBD5145F0FAA776F1570522933714B300421612964B30F624F54C6E67EEECC
731D6E0F51A9C588C45031B4CDD122C11509C7174C2C142FB20340BFBCC60A28
C8FCD1FF08DBB2CFFBEF2104112F7BCFC2CEE1094A0735040B728221E4EAB1C2
3028D147A0541A6C4D482154A163445587F8204C92D069C84C053D6EC9ACD1AA
C613C8027994F5E8A1056602E7EADDB689A00249386C3C241A732D3BF4689471
BDA578448B0AC5D6675A90F5B87853A393E3676B5D06E8C9AB4BEE437A3BEE98
8555B82E28C1A77C92F2C2F55DE686B96B4D4CA40ED663B15DBF0418169809D5
04203A4312AF675BD1F1DBD790D61561AE5C061624C9998D2E9B7F145511E28D
768768D62E330F76622E19104B8C9C295586F4932783C07FDA5D3936B35F448E
3348A349847AB61A812F3D361B468E02C477044CC14073847936869C91FF3FD1
323A50B646D5FEFDD4D49CCDAFF7CADE65334244DF89B1FD4EB8444E2DCFD0FB
22190BF56142DAC8630477C189055C38B6007B192FC595AA0C6DC537C4B31C63
D206DC2D297255C0E109E1623BE38D0E044DC353944646C614AD01C665529457
9B5CE0AB7BE3B19DF0F8BD6849BD36D6266620B633FAB3ED51D3219ED5D06C04
4FCF5AF8C38C30C2DA2F5703EEA730FED5C9F0745DFF75C875C319DE2724FBA0
A97D3E8465E23A16697EB1B3CB2BD027C96D69FF18D78C5D6858C24F96C0FA9C
3A91607ED3796FA7406FAC1D7F0E1809A5FBD84954B951A2DF9B65BD59EB9143
365584B054A5EB31C66927848A94E98C0FC6B4EB6FEE4673E4BA17B9AB1082BC
6ED4A7550525B75CBFF99B6F71DB056F36E72D232A618B6EF08318D1CA9BCE84
B9860CBE7E0CD8B2844CCDC0C05D86255260E586E5BF91DA5AE8EB31E34A91F6
4B5312831BB480D0AB2D7BF06D72102EECD25E4A70C497A7FB5372277A734A94
46914854C12409F6804FFE58DDE5295CE6F9BDF5278C5BCAA1D4260F481F20BA
5AC1D6B93EC3EFC78B8FE701BFB6C1B68FA8DA32ED03DDA8E7A138C313575624
E0B2B7B0D68DD18F4406AD9459756FFD8F5C7F6FC3C82FD911305153167CF47D
6C1BB06BE21109CCCE96440E35D4BC50E74F451CD03C3DA3DDE2C62A9EAA7B5C
AC4A2E427251381093B994E844FA71C191326CB8701456BF71A5EE756D0C8C5E
CA66C5D873DD414D848F2452FBCA6AA9271EB162B5F3E69CD1840E86A54F076F
34DE6A129E6F95C41DEBDD32F69045F425B1060680505B3B45685FA481CC1140
04CE5FCA5FF4328CA207AAF0D78575EDAE791A42D216A4727A808696202E8FD5
6E6422FFE96C71C8F979767770FAABD7738806F1146863A5DEDAA952BA4B4B54
89A645AC60FBA03D0A640F55E6619307AE965F46B5BCC5E47B699A9EE0981B0F
6ED2205980348E17FCAA33467C0DA4A116B14A0BDA814EE5E5AE2C53080E5FE5
C96CCD0830961276EBB0F35BE7F4AA9CE2EA00D3B8F56FC939B8A4BBE840BB1B
2BFC9710AAA9317623B31715A8FD033303A2AD9E74B7DABF361724CFCF5FCB20
D3366CBFCD58160F4A6D9B2FFDAF477682E404199EDC1EA0FE6DD66870BEA874
628E0A4FA065C0B2CB973CA2B39077E60BB472F3CAE03ABFD55DFDC3A6D4E81D
1E947BCEF3E7194022C27A775A7B8670952BEB56128822AC4F22B2BCAB1224D1
48CB671B6DBE5853A54E1F219E201B9C2FB890440D0919EF0AE76637C389CEDD
AAC242D262025BFD16743D5E41F80027F8E6C2F1409A68BB61543A83EE1F0408
62F7C074490FFB3EF443165E8853C55480F85DB75820F3FB208ED2259395F9FC
F7B9B2EEA779C4F57EE344751BC098342260C0D71B1369AE535F8EA8DE3987D7
5B1E1BBD6A625C3C71C870E2F4D03570FE4972A46F1DF0E030A838BB8BF6BC66
B370C7BFE81120A0950D88E52A2A2FF322F3C4CFBB9A14C6ACE77D79E47029E4
0C4B5B596817F233B515BA938EF757911BD08DD68520C497F1F312925EDA41B6
BB8CEFBF4DBC586BB07035817112A4ECA25C89FEE5EF826C2CABEB866AA38265
DDF53EF5B73E9A8A6FB15CBB248881A3A8656C0C5EE499A8D210044D0A58C37E
ED1B247645EDB0EFCE94A6AC6C9844E35E5B9143947896F60E6AA9DC2161572A
E753649DBB6117A1B74FDD47BD4F4E7DCA3F5967057FF9D8EAA810C1A3F0416B
6F5B0AF2C74C81CACCD455A6604FB505DD59857447DA237B6439575C23953D5B
8A1125F2B81C6E8C1590B3CE658EB77B58F4D04C53E8D6008DD9DEBC54EFD554
8C48E8086AB82E2D245D43A64F5D8D379965445DC50D27AE6660808500825AA2
3D630C2D9D32EC30CD185EF056B858D4D90F3A29CEF452588FDC3B4123F279BE
BCAAA4FA7A54B4EAC8E688352A3D2BBECC617C0081D0504D7CF733E7A6EAC6A2
DD4106E84136E8D75702DABAEF02E9E3D638E15ED599B9A4E1A8F60AB43167BA
C93796EAAA2697D1F4DA65541F0CDC0B44B96396F92CAB0A4930567A8778BAA1
14A5D35BCEB6715743F0AEDEFB064BC18A7087525295A1AABF37E3C1B6D3DA19
68384952DBF12F158B5871546C0A7B151E7E4EEB30144C53A101612F5C8410F9
F4C777B7606746F15E230DB2B36FAD2BACA491B055A2C6504A1700C8792DD0F0
8DA33F15A8249DBA3658D26EC899C818BC6A0E21322D4E1AFFCB91036ED9EB15
02D64929BFB1055AE95E7194A903EF07C89BB0BC85A60ABC4ADBD46280AEB8BF
3208E83DED465C30E5A876C3F420FC0AC26BE9614F0744B3D74BD9D30BFE096E
DD56D5EF9CD88E4B5591251E0B004EC327F3D9CE82D8593685917844631BB0AF
6789B96FE48BF1A81BDE6D805A964E5DFA55C60569AB9A0A9825D71AE7D611EE
EC18454215232A00CE50261937E4A1360051FEA4082EB3348AFEBA93505EBA67
5285087D0101B596B234E6232BC798AB62DF155E3F2F04EFA42029A4E4D84599
EF1E0EF66DE32F1C35C6E6B2392BFC861F97EEFEBBA268CBA2D6DA4920BD3F1E
676CEAD19F5B45276B521E140E8547673887B8BC3F2EBBF276CFB75A80A16712
D329ACE1D7B310F5BDFA71BC805B2D2942F77777C9A576A06BC4BAE7199F029A
0E7092C13B4FEE2A171858EA03ADC3DD1EA5A6A5F59FF209089253F11D3501E3
0DB51A36F748DED4F6790D3BB7D334A2D2E8568BC37DFCB7E1814EF9EE702FF1
2B766CE44454B4F1969A4D29C64451AE54571E523FB8274B3DE4516882360CF5
63D95D806C57AEDD2406D0B0592205CE2E0AB7941EEE67F34469B77DB985B7AC
94164D1764F696D7431AE375D76DA167F82D25A688112FF51F848794987D202A
AF6E50B75B18A989FCDCB832C67AEEA43A453FAAAB731E18582C283B0AFCECE6
22D899A359769CF3996157489AEE0A29171B57ADB987F5C445D85675863775B9
39EDF253E4920A7069D9AD268C461687C249D557026B5E4C979D47E62AE9CC27
F7A61B0C8088948264EAA02513B876249160E9636C63A2F8BDDDA4E875E19951
6A4D96F95A1DC8A951347A5A84650F50478BA7B046932AA61D5EEC205FDE60AF
7A2C868C7B9ACD725D8E01098629720ED7137232EF0E7C72F0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM0800
%!FontType1-1.0: SFRM0800 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm0800, tcrm0800, larm0800, lbrm0800, lcrm0800, rxrm0800.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM0800 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-203 -320 1554 938}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF0482493852D12053A7904
BF6E144B948894BA0E437691D4618A0FFB62E3630B93DD190EBC8F306BB78955
34955AD847F95B1923B90644A4707B718BCB527F8D5F617EC559C70A91900E72
9A9D881D02E289B0B0725B43F5FE653ECE8C5F062BD2C10F4B9B0ED3938F84D7
FD5D3725C3F438E46A270FD43270689A5F30B1FD8CD61E7CB544F07FE57D719E
17CB8A7A146AC514A35380CC6D93840A2DCFBE40307F2FFD8AFC0E54D066DAFC
025AD2A93593551D363563A2208329634F6BD80400775EA44ED4F59B0F767946
25D1A692A6C9197B50C369ADC30DACF14BB7FBF9EFA9AC4894FE3E0A6B3245B0
7E7353569A285310D32E52C36FE2A2827319227E0B024A615243399486706FF6
9E76827C1ED6ED10CA2C9E369D5A507991070CB699F666AFA47FB9EE3D968112
38D5F4624378D9B34F8B00E280EA3F61E4CB33EDCC35F0433A4EF6D267C08A0C
5D5A95A531D8A0E1DB1394DA5F72EF2ACE4CFDF20871C679418FB1B481CC5EAC
C1733601DE79FE5D9B793234D4DE58546A5068CACB9EB1D82644358DAE105ED7
BAAF89A47AF526E481D3E105141FC7EB61A5E5602412613D25A39EFCD8AC6ECB
1ED92210690BA38F6A1E1D49AF1B6C8D7904633F0CA55E1E951E9BEED4339DE1
5C97307776C6238E3C3749F55276DE11C29565BC5914A12E414818AB259FFDF6
EFDA0F520257D55915532D048497C4A45E813004BA89D16F34E847E14FB85C6D
F655651F7F8F93BB3B8BF3D37D4BEE651C58CE6F89A0E4A039F7672039ACC235
797D06645170342BF3F67146194DD1FA79F2A5879C5E9546B2A3698E3F716527
D480F7B35F92ED9E284CCD6B344555843F4697DA8ED586320141BA36D5C3AC01
D34F8800522E4154E66120234EA715800AD9A9B7AF56296934D0377F7FE0FB41
B994AD131029C4A51B6AC1BAA22C0A5564547A9F05D5BA7EBC2C184831B46490
CE0F1C4EF1ED2387628BB7B0527FEB50212522C8D4156C9152A59D68D0704585
B969251F67BEBCD432452696E15D7C3D781959DAB1F20D320C6496DDFF0E73C1
6B94578EC769DA4EDD9F342275BF50B965513FE075521A8C020F9A3AA806F512
E976E351613F23E810E4DA5FD336C660B2D06585EF6D1A99402DD795317EA4E7
786D750C09528DDF1BC70C66D1F3B544E7C1D64DCEAB7476A2E394518D3B7085
CDB8B755057EE574A158761FA7F6FF3081DC39F81477A8BCF7C9E71F26E4FF8E
D3F35B5FA5BD6D0F4E85EEC43ACB5569CEDF46D479F1361AF8C72F0116C1AE65
B5769470BB43DE8DD9B41B05DE74ADEE20EF53751328E391BA0A83699AFDAB98
39261F94F3172250DCE97CFFDDC72835A46F4CA8FA0A2A98C9BF237704AB5A1C
B71715548F786ED03DBD175C9D85DED3B1FAB51C452D5F272EDC9F78E12BEA4E
ED04B3999B814D50658E11167C85AFA1D3C7E7C867C443CE8FC8911310676CEE
B2EC4F37D2FED84DC322CF49392BAB3942DDC038B03D92674B7562875779A9AB
B96B9B655E4177466C17EA32B18D24FADA6E450B424B26CA8C6D38DB293213F7
4DE267EC0077A7B5F0C2DB738806F1146863A5DEDAA952BA4B4FA3F95E8C6886
6DD4C4D1BBD27B060EDDF910D79C837E8EE64EA3D8E295AEC15D13E0F3AC3B53
96CEDA42622B8AC60B81AE319A3E8EB67B33BBC7FF58AE1CD0F4B71F7EA9D7C7
39C14FEF078F605903334A79E86E18821BA56FEB950170438A660732C97DEDD1
6B2F1FF4C1A90D72D46A3DA07B9A6724865162FC33328E19749F731FD2085874
DC9EF3593C94253903895D19691CB67089C9406EB30331EEE94AA7672C452F9D
35CB11D347779A5523F2C9B1CA1A88E8E4B615784D200A0A4820580956DD3C85
03B34C9F165E4550B85B0999E25E47A2997A3C7A7CC3BE69C9AB7C30486DDAFE
77492914514DAA2B9127748ACD6884FAF78972F54A219942A697BAFF8606F048
C8209C0F7F22BC03056D28F336F519294FA6FF6BFDCAC65FD5EEA8F479DBFB86
A110CCE8D4DE24CADB67F05141E7B426D3A28DB4895F1F95D5F7BEEAA1479898
0BD38BE35C9C0B9336DCBC40C64D393DBC37E2D9B21906B6E84FE919E4AF3D1C
E72564256AA1475909CC8B3DA74EED74340262C0226C0464BE35F0F9E2C7D0C0
9F85B53FA64DD33E5170CA771FC75C7A1B77E26ED1913555EA172967752993C0
247B96E53FED60C902161F2B0D4C38BD0C67A88D069043F4BD53444E68E939C8
181E20C2FE7B4C2CAE4D5C92EB5CB906A6A73DE9014882A7FB55AC642D15AEA2
2ED80B6EA1A74C9A9B742B6C2DC37654177E209D1D75DF0585D0EEE5D059DDE4
F7F75E0FB00FB5923847E9E144E9E3F0695CE74A1FBCBA02255419CCA9B32237
95692C0D0CECEF0F667DADAC8284AB5AA8609B0BB440C0CAEDC429C7266EDCC8
F1A91300222A02DF36EB01B07C3813FB045C34FBC8B052084E3E273B12569178
3C881AA8EA1B7A991DDC068B2BA2F0DBD6740197EB95D3FF12681338BAAAFF48
1CF3B5200C19FF70E8BCC4BC2491DB5F06B0C6024DD93B600EF2737C414F5A26
AB318AD9BA89121B87862C0BE2DB85DF80747E74F9F242AE84A25C7544DB1A0C
DF58D10BC11731387DB09A5F1032B0C786713F2E8F1BEEEF87F538FFEE372558
09E6C68BBAD0FE4EB73225931EABE5E2D21CB4849B5A871AE317B8583F7A07C0
F3FE4F8D0E071416F356D7E818CF14A96A671FDEBFA2674374A5C3D3A425E77C
10BEE0E5EBB904C13D0FC97EEA153A44CF5C72C2B1FB7ED34122F068DD25A05D
F2F2649E967338BB1AAA6E1A2531095E3ED4F25E002316940BF1E8959751966C
887D699E46DE6B388A933966FCB01DDF556244251C0A6701288EC8182F2F619C
3357EE3E45F533F4D8CBE0A7A69B500258AF10F2FA61EA1F01D2432F21D3C057
9D2F9C046C526C01951C76E1C0CA78765D14D7D5C8EDED3799085D488CCDCB8D
1051E82C80E034A90CB4C0A3BE1B66A836E6020C8EBFBF39E02C47AAB399DC6E
A38FD2D095374BC2D791D85457BA4BF5202878168D11439B3DF1963735B9FB7D
50EB6A9486D0BDB1D3E99FF86035AFE99BA9A30D2BBB00340FE05C921096A835
9B56BC5F46723D407C044961104DE93E90E1FDAB4FF47A2B93A536CC4627E104
C2733B58D8072503462480321F848C1A517C24A4516D9729176C29A0D31F6734
70DDC36F581D55725B5F206DB3276A13CBC0EB3EAF0B94CD87DF532243AB5049
5E94E2E246CE0DE1A912215A7EF5719CC8F3379BA433E3FE44E0A3F323E02A5D
08BAB830E6BE19F096935368E4CE7B0444E459CEA88CCE5E869C3243AD4745F0
76526531E7F6739A1EB793F7A72480199C921C23396AE8952447DD531AF0DF91
A4204634A2486C0C4E1D81E8F28E70BD6566614811A944CCDCEF246B835B2947
BCC311269A318D98153B354913F14165B19D87C6C80A70050A180738501FDD02
C8BBD9272A56D0ACBFD7F9FC8D64DCE6F6F24584E62034C4DA961E33C4F153BD
311DF2742C7374D3EAF8B61656CDB76C952E15350BB4978464253F8E0135F0C7
3C4D079D75B1EB9C13A19D55BC8A10A1898130E05718BD668A0B4689F496A4D5
D965566E58B924CEE0EDB2890D3E5945EF265D6DD1B3B034711D83A764234659
630741BC6EBAAACAC450809B2734FB81855292A77C43412F0A2A4EFF710C929D
197207ACF5190AB25E31B19961F8D6556F305010878E9D800AABCB4A14E33E0F
CB8CB7B0CB38B77BBF8E020F9C14A9C8B7C263924F9BCA947ED76DBFA56FD7E0
28EB1A9F30FBCEF78D51D4244798CF211D7D75927C074DDFBDBE592A115680AB
61AB535883FC887EF5576EDAEB512A7893DDF43CEAE998733591F7977C9EA900
143C7A39715296CD5939B26A068ABABCD5A90E93C1814D8ABB906E8B3217B1B6
F41E73A1E25215533E614CACADE6403ED447A519922CA15F914C576203DD8A41
EE4E5F2636AF11CE0E5566C82B0BD9B5207C1B593B202D5B141CD36DACB7FE3E
006ECB282D4CD69A492AC446E5B994B0CD715FE50EAE8A9ED7B8BC6B2B6D591C
3827D0C65B19AA55BA056FF702D7262794D1E7E6248B6EDB482AA9DB1A674DA9
59D8A87E287F62683068067536DA6370C07B2215C3A82BFDB44E508D27350E33
E05FDDC56731E5396C4281B8500F6BE886985EDE47BF7D3C14CA7699B0A1B809
140DF390A3E41DC064A3C4B0448D78E1738E9A4A4D99411A07EF9D22EBAFE41F
57B51C82D4AC15F468F20F58EB4D65775AF872A45ACEB5558381955334B2DC58
15F717740D42EDAA9ABB4C3EFA6E0830183F3A3FEEA3A5FD9DB16A14CD271718
777AE35ED72F7583985D479E1CB8ABD2294D07AEABCBC857592EDCF0D2AC772C
1BA775A344DF16EC7670151CED0CF6FD4DCA68502CFD154C8BC7D85798144885
93AAF66B73490F918296B6267D98B7799043A230FDAC3944CDA90244DDF146F3
6582434486947FDD380225C667F3DEB249E79E79C5755890D657704ECB75D43D
B5CAA9AEEEED8AB079C63B983F4120A18FD3FC507042053282E1FD0C7D74C4AB
27AA731536312DAA72F7FDE35023039EC76717487011F352426E3C954099C242
CF45666E41F368E21319E382F750C07285E0CE7774D56D14A7135D63DB18690B
0AE0FE1E618E4BFB44561128E0AB55B43E292A49001DA45CF8A86C92D88C7315
4A0F349EAC4E912B5BB9BC7D334BDF5CD5ECAB65A99967E4CF5742A597BF84FD
99940549AD4ACEB184E3843750096471C02ECEEFC3C1DDA512714A6757AF4068
6EC196567DA555B45D1F6A18EE83CA9CFA7CD4D5E91DE83CAB2477A8D8C1B05D
E22267EF877EED0CC74D29FD2B297DFE62D12951E67E0D9EA438BB66850360DE
0E36875DE2C3E4B7FF38FFA4AD11C3E3E1A2BD086CE183BCFF43F29C80FF2A72
AAEA426ADDFDE4B3C92CE80F184F6D9840A29732AC49E530DE619BC4910EEBA5
0240D281F2142496F60CB3043216A15076028EBB5B768DCC141075B747F32026
631BF2BB54874F6206780CCDF8104869C7315E4B246782045EFF42BE1666E63B
5FBE8412695A898D2C0BF24A91156AA42512485166636BEAAA658933D4355629
B7207E1D71917E35526C6D8BA4F9E064B2CA72A8BC15917727B4D51249CE322E
FC48770BC63DD79BB70855669D98B31DD25B1C9751F8E6C7CB5FC6905CF4A7E3
E547A418F6F12BE45818FB07E86DAB7FA029F067A65A516B12BB3C764288C408
BE781DA16CD63169B2E58288CF40978C74295CEAF25E9CB6192D1E5938C5AB9C
A320BD30EA9C76D10F5714FC73808F7C2E68754ADCEA0B18F47C18EC9F153664
B792CCC7ECF09D4D3A2D9480E8F82781384DD5C0256CAD073EBCBB4386C4C7F1
29DC00A5C7B74B0BFC661B1ED5A75EC541D37EFC66E73874F3B4498E76A6BF76
BC019222FE508BA4BAFE39A5A2B5ECB06D6C5881B695C3D547C9747DA67A23B9
AB88C66926511480479F0307DD5A7B8E16D559A36C77D020457E53FD64E457B5
00056B2B602EC1154242C437FD23CBEB6D1699072834F2039182AAB279167BEC
F0D7A456C10B1BE010EBA01F6293B2E4B8E94D2D8BE2DD1ED78253B0A18D353B
A7CE3C0DF788D2F3A90C5A974DFBF90D0FE840566D8413DAF15CF230C214058A
A0FE804A11F6D76800F1E2FF10A2A6FAF2A062377D4995C7AF3969EF09D3BF76
C2482A283694578C408CEB039E88748A81589632AD2CC71B77875CA8D050F63E
6A17337FA1675ED8953E25AD57356755833DC43ABF341D280B8171AAF8F3CB2C
4560851F4EBC981F2CBD2F0A59D3C7E59171F75CA42E74BA4BB06A252FCF5F1C
A335961180672C4396A3097173ED0D30EB6261A385DD056DFF9489D5F3DCA66E
4EA7A8DA58B06B0D36D4DD320B3EDD8FCDF7AD1E7A54D98B78E17BD39CD5588C
AAD1E91CCA0336306C4F413DA07B03266C1A998DEB00C76238F8FEB571360ABA
E2D7D4A37BE4A3C8176065E37E44C42FA29950803E1A59776C8039EBA8AE1455
A1FF4C34ADB130C7E84D0F85187FA290D5190A77B1AC66D2B24A2CFBFCE0D076
27D2E2F850A2EA72787A92473C3A8AC36B8086326F013011F77094D4F2543F89
FDC8ED5FF3C52548DEDD80FC6221D9EEF1391E8D49A019A246EFDDB2CC3864CD
F9C06ED663105E56293938440D26B0F71F8A7214380FEFA5B6AE7B07A5EE271E
2032709E7442F9E6F0CCD926876A97AB434EC1A743DB71A6F5957CD2E6335839
95713F38B6EE610FD76759AC582905C13E60B91A270028675D484944888F693D
280FCD605A9519EB11906488BE56D364445E210F992FF4F0FFEAAD16CF75E9C0
6B9D5930211BE0EA6718CCC099B72B68B37C97E610E449EFE4F4605FFD4625F4
5A5B8698FFBBBE011FC5DC4341E781941B4337C2D18213DB1D527AC16D0E3096
9668573B65651CDF7459B913FADF9B021615315415D8BA1CB39CFCA5CF3BEA45
0C7DF727B8F63BA7AD4807657B0AF8EE47D963479335B4A0FD9354253005D9A5
1582D1D03068750E08F405AFAD2620FA8553B0ECA1F525F7A4247D4028781000
571E3CD84650C982C409341BF5E55F0EFB0A7523E6B1CB111CF9E46449525A4A
597D136C5B7C3FB0B096CDED882DB34E13166E84F16F64FFA7CA0CAB2E8860AB
6F62A887CF418156CEB3D26702B2A871F588D3199D58F408930E780839E1949D
C6E4C6156058EABBD41E05DB2F574EB266C68434F38D5459FBBC9EEF58A59EFE
9330926A2BD207718DCCE5CB3C0197B92B1E413DDEC857F0A27516CF17A7E8CA
B8D95CC3BD66B83DF560A14CA697E7976A1F8A5DEDBFE52B3850EC444E26F1CE
9558F9D03D84143127BB552C3D34965F875C8304DEA4F3432E34EF3AB8D57FD1
FB32F6A3569044D41BD71F849B21266AC2D70049FA1259A20CB3C1B57D07F488
7D83D37702FCA395752A982E8E423584F3B712D270EA0209E3747D35FB85DD9A
837E414D12B7764A1E590FEA123788418D49E1329F2A60B9C23726113ACEAE5A
69A6944BFB600F58C43EEBF6DE56E8E946759EDC763A952844B4135BA5F7E1AC
71DAADD6A48F773034EA57481F43E4FC476647EACDF0D7A25E9CD97E0EA69576
5172D5C834C21720459777340D76C4F7F2F325F764F29AC3DDA6C887B2725D88
5B5316D92B8142910214F1A48D9A776839BCCBD5737257132A56F0E1A4656E90
C77DC50966B9A2828A08B02F5B12D4F1E69881A8BB7FF25E58AD8BA70F8FC7DE
665C543925F4EA1E068118BB37F1298F5DB434B7EC51128087D8117995BA2B81
36F6B4C38D4B11249D4343287AEE44F6FB2E46EDF9D9BD5C18C2E5F8ECF56ED0
405E14009AFBA50C02BBC09D2A621A52C90038040D9A5EDFBBE7B8EF011768F4
5C4F1A4C4CAC1BFF487C6B6710BCF518C1B87DF969EBB7BE3D8ACE92BB4632F4
D7E48604ADCE660EE294D4961963B468EA8935C9722EA2F59551E03B0A15277E
E0BB74FE0459E64E0717E7B076251A9019C9AA9EBAD8060CCA48C0DA166A469F
67D70D8AB7DF8F2A7A1977F20042C8E414F8FADACFD56E642469F9739F87171F
A2AF5B0D1EB4B6F60974C4190A3AF1EC6DF13854712FDB8105633097A0AD0CFE
9A4DC6C58341B6BA6B08D0CBC3C5AE86A4D3FBCB6A8C95F5BC442DEAF79A45BC
C2905987C2650C76CD606A0B6C475E79A459D34A4186344F00034AF1BA03A87E
59E35004D88ED74DC91DA2DBEAC49939A20011326555EF804A6913C95B139570
C4659B41E70FF18F33FE54E74DC1322D345456134AFBBA02667A8A1A228310E4
DEC5797B674D1503587DCB9076823F5B4A053086AF3A534D610A7056AADE2E1C
F84843866BBCD676246C9F7F2825AEC60F544C3F24029461CEAF8BB08896D431
D38B77816D532DA6A71D08C9DCA5C2B21B9A97FEF3E2AE85EFFB7FC9969D616A
2AE8C69D2C5A056B256553E88BB39DDBBAFD1D89F33FF7E0A9EE64B60F724789
FFAE7EF27586F8CD1607B649EF3E481112E32A731C6C6DE2A23B80714EC7B875
70AC34C4AC2AB4764D876D6F16809739E25CF526F45B6665B82189DD3E6238DF
0B5946B86E63377C756E85205070B4DA471FDEA15160929827205FD7F4C67FC3
AC1995938A105D6037CC454395C6DCCD82F58C9AEB90356711962B97ED678211
D39065A56D9D698D21A020F6254C627A1BC5CC7D8EE5551FCAC86B9BA4659EF3
49BC8CA8EF4049AE91E7D9644C7B083B38298FAB8DB702E031EBB07470E1A123
87BA7E4FC13A64DBF0893A15FD7D1A05B203C7E1F241B7E9E7E910C5DF47B5AB
F9E15825F579D0ACF55420CC812C5F61CADABCC6E166978F2447E88BD4C45996
AC2938222B75ACB2C1D4C2032D0C20ACE35F91C0E1BC5DE74F3F8E36B770D901
A82428DA343DCA5AE986B03382F6E2A80F4802283DF85DC40CDD2F58112B0E50
AC18ACBEC6FEF76B826F1DCAE971C9814154BE48341079B9121D1B79B2D62D0A
8B5CF3CD6A0D8D912073F6457537A162851D58C07D20DB255719DF0EDB778637
3ACA9E084A2D17D2F4D67C5048C0868C7151B3328CE8F6F8B03D46DFE3D9C2D6
FE57413C5338670011232DB3D648918F1CEAD59B8341F7A53BB71F8431A073DC
1BE4AB4C4BCA1B7DFDE0498C2D3C8C6321EBF1C4A86CE92432122BBFCCCE759A
4B18676166798E18820D166A6EE95D7AEC2C4BB1C2FFBEA53AA0DB11368DE7D0
88B666C54EDCA0A373A5EE824FCF86A700E55824E00E0D48DE0806398170FD7B
15E3752792059D48A3D1EA75A407692533DEB969AEE111E7516C297F82D0E5CD
BC6F5220A7012316E752486306E263A2B1C6AB5657FBE8D6A219CE0EB6807B2E
61628FA5D0C8174C9ED2CA50CB5F9C91E61F38D12FD58A03FE01BC07C04F21A4
CB7F642FA2C9FBACB1741D18400742FD0BDEFB52A6A181E1010CFF41E45F6071
0D72D4FBE6DF9A3E087C22C7B88872E9AC8099330D3A36BB872A5581355CD86B
964F876AEC8B2A79F39E74420AEA3FA457A2B4793921EC68DE41BF9951292134
6A87A21B90CB41A03609AEE59FB463B600D47BC972C24C2134DE26AE9D6A1B46
D0598415CC65364AD293031F2602B4D21DD718CB10253A33195A17F75D50AAB5
63750DB7EE142C262FECA00B42452F9B081A87B77DD815A2C5327AB064E22523
03D3DD4FFCFC95483BB41A0BF05BE4B5F309D748F2A53ED0299C18EAC2E050CC
75AEF32776B3A29543F526B9202639CA2FB5D4A3602B7E2BCA16C510BE814977
C86574BADAF9C4C58030FE6B21D02BF210067E645005274AA2B33CB9E6053F9A
8DF88DCCE6BFB7C43FFC8FF521506BCE76DC51E4BC3CF6D06C968CBCDB24C77A
8073092923E9D75B3FF3FD88BAD1812A81179715EF78EAF84CD221BD31F68121
9626C9ACC353394AE29BA575F88F01341CF48CAEC84BC01A1025A3213CEF8445
4EEB264E67E90ACCC39718B204B48310D8D9A6BD6653D6DBD94E1620DE843011
5FEE34C3A4EF02D30D2265E18DDEF78236AE62E52A30CC91EF426E260020E4FC
0A85BA18562CDB8260CC5801DE84D93E218ED142B1A2B45114244BAE73606B23
CEE5D63258DF1865E6B0432D9CBDF9EB35D2FC00A0D94702D2F9D1A005D56FCE
AB44FE0209FBAFCC9140BA35F4956A646CF5D5E704841443484F7A53A2B90A43
04DC3EECC382B721198B794C2EE61763BB421F654A29ECAC9EAF045EA686214D
FE52A7FBD8764F3B910BDD4A2A0A5680752F389F39A2AE8977D463C37154D087
2A23D9E3910C57F24FD107EABE24DA14A90F169BC502ECDDA6D3E10FFB63DDAE
8346CD6CC17C169E604597DCD773D3085E5DB40B21ADCDF816E7AD2773295B40
002BFB9868AD65904FB47A8EFA0818C7736BA3C3700A80DEB3255F6219A96D07
1E6A478075E259E919F1C24A518AA4D57F35D454521E715BEE64748ACA629AC9
0E4D3530060C9383278C8AE21ADE7F67987C50D4B9B48964E2F4AE5ADBF1239C
3DBD5CC1B0A735E7F40E0250CF508D341837CF1F79512EF598762196B9751B5F
7B9B4B78785D8417D6689A0657D97A364B0B782A82FBDCF64CAE5B120F163EEA
59F9209238A02B3E1025026D51F307D91792B4B664EDD99AA509502825EA5C69
1712127315CD288B948A3EE038CA05A3B890E75E845C461FB87ED755555037F1
47ACA22C4E017BB7990AD4C12993DE36956CC1173451F68ED0A8F927E8C1BD16
B6FFB4B95056870DD6AA6884E9E9D47FEFD2A56C190B27A323A5C2460122756E
1BC5B0F17FCD990608B1563A50936FB3EDE47AB7CCA4EDCED3BF4BF1B1C3732F
EB33DB0F0235D303D010D7E724345A9B30B333F1161168565E050C371F1BF51B
F79F96D5305F34F7579AA2C77F002C20EAFB8A0CBC0119E6711BA6542B32EE19
F39EDCD908D55EB4042D30D14E8A425EC8D77C109EA7FC04160F972CEB7E0E7A
5DFF75C875C319DE2724FBA0A97D3DD79CCF2458BB7E78530EF587AB37DA101B
78DE4D56477F8CC3E11FB631092942717E228512230D72F6269D6C97FC1A88E1
7F12F6D5BC5A15613AE032CCE548FAB0C8D1C62E17E9360807D777732C6EFEF3
EA9F9170B240A718174809E3C057C10FDA8B73C488BEE7F79BB4A86F1AE0A176
D483A1052880FDA64E20C3D0C2637FFF29F2B3FD9F88845125FC0D2C9C548E79
1D6A4756BD98269F4A8A507AFE1C4489FDF94660F884A5889DE36EF8D869945B
939C242D69549C2DC2985D4D68E1905C3A53CB759802EA6D17F591844EEC2BA4
4C3FCB2CC59ACA2CFECE06BF0E21A9BBF575B42B02B51149C2D5D9A5CB1E887C
D982EF32EAC93508D544A070C12A71E68310E5B76FB205774F170FE164729A8D
8B0F2F424CF33C0351FAC0D79F9DB3B28C08142DFA4E42A52A9F1B904B6F5DFC
7612C4C2ED3148BE7DA99898D65C4B163F629A6BA8ED704680E4D0759409068C
E06690576341333DD349993FCA197D504941120F132300216E6E0BB2251544AC
539B2AD1B54DDEE818CF14A96A671FDEBFA2674374A907F70AC456856644F367
49D9025A5318E519583BA74E201DC4FA2E083B0C39641841E40715BCE7B2A543
7B0749170D2945846AC6175E05511207FD6E7F5C5D8987D32CB692BC7F49B6D4
D0CD90B75D3BC68B8C846605C0A219299540E5BAC8759E8F9F8AE665FCEE3DAD
407F880B6B1C2BA857DC545E069609FA8DCAB985DAEAA6494AE58EBA7758FD71
5235DCF9BEFB1040AD6CCE4299CE57B86261231B3A48868E5ED36E933E21F0F7
5AFC610A54A0915340F2DB41C31FC2ABAB431E14F328E7823E72EC6C08CE6305
E0BC489AF58E1EDC25BAAA8889012BF840FD6848ACEE694D1BC7F57292ABA161
F72C875661C127418A23AA23E5DF04DA0EDB9463FD1F198F4BC3E0A6FFD43787
03652A6AA455B17D175A357B0E1A044139F653C7F38A2D2B52B8E2E80E0A5334
FC88BBB5D57B17997A2CE5AC49C9EA48D681E3FDE5948A46824154B14D43C252
C9B38EF49D1C2F0FFAB1453ED6A15B4D64E5F683A676BD7CAD08F31816D2BF41
3CB128327442D69D1B7FB6E8C7A2969750B21FBB62E9B7231B03313260F2F5D0
06D1E04BC0D96CDBC99701486E6D2EF7BF9739E25CF526F45B6665B82189DA91
46FED59ECA6D052DF89B38A24E6F88F6DAC093443F9CFD00C7FC5285C3F343EF
9612F5C602A80BF9C4885A3EDD1B17A8E6A8A295A3FAE720AA240146113BDE62
3F786BCC4BDB02C03FD0D605E5E0B7CC009C8F3B1BCB6EDD94CB9A53B64E6B73
916B753F077910C8D00DB6CCE4A875A3C04C371C2F5774382D8A626621778463
D1287DB8D742D31BA12ADE6D09ED9E75B6314795B74CF297C28156DCC4494C07
6A2A46C308B15A58DAA50B76FE020781065DB3350D240836B731435DF2377623
6DAAB31D032DBA833118BD27B604C45A491D7AEB0B0E2C7C177685538DE4480A
F9D2EBAA660AA76761B22CE4DA9DB66E5EFA07E8BA7691178C0D596E109EF5E0
D47CCCD28C3C93C0F5C9580B3E2E7606A836E1CD12D8592FBF5E4D2DBC00F285
E955D9962CAD0489BB9023A72FA7A271EEF2982486FA693D8EA3E5017C451B03
9203FC7B9A78529F835ED70B702152DC52D90ECFD287D99A05DB2F046C66FB96
1F688B806E8395C1E09C6CDC28176D30DDDD0AEB366F3F807258DB1902402B30
A79590B14D3244AC966408DEFB2BB6BD6A7A98BB2A1B0527DC01F74B53C0B856
022E3C35EC78BC1527ED9595CCEE99D0F1E85111990750232C13ABBEEB03DCDC
470BD9A3AE135D4262F0D98FC91DB6B8CF96455A48CD57295728A951627B9DCF
3DAD70166CBDE616AB868D02C71D728988DC551652655D61D4533525362E18F6
30FFAC9E788A8C87311A129D4EB0BFE6B47777BB827D74D36CBE13F628CBBBFE
E5B704D723916C117F2DDCDB725BDE8AF4A54EF0E1433FB5D4DE363457A3B444
46866C6CE4C83A12A43C856198B7555DABFD7CE1C7CCA209E3EE4FD459E6F729
E7E3BB5B67A05224B3B5B09BEBCDFB46C687934138D7E2BA32941BCBF0B7EDE7
186CFC7CBC90AA8EEA6A55450CEE728B74EBDBE7A9550D1A63D5FE4D976FB069
377831EBC8ADB19FE5635E5CEB4D92D0DB863EF4517BE1E0E5CCA6D7A0BA9C0B
0CE231A58AA558BE68FBD94F73C8C840F9E5BC086DC5D6C0E5FA84761FA5BE04
1156CEAEDBEBE32208A0FE330B1A51B8058E984B0F2E9E610CFDBA8A77344625
53922B585449B2ECED8A0313F773C8F48B244C61095481B9F2C64AC365C51F21
E717CEFF296D5828DF1BF84531D665A33B075E56FED4D2A848F95A8E6DFD583A
AFBF5F5F4C08682D73D31EFD77024F7A0E867B42F04211607ACF285823904907
7DDDBDF3EE58E0F069E128E7575263811E5D05DFF77E49C52836CD711A0D1379
1C051AE5BF9C101C5C85B5CFD31BCCA8C3AAF39D9C3F5A92B8133437349EFCC4
CB67BC77FF05201A7A00ED409479B28B94CD7FAB420992037CAF0B9E8644F315
CF4E3BCBAF6CC5D5DB845E86244EDD6D16BB7E5E78C8476B322537601E2F8ACB
2AB8BC321229C67D5BBC9CF8E12974CE3ACFEAFB6159E44C0E28553EE7E97084
966301CDB57D800AF844B9D766F8FDA1E06CC16587009F5BA0CEC0EE57B9D45D
3B6E6ABC008C86CB01851D492BA26B7AA72202B844E94471D7B013476335D57B
BE8387CB99932F2182AA3F9CBC2CE3E6251593B6DBBD70DEA1F8C17F3A5A05E9
FBD41CDE5FB380E5F5AF8199E4476AE72778390E730173FC1317D52E1452A701
5731055D6127D3CAD458EDD9D2C645D8959C5D6DA1E43CB230AABD88851E4044
1D29E04736B6EB239CD9931C92317C1B73D92B41C75AFD64B9A279C94711D735
0422FAC82C374A30533566F05FC9E5D7661DA8BB4E57728EAB10ECC61B3D9522
27964E78295355E2C291B2C580C25C2AB4DBC95582B1F0FD65BF96C16DE54989
5B89900DAB29F3C7D61F3180B2785EA670BB335F1D221C7AF3DD198A1610F2D6
36B626D286F95D97C51628150AABC3E14D54D48491EA0027EE740B4A1084072B
AA63305BC482AA7552B02BB080926B5D2E1127C9B2F29BCB4F9B68221AD59997
AC681C90A528A6BF7A35D6E9E687F69753F48F32FFA7B115D7CB0CA4C68EF82D
01A7A8B6782FE5B1AB827C391D850DAC38AE16187D0D2C8B4E500D7D00A94B1D
C44780612C729C1225607C270674EF0D3C96BFF904D563BFEACE2BD3CB1EC939
8900960AA875C73705BDCDF899DC050680505B3B45685DC780E0C4792B026C25
EDB6B4F9F0BEB9F756388B390968AAE3E6E67D911D5349806760B7CF9F86EDBB
14B9A134988C3E857FCC193C182B735419DADB28B035435A18684DF37BF1074E
B3E50C03EC35CF2559CA6717A7AB84013A936A061ACBB08CBCEF3798204BB517
E9EEEB848154EC758792E6234F8B52C61432A9CFF554B84C9A4373F20D95B61E
CB22A9BEF7AC54A52EBC6885AB05948F0EED72C03E936F666762EC501537F65F
5ACA32DCE2BB69AFC4462EE2565A47244948A460A8BCAC78990386CAEC9D42FD
75CE5CC8163057560B05BE38D1BDCF08B3DE2FF8A326D1F4732CB2356C4A3202
CF5BB04BE5ABAD159E61A9B2CC3E5843A64F5E6D35B8E08530A9DAE214BDB6F1
782CFC4A772D8B70F6BDE155F7118DABA2710058926158D3DC1F5FCA0E5C1334
2374E6254C16904F771419A0303BEAF123FF6F80B4C9AC15C3F74C3E28D480A0
7DFDE76E95B7DB8AF11CCBF024B22E21CC80D114536C84E2039F6F6EB5033D3C
0EE653BDF59EEFDC4E5149815BDE80DDE8FB4CC593A12CA41F02EEE710E0C0FC
56A6415D83334B829C83B3C93EE95C7C46F700D5F4A778F8F4CEB320DB0FBFD8
3A4F7E526F09EC7563C1EBD95E63DA3C2A7901845001113331F57A9135687E53
881A8323FA918E2B84A12A491E774EBEB0F313E9288C52DBA59A53A432F17E36
A345F9B434964BE0D04977E525D5B817F5EFE48A250174C28D801440E97A6924
A8309A653AF9CFD8BDA6BCEB6C76DB8D30799839263D6F6E6AA2689571883E5F
E116B5F0A8B3271794E0BA5B672E41877CD03E2273E6E96407B11EDC7EA4CBCF
594EA01BDC07940F57F6ADE8678E6952E320EBBD3BAFB99CD0A6D7F9FC11A770
D4A172749907DE733A8C0680572C7CA581759DB4991F6DA09E0CEFD76462F243
C59E2F387E9ABBFDE1C12122251164E4969A133789BAB5A7BE1860BE053D6302
C8E8A25320223B9EB850A8C9E9055C696E6BC9DB8E4802CF4F347C3404424DCF
824CFB3D490133B732E68E3C4B91E4FE65C42B5F38514940363707E679919D83
7DB2D821122773F4C10B33AA37ED6DFC78D15C9A1E4A481A602CFA2892835CEF
0AD05B3D78A767C0F348A0C85DBA779439F6B0CCE38CA0B2E551A4B142DAB04C
C70BA15585D4E4F417E77361CEDA01596CFB09BE9AA6F53B14199BDAA5B9ADD5
4CC11B51B721391770F27E1EC9E8056817A82FBB6F71728D7CB289CD36634EFB
88A5D5983B3322DA16A67A2D4F0F8F1D9563FC364F606A810E6EDD81671055F1
9F4663A520AAD8CA799846242056B99D8C8EEC585E82C430347A5020DED4EE1A
D0FBB705DB022C6B76E639F272B80F589980D2293B26F952EB7D3CBB98D97C8A
7CFACAB3BCD6697821CB0FEB84C7AF0233AFAAD1E24A8B87C5B5CEB889E44CCC
2713D86BF55ACA0006432B3DB850A815FA2CD1D183E6492E434EA91328FD35EB
AA2B99C2EDD5A7724A5FE71BEEA75E80312EE695210E5015DECBBD1CFFFD00EB
D410C65F5B887EC0E817EE83CF1DC74D1596E9067AF2F9A0E57EB8FD9C28D65E
F7388A8055CC30F3A1CDD2DDF3FDD7B525401C63DA4BC233FF8AF5BF6FE01F55
8E28E04FA2D71F849D38D50182290BD895D2DED7CA99962D5FF3180162D25EB0
96A3012AE302EB68D9B3F326028B67DA69B10DAE392F429E81C5E2891E5D1C4C
F84B48AD9AA558CAB1DCD30399263B4AD1CC0FA3D7DAE3F6243E7DE709C3CB00
8E0051ADCAA1A822199F5B4ADD40A40CC9E31B8F6668C8B55DD3D210FB51C951
7F1E01E50AD85973E3F9E09F9437B5DF658E2ED63EAC91AFD9F8E8441BD6C724
383E9EA890508028ADCE8EA134176F5EDD3B95D9C95BCE1483052A0E8BBB1402
BF0E6F39861E93E8B4E0C2804B8EA5E600BB4523668FAF2A465267C2E858D261
17F661A123DADFE470069F7013E01823D18C3EC797C2AC024E9921B693B384A2
37AF87FE16F9FC4B78703CFA58AA1737EBE3FE37CCB4665867E93D296CAAB4BF
04573251B2A7BBA5F649905345777C502E4DD0E1F4215F6495854188771CEB08
B9D1509504C81E33499A66E0DCF08CB709F40562D444F2D7C08B2F81E288E56A
2B6341D637AE8307259719E9F3A9A8B7AE4A3BFF8B9F6F06179AD52A9AD5759B
2D4B47FE5D968552849F6CACD1C1D18C1B6137CF5B686990BD17A55FFBB8DB67
B6210A0DB44C90F115954A292A47BBFFF2EA25D4679DCFC50A59E427E847FDE7
212BB01824072A6879C6F55B6F61C328A8336CE9E023CDF46742DC29B9D1E3DD
EF6F606499052925A92942B5CF2E8F7BE01BDB33F07E16D63DEF4707F6B10701
BFEAA0C576A63539CC96BD4FFCF1E22BF4D64FC0F6BE278D4D1CE1593D63DEF7
75C4506B581698AF4136A5F55A83246B63E0A8DDDF2DEBF0BC70A92D3B64D1FD
F723DE025C1578CAE73AC7617F61204CC6D61EDFF5C62EFE28050D9FCF086634
B11825621AAB60B750A97915AF598727B20178DA4F029E44ABD710B357D5C666
129D166FE9AF659E1EE299250E4E605BB4CA9FEAEE8ADE6902D1E9A7870DC1B0
CEB57EAC4D8D754D47D94542E29B1468389BBF90BB149C68A54986B285A12173
D6DC7B28272282F119071979C1D0A47493A8967A4B234EFBAAF7E6E21D3B1CB7
231B90B4EBC862133314CB5125B1D109A330CEA0DAF7C5B204EEB928256DA9A0
285BA404191251E6650A6823BF82318EF8F18B2799894825F3C1727C5D7E7F37
3E1CC2AD833EC1C574E79475F889B9CE9BE7B9F4DC3EBD10246961AC597D480E
51F0109994AD430EDD73802FD80B579D008B641FDD781047D406DADA99113C85
40F17AEF32E3072DDD0CDE818EE9F94DC84E430344D8A619454139E4A786B374
1FA0DCF0241C58AEF7CA19E63BAB119D174083F0672EECCB55ABA4D286163071
84EC54E446A1C8B2500B27F610B040F702E66CC0C4FAA42303CCC7532536BE0A
1720E908BE2CE1AD9604035927C341829C8A6B3CF7B639728B224B18740C7ECE
C14E5F2397387B731F4116D922DDBC456C101B385B2E66F4D60ECC5FFF6655DF
B53011C2D95C3D384864AF4B574D6DCBBF3A74AB0D4613BC8272FF827B608985
61B385AF97652AE4D5E2480661F04BE55BFBBB672F233CEDBCFF5DDB509F89E8
B8C192B5DFA9C1A7B05F0DBE8260970CC75D6C0185500890E51945B5B66DF4C5
865C1E821F92375622B3967CDD77B448449645981EA682D63E90F537CE2FC71A
BAA6E7B862AC7B386C4F337B3140307F2F2A9FFCE41F8609B0604B27C67293E7
8A4B3D1802DD2A4A1FD38986519AB3C5C92A7C28E1A84803CFA5A865BF53E3E4
B1374DAFE46B1A74086E6833E8279D5ED71560CA09E39E2963776C4EDD373FA3
474D9B6ED36626C93A0D862378F9854755B29154A47B6B18BF0448827140AF8F
B5606B66927E37AC81F9D09936D5F6F5EA589D23B1142501F2377EC756926E14
2A0E9EC74270EF5D0C8ACE829B831B1397B973A5D7803790D72A65F33BA879B4
40CD0FF4E5C96C28CFEFC4DA00EB607E792ED46ECDE8136C4F591C3B528D02BC
BE48E31A0A382AF434DE12766FA2AEA132D496412B49ED251C550EF94E603D88
2119A3F279C761B27836BB5E275FC898BFA553254ADA28FE4334A6B077147869
490FF598957127B959563290577FC1F6D500E923753CBBEEC89E136F000BB178
B36E5C41F965FA849419398A1F69FF4B4AA9FC1283C093C76AEF37786849F462
A75961C9675B8A921A58CF65476B351D4032278D13574FC2C21D056E67300AA5
18A3B8E1CF61FFF6C6FC0EC62E48BCB385791FC9EF32222FCCFECB5CBFF9F5EC
1BA33381BF88FF9F8E856953501D2FC7079E1AF375CE45AC52A688A6D36F8AF4
618449BF59F03B1394FDF3A7307A6515F4E115463FB71C01B2C65AC5DDBDFFDF
9B997F145A961CD52BB4FFFE101EDBBE132425C2AC0A7EFA47C3B49BBB946F14
2FC5DCF6A6A4102C99C528FF11A5F5CB07C16A0DBACB48C3233C1C65C9B8211C
A8E1F31619FF096E8A5899D10A8EBCD96FC01F54053D94DEA9FA8064200F3B29
076D755027081CAFB7E9057FD562AAB9E5ECE5A08EDBB6881553000BC9DBB8D3
63EAF332C19BB33871E7B7A8B3DC819752AC5D41C6D9B2367D2B566C12B1D926
95AFDB240DC22B6DC5F5E0ADBD9D7BD39315199E3471D1CE0E34189BFD06B784
32E2414950D6FBB41FF7BE8C9411ACCB81EC0AFC11C5A830E17A51EB9BA62604
E4A7593D7ED92B3D78706987CF545FDBEBB59F1BD0D806479791A77D5F731A69
FC98F89D301A77E3528D72ACF2D32BB6A7AC858A55206F324F20A886C1F2ADF2
A40ED42BC8ACF33FA3B05AED0C46468A672BF395AE662DDA625BB3315A4FCD68
E1064780DF5108B301320B15A4735ED4D83C16FA45E31A0A382AF434DE12766F
A2AEA13389F2B1AC7BE543E18D96DA7D361BF47CEC13D9BC29CFBC517B5109CC
428AC71A76D6E3FE0FFBA31D3A9964A7A8FD26D3794260F155586808DDADBAC6
A5BDFD52EFC98B74F2C206CBCD8F468A565C6D5DF5818344B427F77B1BFB04A7
4E32536B7C6632BEFE3EBDFF8F67128CE38A3BF3794A0BE5B900C018AF87FF97
E34D402DB559C222FBF9C92BE48C7334E4551F173982FC56E3F40CBD314220E9
9D4F1E8C0C9562962446568997D4C2DA2B4F32220F1B21972CE96B85A3512B9F
E4046E845E5C8F06FE63824D86E193616A27C3CF1D6E61512E505E3C95CCA984
DC3C80DC8C3FE6A833F497F8A4BB936F109E47E729AE2B9B55E678E4E001BEDD
930B2122EAEEF54D292E5E89FD4CAAE7D68854153D1B35DB9ECEB4B1871880BF
5E2B298146194F5ADA7D3819FA661FDD936FFA3A8CD7FD8E8C6D546FD77FFB99
235004F063AD7037DEEFB99A955AB8715574F61800FB46DD166454A642F4D4CE
ECB4E0A6F90D80BBCB7B84A64ADF8CA061FE1CAEC45D3F4EFD8EB6ECA6EFF614
6794E3108B1C28EDFC1579B34855867739963C97BC8435ED0119A05820F37660
DBFD06D5E8F47189C1D1836F6EA9A659E919F8CCA21689AD75212C74E1EF42FE
05FBF7D0687C46A7631891759DBC5097EA987962E3780830752458B10DC043CA
3A460F343080BE57AF5E1A194F88BB05FA08777F219BDBFE858BD61A34899F89
8B8749187A1FB7D154E67F96EA5F0D6EC848B5703D5806E589E664D74EB29FF3
5BC501302070F8BF7919570526C92D517B2DA3626427F665C71530EEFE823186
355E912CE9241FC2D6D6EA9E8F8515AFB292676D92FBF6528D2B5FD1A1EB2E40
2049616D8D3F749498D8C7360D2C60CAAC569160E1D3B1927AD2E08925B0B431
DE6884B0141FF7FA874212B6B14E461261549383C68DFEEDD25CE29C850D0C80
7D56E3D8E5540C0AC27A05B09416A43F240B807A063935D717EBCD44410F9556
D3492D26324782F786D66629A9910F8368BE84FCFF2E18FFFC1D8AD4E0F00764
26A7835613D02AE3865A34E4948BA2119BE6B31BBAB2048D47A235A790B00D04
ACC469004888A9E3D1F1E76D6491068203CDEE8554897D7EBE23BDFFBC5AC36C
9EE08467F432182928CD90769C4A60FB31D933BA422E4253A1F1A0DFDF546F24
53B6534ABF4611265921D6CFA7F8C641FE9EE621CAF1B0043A8C0314993E0F6E
8F8F3F28273DF5ACE7BAEC09CF1AC5E29F26AF6E6B603C0891173B4F4DB11EA2
EC34C2470B9811A0F6C64BC567D2C0572BF62DCA04E6721FD2C2FB9458F7C14D
9538CB0F04E833D591665C636DDA23003C1DC1968ABACBC9A34B2E016B3D4F92
3898B2DD348E217DE2197E5C93A9F02FE8C83895DF76F1EB7201D4CD352A806A
12AE4FA4D4078749EBADA7FC13B78A975BFED41DC0EEEC68B404081F09F426BD
A4ABA5656BED28F8F710E6C2A5CFF1F310793C8DBE57882CF6AC3D996E616F68
C39C63FDA1C8876CC9943D18AC9379FAD3189D99AA0DB4CF732C4EBE0E871939
D0287302C96245413C4FA279E758F20071E3A439D5ADAF7E57AC8EEB3811BE2B
C948A926FBBD01557526EEACF41793C7995D4BDA83DA74B1F042DF64BC8EA74A
6FB7BBDF2C41181935A55606E7F683C221625909B439940202D90ED09E048676
61E346C44D49BA47846B109B0ADAB5213B4F0F359C59A019B99962B07BBCBBC1
DC9B1A82A52BB1AA4C389131F39B3F4120A18FD3FC507042053282E1FBA49CA8
92F3F193E07EA6CDDF6441DBCF26AB4397387332FD80A2143ABDFA4A7370255C
759CE3911315A67A7A93E2728E8C85834FA62E6AFEA142BB08A41ACBEEC17D5A
556FB90318367990B9DC4B02140158EF091FE049DB02C03FD0D605E5E0B7CC00
9C8F37C3333F03E8B8BFAA8A9C9653D2EC56876CC2327234581652203A36250A
A25E8D003DC7FEB5694232569206AF5677D83569453D232E9EC48872C8701C26
CC99455232455000E5959498AB03604C1B4F6F8E1A427D46A6F8C52F6957C31A
2E90EDFFBEE8A6DEC11A08B8F57F1825974FBE0C17422B71F1F2FEDAF3751FCE
92730C067CA9BC2708F010BEDC19EF2D77717914643B71607DB0267FA4F925E9
9D40A7AAFC80F784CB395E28A117EF5E2917276ED538474AAF3390E3FBC06AB3
A045B024B187C45A711A346C5B78C0B29F9BE6CB9B0E8A17AEC868521C0D91FF
9C0B7D1BFAEDAACCC869D35F15E60E0F8A974A912ADDD74A05805817C2051857
42363FB318DE8DAAE3CF7EC585CBD90DD7BE0D07716186B5665FBEB77109603E
4E215538A4CC4EEE6C80038588E04319A2F1C34063CD55EBC79D08A0398B5395
2E236864F847E959A6500F800661DFFFB9B96D2AB7F85F45890B52607CFA345A
DF9F91A5D2DF077312675BC31AD512EEECFEC5D1E4B54ABC0948ABA3E14E5311
1A74AC2CC405693F2839009156A285C62D2D3E0E5E776B6A4EE936ED63F98460
3A986D63A14F75D1E089C67FECC4429AC61D1B38E2EF9838AC9366BDDE1D4F34
771107241DAC1CC3C79A0297F6DF3BB29787639A1BCD39A8B77A80127C683D69
2791C7239939542155D60C223FEB058395B0D8711743C2E1A67857D39B489E54
4E3CBFC56EC994783DE79BE054EEE1BA1940C3977F022225B17BC1FB68ADFB75
58DD9C9882D6FD699E670BCE55AA2BFEB24F4F5E0CCE3393F93062070CE4AEAB
1E4868B8F87A3346F5704F9131DB320777E09104B5ABAD4CA87508B5822E6131
3F29015CD41403466BEDB35B29D3CC75D6CD59D6202519C5907ACC7FD6D67BFC
8B239F46DD76961F4943FF2CD53E4C58BE4551DDA39E0E69027BEBFFAF24752C
FCED2F448CFA436CB8AB9158BBBFA7D861AA9E9199E7BD065BD7A4DD3EE36951
D4FDB05FC3B18B33E6C393F48AD1466A9B3014A5649C188E19CB578D538E4B56
77ACBD405937690E9735BA8A48F2CA96B678FA92D59BC869EE885E16DA2E1FD2
EB33DCB53293157F6EA58CF8150494A7CCF4FF2CD23910B38098CFD1568C4B21
07E28034C5E7EF1D6C03E4141D9CCFC489CCBFCE265295A24E0019B4DB886DA3
10F17C12AC898B7385FBFF2A8FF21964DEA6BF5E561ED94028918A39385FCCDC
600AA23D464439AC2372B9A6F35E1A4059B0C6F18FECCB3AFEBEDAE378D9CBBD
F56D12BA387D89E9D5E8D242755E76A2994C4DFB98D39D081ACC86C463A40D2A
A00E1C9F5288A3D9669496F9E3C3817FD2B94198132570951103FE38FB3AAFB9
D2A1EFC4B0A494D2C09DA439380D3D8D768A63E820260D5D6500112863BC76D5
D4B4D99B180EF4BFFC7EF25EE5CFF9C53E5F6A86C0D8E5730E808893BADF8F28
7070B831B28E117FF22F8337966F12D9BFDF5449CF2CD2F277D1A76BDD781F81
444ADBE45E7474132BBE2DE02FFC3515225E47084B9B348AC84A12C5FA99DAF4
4C46ED04461594B27C30E97025C9F29EE4BC9F7F1AA56993C7C1320D071B0AC0
6FD5BAB6F87DF45B5E1B11C4C4BFFC13E9A250E723A9D16419CC693F0052D95F
50EC9F275CA08A5A142EEF8AF7079DE76B3603AD99788F2C06085C34FA778049
133A71E7C1B59DC216EBB9C648CA0793F7B4F906A88362C060504AD771B3BFC6
DECF7F391864DF9B406DA8D33D768CC0BA2C59A79F9010124FFCE4750275E893
2E2A992D4D8CF7E1385139E26644363B148DBBBE4D1D60A3CA285454D78B35B9
E6E8EE3FE354B64D87C7DF67F8841BB3A00B613BBDBE9E641671F81384535D2F
F9BDEC468CDED769E53AD1B5645F4D2BAD779A77897802F808498A2A58478713
94585F7FA69834DB8B78F23A29BF9842C0D7002D156AD327481FFE21B11B3054
F3C9BFC0A6C583E83AD740116515D93F50A4B25DCD08E2D836A785083278FC7F
D658F3153D27D94BFAE2131C80261F040CF9D08057C9C204F7E37FC035798A24
9D431FE1971379EB687315D25C6F701533C985B5737450A5140A55607EA8F372
B87A46F43A33C271653FAAAB76C3F420FC0AC26BE9614F0744B3D7429A996282
BC6A32257CBC217B8FADECB3236BF57859EC4E3E307C1B73D92B41C7575A29DF
4C8E0ACB12D8B2740B7E461DEF59B384D6FFA0A37F3407A02B06A2A333985D05
5B5B9D86235A2FE1817CC70EC57F21BED2705565D044DE37816F98062E5D6F6E
A7BBE47F0F487587E28F976CF20A782776B039874112B173A27C54911A289A49
53B5207B0637FDDF454E7C79565507AB1C2EF74568BA644146C9E459CD2A26B4
7B59755CCED7AA451D9F47369F744254EC9916BB64E40FEE80EE7CB17B98B3BD
659797B79D0F09505FA05C938E87FBD241FD064DBF03040531B5ADF7195718B0
B5D21EF2E6897F39A6C30DE921F8AC4855E1E06CAFC0480B386B8A26F14300AC
335AC233E253FABB454EA7DC956B0556ACD99009D970C30B499E0867FEF05F25
17EDC3973DB1B7DDF5B01249B03A342D12E2D53E92C1677C0AD0D01FF3F4CFEB
0C9723A1221409471BA11B761CD7EB0E390751F6D1444D1736251328FBDA76AA
54AF279961C32AC7C0E4B88BA397999EF298D17D93271D693698F3EE313B7AE7
8CFCAABDFCFDBDB04A7346C39161BF424E6393DE6E1185FAA597E07F230783BA
FC54399C3391B7668E8A26055A457C903CD3FF06C03202D7971191463AD90370
80F86434824F63013057C5C1335F488CC84F9EA31AE956F93A3D894E5AD45EE8
4F6F8821CBED9ACC81B5A2F9EACB11F2AB7C54BFD3AB3D452C0A1C453B79694C
5A81302B445411B4F6388CAD24D57CBFDA3A7BBAF2ED3F97284616543CA51137
45C556658F0419B896A0EB6883000EE624A2B13C5BD2B7C12A777C48B20189E5
6C57999FDBFC4B2EF635F1002CA23E7264E0759BB620E37410485CBEB42AA955
4435BD3461DEDACD08CFF22D316383457CD5E1FE64A5338E43C2C4FB97CBF143
3FD493E1BBDC90379B539821848551458D1B35F68F92A1C70B6FDAF70E7F1F5D
7D0397701CF0F3820EE5AE1E486CDF0EC24DCB6A1E7ED0FE472051AF194FB082
0A7E269BC8206C1716FBBB8543A8C5F86D8412B945164D9306C3501A9E5DF6C5
957855650E0099272F91A359DE7AA3EBBDCF7552FCC26D8376067CB777D27A78
2BBA524920D2A350738D1B50CABEADA278890950EAA771479336D6F72526BD97
75A55A1132B671277E1ACCC0FC8165A7968C7F264EE0B7E38C6B0C7B99933BEF
7F718BAEFFFAFB265299BFCF318A2046653CF0335A032475EB04E5C7CD661FA7
C585228A77989BEF0870F6FABA731C01D568B310CC730663D9AE34C9AE2BF3D5
5CCFCC6EAED839EE1EB8BFE9F2FBCC8826EDBE8DA0669F772AE1A9CE76DD7C6B
6C8CF77472CCBED5CC70924F99428483C00217E530C04311E62180DB00D5521F
0851DAFDC464D7FA5A8EFBADA70F95EEE23CAEC1ED0862C4DEB2FB1F8662FF94
5EF30F7945096604F012A382E28559208F027648A84919E4F67D86015D218054
8ACE8645186D16AEA84FEE229D1F6C7143C42B70B36688D4E7DACD7BE3392920
BAD05AFCDADE49A1A86E7662760FAD627EFA00A941675EE4465C0BA55EDBB3BB
156829690D3F43BB3BECE687C82CFA5F513C95C2106F49876A8CC43AC4C44CF1
1B00FC9E363EA39117EFB15C3C1ACF91DDF0B246FBA995A692B7EF13FD7B3158
E8E9EA83BA7D8E9756AADBD2008BCBAD180BEB3F4851DBF7B323CD583024A4E3
D5D1ED94116C52C814549C46D7BAE0FD99C3B2BCBA0134F65FC73B4DBD080D77
4CF2641CDF7F402BCF976771E347BD86E00C0EAF11EEC4881A1C38EE361274CF
CA44BD6A7A013AC78A97F07374449F159AD7779D4C4160F3BBB3AA7D0F4DE785
1DE896774E63E00AA19D161BEA04CD9240B5DE14FE2048435DBC0D967FB51EA3
0ABE2BFAA87D464B482A00D8404DAB04FE08CE45A79D6F5A3E9748FB93033610
5985F66F6578804727EB3F96AEC2025D624257E31E6AAF911E6502D9401B5248
1C72D6D584E258739F5D46634754B68834D7EE6043865762593839AC5C9FE118
EA9DEACB4D5AD61DF56F82B4E016409DF02C9BF8DA4C2537AEF5A34A2AF07271
36F021942345C90C4D18442F2A272E6DFE8B65E924EDA782EDADC8AB97691A76
99089250312D16C9CD6089A73FA282DEDEAEB0C06C04CF553D858D5FDA0F6A69
A0B1736AC1D381B96AD1EB06A493AA5B150DD7D9EA23FF54135A1433D392E64A
CF288F9BCE86519A6EFC7D7FE46D8F3574388FC66C49569458BDACEFCAAC025B
9B8725CED36E3040FAB5FD76E96E0A84ABCB718AE82BC7A21712776216246073
C068053D3587868296C32011992FF4E6C6799D08925D04BAB3354980E5783CEE
A18CC014A6E6F428688A25950F2DBAE7B8C7CDD932199BE2832D7EF0CF6D0726
A0EEDBDC5C4FCE0E9B5209033B3E286B86E4C4F547EDF3EE820574D1785AF953
03C979F03F1D1595E0D8A2073BAC6557181C504EC88D95FD026AEF5C0AB0DB21
3E517AF13518801D4CD2F8948D0750B258BA174AA6566BA3BDE106A3FB85D522
C8EBF43695E9D654674D0FA550CD0CFB4EAD524F4D7CBF904A33DED058E834AD
7408B9E0CE1A50995874786F8E6B1D370551B323D93D6148D19BB0E041273CB4
FBBFB007C39B4CF6A66DEF50EF2453EEF572415D352340EC1499CA57E0124EC8
892E3AC785A003134FEE2E3B16587526C069CD0E4BFE50CBD6D4B2DAC2E62399
1F8F39ED716A24048E94A177A3CE67DF7229B890231D2B9E0E9EACA12535D84A
D9F136F739DD6D1F761941F51557284AD57C4EE9763BCC89D1DAF0ED85FEF809
59DE1B4D0A3E9CC45439394C7D62E7693B6DA5A404C87E7553BE5268BFD51C9A
7E4ABFAFC184A8BB9DC90003926381C40A5B16CCAD6D75A12FA15B82620BC54A
3ECAA4E1FE86151F3F5F707971C6035A469AE2B45596BB3CC9D9C941E30F9EDC
7FA81A1A57AF3A2F3324DAD09452D59B719447EDD3883E08794F4DDF98D69D17
AE09918F48504BD4540BD90C77F649B574ECEEC3F1E5BFD9E2B0C42F8C901A14
FA10632361E13EFC4D76B6734EADAF07507D5226790F5CC047E72ADE0642514C
E0940341F6342DDAC40018212498570E7CCDE9E302774A3F9642BF3D3EBF5F59
F815A683CBD5881E31E050F4A11D4E8B0346CB887FD7FF30FFAD3A2456D66D27
E63549A5E2FAAA82F7414AA3343FBD256AD4A65282573A42177F515AFD0AF6BA
16BF90AB01C27E9B83E0A5C8B36F9F0623D749746E83CD2E46B061B93FF48F39
5FFFFAF6222266F420E189283EE0035C54DA80FD90FC06CCE5B8BDA4EC2B9A1C
BA5EAFE9D0AB624E4AD8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFTI1095
%!FontType1-1.0: SFTI1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecti1095, tcti1095, lati1095, lbti1095, lcti1095, rxti1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Italic) def
/FamilyName (Computer Modern) def
/ItalicAngle -14.04 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFTI1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-94 -320 1401 937}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F3352947BD440B27EFF35014E69B2D4A1E3E6C11
B5BEF15F1C9B9166BED773C0A7F7CC50982C77DC7E78F250433EEEAF42CDF094
ECF6E1ECF893F6FEE69AA0F85D5DF1E7EADED78FFC156E291628F8CC7804F06B
62D3BA889336AC6ADBE1B7D60480CC1B296F9BCA97DE33DCB279D6F0BA3D9A77
A23E61EA065CB50088BC96CADB967FA8D5036C8555CF1BC24BE9B5A5ADB87A0C
376E0A947BA6CE72C317012D37F8E705B41B5691F1AF74AAE195FB30F963A98E
AC0DD6DF90B9446767E26BFAB29C5137B9577FCF00D8436102AE83B626EEB40B
237373200ED0F4E65426EEACA520A1ABE781A97D898FCF322DB4DCF6BD2703F7
6527C76B8CE52F64CE259A3E658B4C11AC2E62A7850FFC2397A96AB26D8425AB
400B67D191412DC8B3ED0D44E4B64435CA93AEC6BEE702B9D3B0F59B7B62E6A1
534CE9687AFC4DCC819CC6A624392455155D18510B8DE55E94B7481F52029839
8EDD33F49AD664A57F6C46CCC8AB92CE365A0F10AD75A110791CCE87579E8BA8
401BBFC529DCF7AA05F6081653F573F5A5C64D1888F358456064948CBF73369D
4410E744F4F16C634FE8C6E0C1E02F218B069277935A3EB227108B9B7FA9D78D
563C5890384F13A6E29A14234B37B223148F9C270579849E707C6A729AB49070
0D991DEDB7A769EA9B02F440D64A25EED6E6770C3550943838BB8D6B2A70A3E1
6AF70890C661AECDB7FC2B119A14C21D012320856A5B740DA507011DABF49C4B
AE84196E605DA8420AF12CB0DF607F8776ECED9AE9FE4E62F5A85DCC6EAA4C14
832705AF38098846BCB59A32E8C9C686F75641396C487F779C951BD68B34894F
BFAAFDD30AF025F287A8D4ABF3ADDAB177792480128648D193B18CB830AE867F
A6ADE7122A61B91B8EBCAF2DB796CB75AFCF6E99EDA8946B78E0548CA54B43B1
5AA81C73D39DCBF8FF3887781E45713A3BFF2BAE001B07895F089B2488319CAB
D93BC84CF44FD1B87D50F9B1AB7776D85E4213C7D27CEDBAC9B94708C68EB32E
7F70A371B66E5D14FE082FF979D74A4371EE98321437608A09AA337D2D1DD78D
1B7A61C739AA118EDA902FE27CFBF067ADEF88D148CEF6189F16899026618F83
03BFB755C8D5CDD137AA943AD61194630224162FA0771421FBBF33A2B343B0FE
C3618FED4968B44D1B4B2AD0C806645C6D2E9DEFDD229F1EF1A537B9FEFA61AE
092C74E6767BB4E6E779E0E7390F15B82DBBF1DB46994341A37D17FA2091D41A
1CE3979F8B209A4660C220D0CCC2A45822B752AFFC111C48818ECEF6C38DABAF
6FB91A4CCF5D2513062A757DBAD33B3154FC69C7EB84E9764346908D5C3330A0
985DE6150645266166F9049DBF73D907E4E856D60F007C12820895E7671B195B
FDB4A87DEABB8331CA585008AF6383F6EF037AAA115E451D3EDBB599DC21FCD4
61CEECA106FFADFC82AFE18A1EFE5496CE7808330CB7E9D9A86146B9AAF187B9
85E0705E38E75618BCA244BBE797030A3FAA5ECA86A3BEBF3DDE39367F879566
9F0B4E446EAFE3CB12F359BB12BC05DE8C4E9ECEBA2EC06F3F0994874C194C57
A6E828A7B25A222EEA1EC27932CE46A69D77B99233479FC9E0970DB6BE4DDBC6
DF4768664BF14767F031037C25E6751099FFC9F3FA60F6AC177908BACAC74C18
F6D9BFD90E284BCE7CD22716C038E161D71EB3A10AF985261411A4DD131F0381
04DA17EF456E2E0FAC98CCD60701CD48B9F9E243CFF098B6D25ED0A7C243452E
BFC164FABD6E0DCEEDC402A2D4EA98CB943F1B58E6F7DF8F113B65A334A8EBF3
1B241EB75D11AF2E8208AC6508CD3DAE99183A214CFA004F89A05C270CCD20F4
9B3A8C0164A7BEA283E196790C21B4B7EBD226881E67FAEC8A1757F0FFED6653
57992D491FBC69B8A863A10007A43635FCE07D0CBB2C5A1C96717D3DF9D2442F
9AECF3DDC1ECA9B83CE2E122D29A06D728DA112FF15BA85E1CD91439C8F771BE
90DC55515FFEFDF1E30DE67D6D7ED11615812782D18DBB716F80B6B0576FF87B
56195E0156ED0C13A9677245535EC08197FB5B09C7826494441D045D2E89062C
7F76D53523CC317961CEF5F0C066EB0DBC25C1A5C451BB69C7505C8B480D537D
147A66EE851DBD7304468A0E65F566A1C695F8D501537ABE3F108DCB506E2767
82C992DB9F8143589E678B8FCA1F51AAF05735E3798CE0CB13EA5B842D786281
F98AA4F2BEFB280385D1CD49392BAB3942DDC038B03D92674B7078400A0BA174
25881059A2D1339A463863199D1BD512A070197B92A583F927955F3C848BBE86
370BC4650F87848033C2B27E50EBD75A24F9B1D835A7CC092ADF83B8DF71CD39
F610905271985920DE1468DEE1B7A76D200015F8DD8E99CEB623D4C5E07BFB16
F0653273C97544F888E807C3547D6D62AE15A692EBC69CABCDDC40D1B901D961
880B44F59080BF793667D116EC7670151CED0CF6FD4DCA68502A1CA9A2DEA357
BA4A89929F29AE099FB604843D17724B330B14C0C655A1FE092D7EF27F1CC2B5
77766770EE23C52AA38A5B2DEE0AD0A6D1415BDCE7BC1EE0E3D93895363D8011
6C2A21473D0756C31E7E0A1CA97C19A0E28BDC25F2B1769D6E798F865B357A8D
8EB98B4536EA527F5BBF4A12636E4C4AD6E927BCBE0645A187A86DCC9A4B5593
802277457CD318EE0DDC1A5B712F2C19A1C1AD46AA4BBD9A1DD2D7A467F05E48
EC19D506A32CA53FD08244A4B20D0727B01A996950235FD56FB79429EA9E146E
742FCC8BA675AE7AAC09E27E18F4E34BFF594F18388BB171D09A555161A40FF1
57E88C15584BC7A67696B15496A4B55F95151805F2EFFA0034D37F7DB420BA7B
291991E1C7F2A7EC355E2C6C5D0584AEBBEC3C4A876EBCC64A317F5B7469010E
F8B8AC23F0E5955E1A8D61851F90BB0F30371FF13A63E5883BF48C0543C6ED4F
1AAAA51CFECA7420BC024C3AEBBAA476AC2B1D7A26B9FF52B0CC82E6A78A5EB3
8EF6BA9E6A2F7C2AD8ECAA9088D94C622AB1762436E4276150B16E40AF7D7D1D
21AE9C4DB800F0E32A9F659DD6244565B5F0CFF08CFE3515DB1B2049FC74F1E7
513C2A3D608703F87755CAB6FFF54A585D0014ED36A34C8552C571ADC7C21184
3BFD6B20AEAC91966BB70B3AC1DC1178DC00EF90967FC41BB90F64BF25A41D8D
8194596845F1BED0EEA915C8E476DA4B7C3E2FC0E507305C1691751A5D0745EA
056788F927EF7A216E1D84A4CB1C1918B98CB3018E83A23DA148F1C2A62E72A0
CDF05C62F994F59D2447F42408EABAEF29491CA0DDD0B4E461D9BB63955010B1
29EBA5B75AE65390DA0739806C7B65AECC61A7BB92EE841CC950C0129882F821
1A177D13FA1453DB417DA36662058C3D006BB070F413E9465984E1488FBE5543
50ACFDF33BBA18287D241619A256B428233435F49667D6210B8B429C2CBC4D7A
C036C0571DCC990C60FBA08F64488F6998863DCB080FDA85C6C4D28960B3C591
1645E54D9F9E2E1A1F760498C875EAE7E49B09BB3A2B1C548D84ED63036596FC
6967004A0D51B5FBA2844823F926F7D561691E5C6A7DCC13B28A4945DBAF16CB
022E042D846672347D4196A3BE1E974E0F025326715232D6CF29D59695A2DBC1
CF0A05372F5211D32024E568936163FD3FAFD44CD4F2BE939808958F7557CC7C
EFD34C4EF05B4584A89D23B1EF0149DC9724B738DEB7E43209201199E185997C
0225A1B9C4792EE98BFDFB87D7CAB3099D93D7D7F0835871AF95FBDC27FA986E
5EC3B139CA086249649B51CCDA9039FFCB4C25F016DE19590722434C21793D3E
EBBCDA28A5F90D98C4B17E2DDC3EA3ACDE174B8DEB83A519918AFF871533F2DA
D0A7D875D0858619040A107D9255FED2D85391ED0F054360D9EBEC93DA9D3C38
864B45A62016B0466866FE21A1960C1E37D9566113768CB0FFF33452686CB041
E5464B0289B7ACB44FF74149D1CDE376470198B6939A8D330AE4ED930AFFB09F
D38C65C9A616F9DACDB27F8FB7B2F234B71023B53A9D2E55607D7B814502D167
C1EFF5F8CD6E432CF100675634D4F94DB4D82AC0887211C76AB0CBDFE5D1F5A3
9810ACA8C41E74EF00080C83DD86A92E59CA854A7003C287922D9C8C92620D50
C44DC2C8853BB3E2B924BDDB70948770721ADE277138D32D57A4E8CB3D64D964
70C31B21A1C48181C93F2AFEAFEDBD56F54927C53FFDAAF3AF63729E73E71F24
ADD54882C163617B77D65D423BA1670BA32E8139E79E32C1391BA053E401E51D
E267AB01A110EA6753CD52FCAFA6EAD339EEE7E6B029AD7E573FFF7537658827
20C46F6BEB664D1BD52C98ABB00474EA5AA1F0D4DE627469CA129EE6412EE05A
459DA96DEC572BD52008BA77756AD40E704DF03B0E240A265C77BEB8EE794EBA
DBDDBD275C5AF4BD0572A003EB3EC31F3ACA5708D129B4B96708DF74047617B3
FBBEEA2A08DE64815E87A57007B594B0BEB458BB64308A77AEEAA87D62D092EF
7CDA08BE8FB158E0B834EE17BB274D3CEF0B0CAB3DAA1D2A0F92664AD75A96C1
4F957F54ED02FD02BD68EDC58C5AB02232B535323B6171CDB17A23A790EB523C
29F78ECB32AAB90037AB90FED523DE56BB0413DA7775B8CF0E77EFE6ECBC2B94
C6A0DCB9E04BAE62AE56F9DB92C4CB297A1985E2D8DA364605014271364B973C
F4402463F7D6050CE676F06EE0CD9717A41D4C880E7ECC8A61D14B999234D302
F81630D9073F69D7311CB9B31849B483757DA7248136E45A62BC30A413647D90
5576F444ED0DAC1AADA463774FBA5BDB44B28014E714E5AAC597C3D514037CAF
2D9B1753B7F4DF1186CD1524BAAAD5CEB7D651B09FADD89C4BF7A3AD8D316B14
51E38907B58D1419843E325FB50849994397F54EFDC5C30D3FB9E22CAE2232C2
4B64C8408D38C8E6A9D605B5104943B2C35F0B44F078E3F2A8DC05BDB0F2DAC9
B6E740B77393BCD34AB4365FB84841EC9202C3D02C9A2CF71D52FB4AFBD6A6BA
779F859217CF48FF0CA96215E62FDBF6A9AA02E86A0BD3914F95BD5F6DA086F3
7D9E84A54BE377B54EB6D9BD1D20BE05296DB47832022631F4B19235CF735AF0
5374265D2A13A285182F393CC283F2D8710FCC43278CFC4D30DAFFBBE1AF1E95
D497E672CAFB39AEA46218CE17FE3EB5A5B70B54B37DC221521756CD2DD168E3
08DDAD1697C25BB3951FF1F2ADCE2F9A2CB2B6AC222656713D51F6400DD9432B
0CE54B0FF347E2F94EFFD95E989F4BAF465B5F2C28A996B7E54FA7C76FA67A73
9DDED783A0838DB4F17B8429BDB557669ECC707AF9C9E0F86B6859C876BB5F88
C1DB202898F79D701A90EAADDAB177792480128648D193B18CB8365D32146FA0
EF9A2CF69FD3DA4D2FC79A299F3EBADA33D5762A71D368BA08C9F096AD7B5629
114631AB5BD39F35629F5FFDF25B197EC4E5B88E88D2D116A4214C10818B30FB
8C2DC39AF92BA3AE7AC9B6F035C55B21C665DD878C83266BA77FF48BB4064EAE
F6B233CB2B1BE8C3803C8C57941FDDCF672D2A480EA6674365AB6AFDB4EB58F6
EBC3B05775D06F35D4FB9A1D7672CE0C0BDF31366B36D2182564CBC6C00B141A
758934A72520E4B2527E873531FD8A477E0F2202AD58DF0688F71F97FDA06C18
EB432A5967F4F37A61F65492F7550C8187AC6FAD645CE653621CB6D33F53D813
C9134E91EE7725531EDBF9C24BD342AFD93F779DD0AC05ABE2EC1647743993FD
1C2C03E9D5A5056D77888B67ED084876A7D9D90B0C39E4F076F03E72897A0D2D
FF168325FD6B4392AAF11143DA2E4D446BF56AE8729CC272431F91B8EA9D92B3
6D642B7D3A9DF6D6F70F04B473097ABE6004071442F00544E574CE08B25D3636
3A9AF197090EE5235882FFF6C169C9A3E4733FB522EC61099BD30C5656748D8D
E39DC75A7C108A688749134752680446F888A3D81F399274458A9A9E480FBAB9
1561D079041FB7CC4DEE702DA0DF2727D9E1AA2D9960687DD088795C8B791E03
2CA6E0258502DA3B19A5CF2A51F61981D2A539A4556B9F4D65485594726DBE49
04FA0B90AD71DB892BEBA210304BB5A456EAF97B87CB0EB1B6200DA06D335B15
65CCE8AFB0BF8E4F10523AE7F6DAEFA530A835479D3FC7623589A2B26FB39517
A34B524376A8EC5C9F615653BF76AE15D8E216F49C9996ADEDE43E47787411F4
10F6880F4CCEC2AB001F03E1AAFC754A7DAB69890D155359739E83CE1430E3E8
512EAADF7A9A1D219564801CC51BE0E9E633487A11F4E4ED26530CB1B2C5ACB7
0751E45033598B7B44C765DC26D9E157E657F14B04AA7720241888D3B8A97F5F
335EDB72C0C064AA3C01AE29CB56FA80FB695BD4840F54ECE3D53DB6F732A76E
3C20910E855DB7386CE1B6E83726AD2053E5711C82AB51E87F71765318AE3209
864263EC9EC6DAC1AE92A63D02BB937F8A1FF01B63640A39B1FCB7BA910E11E7
F2C6972E21934F0656233F704C561DE0ACAA6B4D82E60BC6720F450BF66DF64C
752CBA71B573BAC93A9F5DE278DA860DC117D6A8454EA11DF4A3856ABF7A12C5
85205D8C66FFD7FA6E43AB24250CF03C148C57A35DB63BC83E43F6E03945C1EC
B8920ED125D8C5554A45816F11C172C8499E8956C1ADC998295066D5344986A0
F9DF40FA336F406CC91C048711EF040ED86E52716A68372715EAD7D8545C11F0
6143AA90D235F5AEC7BFB1B36017059030556AF28F5BF04BAF5C2B942B72A752
F4C5C7CA221645CEC2174D0E6422111BB81D4C8B5A6EB9530820AD6620D3B60F
1A0B0AACA77474305D6E386634F129765E2485BA500724E49173CC7111BDFEB0
EC523EFBF17115F8F38314740EF5B24405648D5EA5F95D79F7E8686482AAAEDE
3EED07CFE3117875E5A6C26B84F225078B3AE4A7D1860345F16D96DCF01777C5
6F540FF5D2B2B39892D4E91FFF4306454AB1CDFF776FF8D43B6FFC7B5F5DBDD0
16F03E617FB1064F0718A52ED508448B935827C0F89C97586C37F06CE425250E
237EA2BCDE7EEAA13517AC23802A803AAF883151A268EBD36FCB34A44710846B
AE74FD59D70362931D8195472A36DE2F8BFD2E3E44EC48187A5E602EDFB5C56D
031B08B8EE6BD2F364260C45D5914EB16EF5DE03F241AB05FB956727660DCD88
5735DBC1993F76F06A31BF5E0B836371FF83844872E29EF110C4E331404851E3
405B2C732531173EA885E8C5B704D37E19D0B89CEAC43039DE5799919D7A0780
22D7DED926AC19958676638C35DB59728BA51D9947F3E44BC25C885A37FABD19
65E5C77F2C3D757926F7641F2F520F2483A9E6C42252936A97A3CAE0991A889A
2A6C9C5DEF862E52A7363BEBE9D39B3343F5FD68190526DDAA841DD21278B29A
A4D0AC102C2A0B1516CB68D56B6C773CCD0C90F2B95395812B09C09BDCFE89E5
AB159688355B9D06947A20EBB2722067AA0FBD3918F7F9AB0E2BAB0F89D46868
E3A33CB561893ED52540FC927A9B997C82D38977D171B15DD33ADEF9193022D6
10655AD01C64189D085A7DE2EF0C2DFE762D7D2CEFF02C32B8B91CC23597BD1D
F98861BD19D0F091D72980787CCD5EF6BC37B60243B355841A7D57E124AA200E
FB39057167461593C87D090E04997FA97D792F313FAEA8D93845CD2AA8A1CBCD
D5771854B7E234B19551CB995E72BF69173BDC2267A927614E835F51E63E09DB
93FA97B05244333CB8F58B2A52D533DDDC891E9D267451A94A2E7348E338061A
7AAD14E9414859979FB9773F1D44EEE7C8498CF1AED31C565E9151219C86CB45
97F46AAE7CE3395F0FB4364702511AAE614F190DC57F6E71DA7A8736E096A421
62C9BDC014875D0B1D0F64477655796CF77EFC7DAF2CA7A39AE2706E984040DD
EC66BF6BA830995CF657CA7207C961DCC125BD4A86E754EFDA16BCA05DEB7F0E
C7E1709AC7299196A7A874B7AADAF78AE0BEB5560A0E58EAE230DAD77D98A946
948B21EC7B3ED2EC4F92472EF78388E6ADFF5104CE94A693DCD7FCA7EA73E1EA
8C2954E7251BE2E085671644E889CB71E3781AA3607C34D2FBE4393FDB13FC3B
396FA1035AE0ADA08924CA7598B052AB49A5078CA640978C7EF757EE3E1345C0
B29C55D3FFFB895AB2BE43926FEC1266786659050CBD7B338D8927F2AACB7E04
FED3E0DAD6139873D39EF592578BDB60BFCF0F6B4392F98FF6E9A503FB22D769
0A4C60942ACF0E31404B0897CDF0542FE383FAD1143830B37E570166B0CE681A
263AE402D5A81D91A822B9EC6D2B7D58B5C0EE1B6DE181D826EA00D78EEA635D
04CB109022B6C6EA2E25C8C2DD77DD9D5E944A4B5023060F377820DA5B7181D4
76D9B295A44B3F371A6F7C9D6984695CDD51099756B23C6F1B1674F986C6A5F2
9030DCE5A6DFC81C1504D4D09E1B5E7E6EE25209EF7FBCEC9D6079042E52D5BF
ACAC6043BD88A24F09BDB19B1D690E0261FB713FDFE4F198CF3E4A5FD31C817A
7836AD7EF644156876340C4A0922B75E7EF41A4BFCD9CE2261883E19EAD47F38
A85B06C5676AF19A45BCC2905987C2650C76CD606A0AB5838BA246B5175E563B
ED1BEB95A8CDDE9F3AE66CDA3FCFFE541BFA01E70786FFE504C70BFFAF39D5E8
DA57C9C850205DBA7C6D0EC352F86AEF7C9FE4E357C303D5481A2E7AEBC1EA4D
9C3E7F59BB1384DC2E6371D9049DD16C817C0BD591F2C27230D296623AE30E3E
E0443FB925C4500C7A0C383EB1C0F90A94C7B0249990A8E7538A784024EF25B3
9142C93F257088698990D6C8174248CFB08414A10D24B105850CC1A175AB640B
3F3050F2640205DE9C3DFA592B81F8CDEB6289E54814F77D86C80E714F908165
B187C4AE40673C852514CDCF5936E7F6C6212280E7E4F7D886D4AFB452F899DB
9FE842B867A67FE4611B26F2B377C4E10B6C92AD0553DEE05488062C8C94BA0D
836F4126BFB97744CED63CF60B545111548D03F409DEB443E4C54715DA067AE3
9CC6854E7F2D6B5E7661612124F5C4308E6DCCA490B18E3D332DA31627B82287
7C4ED6D5C8B30F95BDE678980601606C988F7A504B643E4CBC6A2FB4F2194A15
D90A41A0E5069DAB9B4C13315A031052CFDA6C4492E6FA85780F3F598ED03911
F072C5A91457A3757E3F76B2AE7E8289355D4535F322D36703D91BC4957C78DD
B0E94993638E3C9CF443149345C500D879B4D32811E4D58FB80958D56EA9D08F
C55DEC21160B1EFB587B114D8B69E282F6766C940916AE96BBA480BB4472260A
0C808EA3F6C2FB992A112EE203D4027B303F4B365F8948018B90ED80DC3ADCC0
DE305E7AD3FCD9AB6D518EEC5D8C382B31943816E865A85C3A4E1A569E7C5646
5374FF21BD3F473E9EFAD8DB9FFA16A04320FD73B51A92E494DBAF2830959688
1AE238BFC6A128924E0237E69F639189365E4CBE015BF312EAEE126733F9664E
712644E1309E321AC3767B462D11F7E66F58C7DF9841EBDCBF85188C40EA53CE
1E7364346FCE943B87241B6FE170152E1E6C5812D6AA3AEA7CBFAA34A117DCDF
DB83D23F7A37A10D9502EF9E2617F5EE6F83983AC56AA83B3EADF02F9C151E4E
30D55447980A1F502E5142E8FD852899B8FFDB822209DDAC5E768B052C70474F
1D9C66A409F9BDE28AABA73A8866950C44AE2BD5A48AF05CF767B05CC1FA9C75
A42B747D4F21D9A0D8B0198E057E3DBCE2AFC9388C3A2CAFEAB357F6E08968A6
032F336C94C4D49E8AFA59B5B96B911CD7BAFF119EF9DB2DEFF3D86C74BDB6DE
502A9F7AD8113340590EF97FCAEA0079C08824129D592215A266EA52D5D0C615
9F3DC45FC77BFD275F6D997743BFFF28313A6DBACA9BB6708FD21A95F7674AB1
FE1D0602BDEB63BB0853229EAF52E01F96FBECAC1EE5E8260450089DCE8548A7
14E8C7FA6343D7BFA1C90AE7585D1974501E4EC2A667C270C67E21DB0F7151B1
F43D71CA46A1BD339906E6333848C9676D7C1FA2C60ABF2A1AC4C2E4DB65719A
02B547D05F169F3F923E9B7CDEC9976448C6B95EA05ECA50A1D750F5E297AC77
B38AE713D7D00B0D3DF021B55031E2ECE16909AC1DFEE07E417BF51DDCD9042B
1240D3E465A7443705BF0FE8BF5E1F9EE72760EFF2231836BE97472148DAB460
1462D5E4C2CF8C653CBB33FB5511AC49EBE2FAC99D77B61D8E9DB7E5A259CC40
4617084D75CE65F20D7164637763C1085CD88AA8542E9A95EBE34BA086894E58
5889C0501D0F2FE0596A71A1D0BA04D6880B9470DBF6EC7BE571C03163775DFE
F474340E9299E06A863D3315064A03096840CA90EBD0706CD3229C18FF605049
AC7E80717F234430A8772203F3CE77DAA153A7C4C3A9C35B4F1944B856AD10C5
4238CA6F46FA3B8D504E89474A92C4CB81D23916A2194688C683D308D7B13FA0
6625B838AE840838D84349481FD63B692151710253A80877148F5B9A1F2D2ACD
C7705AF79BE2290FD2BB50CFF1E934F3F16299CA93A25D2CF47B0103ED2D4216
5F6CA7174C432DA41348225C7190C4072082F3A7EBD950EF8BDDE7F8EEA612DF
F0432B0FE4E7F1CEA372F1015A0F9DEC2788B4D9FC0D30D42D0807B126AB5FE5
3812F1B903240EF2A29984EE47FA2E476E4669D7018DBB400361FCF5402B6785
02E7C5A1EF0B1C42169287DF495AB9C019F03DAFC585CAFAD20E8C5FDEC8444F
43DFD9CA98FADAE7294CC29F9AE3B05B5E7A1A97F88DA2B2205CE966D64201FA
CBDB8C3F348E7CB30A41540368BA9F7C6AADA1ABDC282FB9FD5D275CEA5B78ED
3D8379907D2354E12E4C0A0A2B1C95F281E017722580C6012C8B68FE9EC0BC71
5F2987131FF42CC81FE186A8707443A8F0900488CE405DD07FC03ABBDBC42D55
EAAE420BEB442A1FB1E12F7A9C7F7731EA930145DA9ACEF4B953607F420B9228
C3B45A26663E11725449E60555FAE6CE75E8A45EDAEEC4A87EF2E43B952B8DC7
AE5A8B25FE56025D191A279ABA45E3C444DDFED4943342542298415D1DF214DF
CFFA88EED6706DD439CBD2AA5106271D618FA74BF0B8E4DFB2332F340FC05D84
ED6EE24AA935C246375D0E8E12EF5FF950D4E2C55F64EAEA6B2B249C695E6883
8F61D2DC3E24F275916DA849100D4274B385A12173D6DC7B28272282F119071B
DA6FEDB0E3153FA8282918191ECF16684D51DE081374BDFD3EE818C316B7D3FA
7B5ACD12852FAE23AC16CF82CA3579BB6074020EDF7CCBDADC93EB66B6D595DB
32130C3F68748B273377C7A9DC308D99E9F45B0998EBD2D1372D21BC4343DB4D
790D552E9D77B6ADE77D79E47029E40C4B5B596817F23024534D7296CD19EBEC
0DD982D45948133162917A9B4BEBAAC80C29D7ABACC7C75C191DFA738110F09D
41CCA0471BA80CF195065188EE3F3E5AEF9BD7C73346ECC0AA30C94FB33AB4B5
171BE481A96E16FDDB3374714D577E9B496C3B5D656CF7C2011D60A378DC50F2
6289C06E1D550E4B5A45C9C584035A7C0F927F1E34E9A136FBCAB30EC2B8DA7D
BE1A19814C874F53A4085443934A6F404C62CC9813E25B9D2D27A1C04D2B8F47
B5CD967D978EA767E825D62E28C2E864DE802BCE0C0946086476010D714CB240
64C1437EF7EDAC37B01631F3A0E926766BCE7972A733C12CB2E7FF40E7063A50
3CDCF91DF3B12463EB90FD1EB0B4511473D837EDDC81BC5FC340E2EF78EB9C2D
99B6C2BE6916D93923DC1E84820428A9D307CF356EDF82652E252D585BD15E9A
FD13422D16E9493A29D3417DD974A9546DF809ED64AA57C5E4571C32B499D29E
2B3B259C581BA64842BA78C513B9078F058791F536EA72D7560AD5C70E9F2D78
18A95D058ABC884EE745F76030D289FB9DE892B1AEE2DC55E825472320B39E62
32CCB7C6882C8D3CBA8646E00976BE07B0EB9FD24F07B2F540B706EB44130268
D1A0F3B0517BEB6ED17C38E9D5189F8196F1321D929B05DAD4F0649C6F408156
3B198F510959231F2BD6408ACAE74BE7E3358DF74A836DE7A317F1FD1CADB828
028E26370797CC10FF15872C5FAE0F1F23B7C33CF890ECF07D263496EBD6E164
3F070730D8E2E4E40216C04A4A85625518EB78FBA8079A6A6446EC48C5A36A33
61D3A25FBAE4BF71A55721CC1D691E2D29331D9968FC0D479EB6016DBE7422A2
B330F62D087271EE7DCA99EA124467940A83B56BFCEFB91B78A79C847D5F33F5
A80361682F6D838CEB488F12EBE930CBC38BAA12DC6DBCC52C41628B8CBE8E9D
86513B0A36050F3ECA0A3B389CE4D3FC3C179241CC92E9BE321DBAEEB2506DB4
50144ED4AAC6A14A80D43A69A5AF81CEBAB159B15FEC9D89747869E186B8EAC1
CABC845B22E5DDD3C021B0826B097AFF22FC6EED5507DBE72FFCB323908F04EF
6C58A67B6EE00377A65F78E6D733AD39A304CB7C85A5B1ED6A5A88B1E514CCAC
079A4ADB4D72FFE3AE828500753B2E5302904D0CA4B70D186072754C98464411
4E979F4CD9473FF2ECBF9CF84D4070C0DB74DB6319970BF237728E26B0BA4748
4188FC01B0349E0452415533E04FB4EB99E3FFA8668A139C7352E189EA91A888
D64471472D3D09D9DB48EC738D9669448E4F159603A6AE1E493C4B60B12F1BF2
152327F765E094DB35B3D794483650BD8169D6B1DD2B9A3F6A0A5EF8DA12CCD8
1799EE994A9C6D56FD69EBD2EE17EB18C0AFF7CADE65334244DF89B1FD4EB847
D081EA939FC9262B56BFA1A66DC41B525C03D031F5ABD47D7D76D5EAC8195519
283D1AA8A10DB9BD9664FA5EBBC394F6F3B8BADCD19404DD2C76255FC0104A25
2260FB1746139850ACD990092546AF937F0BE8B41E62E00906906EE526F9AF10
730889C891B1F04F8CDE080D9F71997BBD9F88E7581062609D0C12F15270D171
189099BA03C2C94A92ED509EDD54DC1B82A447043CE44E65F7AC2B88F22388A9
EA41E968900DF0B0C1845B6D4D04B50B4C9A58A8FD7AAF81C1D5874D52CEBD0C
96DA06996634DE71F20FCD1E24DFE442621C7712CD82CAF8D083AF733C5CD565
CA4F6574BB1E01B3ED95D73669194E776DABCE631E4C61A315ABCF7A3AA69EB7
B3407B24BB45C466BE5C1BA03B7B042B4C57D635A55E15665BB08612B1CFFCCB
645652359B7076D5C3C4C9A3430CD703E0BC276A53E829DDB1725DD5989D8836
5E7B7CB9D01F43CEC7905D119D02EEA098A86BA376B10581F0CA160B8537E1E7
436FBE5D662E70A5A16B56402A36E1F506B20DDF35F53643A0F9336E74CBDC11
33B810916A7AE03AB6555FE0A0CB701FAA819DC341467C26C846519BE2E0584B
EBA566A548F1F5EE787ECF2D6E6D8EA17C85078D97EB10B290F200D598C01DB5
74902B83396DEAFC24FFCF39402E993DA7E61C1D5C8ACF1E84500A5C5F211488
4FF032A43817CA2E53620833497D1C922CA15F914C576203DD8A41EE4E5BEA9F
A0EACA669BDCD4F0E2AA3438FAC6FD2CEFBC3EAC0027AE67892C8CD4AA408454
5F5F881B85E359A65F981841EE4F938CF4879B08383EEAF0BADBC51037DDD271
CA85A94157DCC364C9428A78B649AF94B6B56C5B52DCC973E9361460D672AB53
871FBA3D66B957C460A9B32833A806D177075BED8BB84A34A61F84F0C33DB732
62CE40C25D793484A474D6637313B91441010E6BF1D35F56FB3215A143AB621F
C07C3319391C9C029B5DDD3E8E8AE8550601A42A1A15D182926EA41AE5306318
5C7352159E3814C8F185774EDEB86BE084BDFAD3F11DFC964B4C232C05240B19
69CEA6609C9C9B8C394A4E781EDADAA74B406807705743A7238461042F00794C
436E498349A2086F1C6127FBDFC9B14199A3B1F14B1C82179F5137F6825D3391
275C915205F106613AAAA43C1B428B8E6E83C5F19BCD68839750E4F49F2E536C
2D2799BC9FB3375A9AFFC80FDC10ED8071EA6E5C39230434930F349F1448EAA3
47734A459D7F1F67B2CF356B12D46E2DF7096A6263E8DE7BB44F2B278810A476
BE071C01DBAA4438612F71B38425AF9C3AA9EDC1A1C45F5717115973AAEB6FF4
9A13FCE083D3D2A7ECE8FECCFA6183F750C799A8E80923EF49A23F89B994932C
81844CE88B89FFD653011DB6A27B445F83F39366C83113CD862EED7AC35ABD70
AD4774BF9C81B143BD48B8A811EDF248031C5EF4A64AA34F5891EA31022640B0
D690D6005BFEAFCECEDDA1F3DA66DFEBFF3E277645B276E79C0DF2342B76B5C0
C78142B90F315333168698A10F2491FD390A82A30ADE8C4E9ECEBA2EC06F3F0F
4C0765259DF06B65458FF0983652D0E7CD4822E38884193FF76E90821D722E59
AC00249E8597E9F285334F7E32A072FB59BCE34A53CEBE100AA1138A66D82D20
0E0FAF79252A7347225F6F0EDCBDACB2844CD27975A565525184921BBA169218
976FF8B5935027EDF76634021B385D1761CC6A69F94C19056A0B7167D564D4AD
768535EC2DD30B9CED81282F9016DCA0602D46705A9C77B5268E7A6187E9AA24
42043290EBC7271938CD71642F6B316D7A0A7AC7FCCF64AC5BCC7FF59EE48549
C322202815F189AF38C49D8FDFAF1C89710D3A8CF93BBE4E16D4177B3DACDEC6
D886500F28AE10A60AFA2C09BA5D5BBBBFA7D861AA9E9199E7BD065BD7A4D0B8
6A18BF5DCB5A8B0AB4D8371C933E0BD1AB8121F258E2ED8CE0DED0963342019A
C95EC0640EC090E39008AF02D8737891E67C60839668C33A0D9172DF3B1B12AF
2E752EF3A252484F093B58BCF8CD91D526E21F99887ADD68DEFD049E025FDF37
A292E60D03900E6E642A18E93486AE94CB06AF224E966A8F6E1E9905D4982CF6
D2B765E13449177FA800D50A8137B40FE8ECE83B6D78E41C143A1ACF2106B9EC
2EC403B8E2A9BA7384D1C69F9A7798F465C06F2C18620539FAF1A94FEB324B16
F8A6733E4496BF3168664D2DBA5309A154B9B497E7DC0EF8A7E879A61FA73EC9
28A672F3B000433D779006EB67501D994D34B8A71C3EAEC0F91A391B80574FB4
4E85858C669666ACD1366E775F2BDEF21546288DC68202274D4DFA8430E43AA5
8F6099ED8EBA3C7818D866268C0F308674109BE1574068EAAB826C3882B8E6E9
27CB815BAB053BA44CFAA7C2B3700B3B3780C95BE099859EF8AF37B0ABD89A39
B8B42438D5E2FB5510EB663BD4F4259E6596290A1DB91C8A95AEB82FED39A473
4AAA7A8E15FE01BA1DFD4432A7E28A5B1C4242B5B5E3977242EE90247426A73A
CBFEF0515A62DB2364CE1A93AB69041AD6AE85F40FA9B3657DD76C90966097FC
441C7F2F04705FE55B6AC895AC3E1147BB504DA01F9DA22E64B462B8F1C3D651
0A3519BBC5CAA082DFB54CADECEF45A7A8D47FC22C1856B035C835C8A08A4E67
842DDA6AC4D3AF190E84241DF40E9B6467638660F3302931A00761D113BDCBAB
45DD8C3E9DCABC41977A5C7391D8A7012924B24C0EBA662A6C2B2E26917D674E
D0E27D21767657674D609414EE08BFAD9BAEBA80013B09DB2CBDBFE1C9D0D098
0DA8C7E08821F3D9E4E09B375A58ACBB9E6B044F7AB9EB6D0B6CF032A3127370
B84D5618E66C94B0FA514300B8FA63640710D369A37066D594B6DA59541FC7C0
328891BE5F6A085A243FA08BF23E8AB5DAA5DD05BC094543B9CFDB3C581B65EC
E095212C6951438E3844D729ACF46425303E0DC5AE76E353293F8E39EBE667F6
A50049DD7BD01F6292FCEBF7388ABEE618562AC9F0E7CA4B0B8145D8AFDBB28B
6CD7307276B715F04AA6E8784EC3DE659DC61D66CCEB7E526DE18064541E866A
141516B7EDCB56C83FCA0947C4237F4C51BCD33BEFBBC5000D262F4A4332E04E
3CDAE4105BCFA36EFF48EA35036CF27FFC5006CCC9D8437F7E214B87C48E4ABE
10D42EA25ECF3E31C1B2412A4D1634035FA6C7B6B5DE056AC3DB71DE26382A9B
2CECBD58FE7B3BD4D95045FCBBE0E00449643C295A7D2247B9BC6AAAE1DD23DF
6B9D30ECB1BE342F6BCF7B1A9C9B8CA6BDFC7EA1F45B8333797C5DA041DCB123
5D5E99FAF90989A9D3D6AB9E2498BF606F22BD2A435E50C806BF061696E9F306
BF25B2FC0A4EFDC5C30AAE0757B1A05586301AC07E7B68541A03108F95383499
3EBAFEB322FF15193003BCD9F608C2C42EE041CCBFF7EB2CAFAED1EB85F98A51
23B957FA575EFB53F21649EFA530A88DE7329B66AA510113312770945D3D69DE
13BB8A580F4C9CD3FE265646F6E4A71A3C8B343374A117F305E3191948D03668
F5CA4E135CBC6C7576A576DA0CF2E4DC5DA822533C3750EE766974C88578EB77
22F2CCC1CAE0208AB0E155D12E17A15C58FC473335CED248B5BD91047D53FAC0
02F68E91A9B94224C7E9DE1E6532E3BFE0D6F0A9B6F88C0A1A6F0ECDED274A56
6012592AA78C52512F98327F8E4A4271963979A62B5E34FAA10D1B4E83235400
73DFE959CF33FB73752D38511E4DFE87BF0CD087AE1A432799BA861BCB1F397B
5E0E3853154C2DBF592B0A34DA12E05379231BFAF2523A872753CCDCEE726DDA
DCE118775515EF5AF7BF31F66D09C9877150AC6BF343596138E36AC76AF2199C
AD461EA499C5C8BB385AA8902B8D60BB7D396CE160EA185511A471E174D03552
B6522257394F5169385A0B58BDD2C8CC2D10446F4EDAEAAB23E592C7F5AF0329
7DD57EAC81D03361EDF51CFCEC31CB4CE13C213D085A10424DBE8D6FEF72372C
C051A9D1C2117BAEF2EE57874A7345705B70BD772B094505660BBC96D6C127CB
71E6A1D218CE21931C844158BA2018A393416A86F976D3ACD856CD19A515BED3
064BA8187484FD96AAF8EC01EBC403429F54DA01E2EB6615E2C3D6698C165698
4DA00263F9FB6D04779F9E334D4068081DCD6F1C2845F973870CBC0452F6F0FE
8692660DDC536B1A6CFBD3FF85F3A19ABCD1A44D0B881A7F8CE68790E02AC4F0
CFC492A8960F5DC092924B8AACE3E3627B9ED351776A911DBB57D9D3424A07FA
D93F1C02B136F0D3165ACAD0463DFA42D0FC9934B61D2EB3BCFFBC0886A20B66
AC3A89F91767DC7A412707B39C1C2FBC2084473D60EC9588778D953A9E303E5F
C195A7B76B30136BD0F36832E00CD8DE866103877459547E6AD9B24A0A08AA00
186A7C0EFAAA4C85A41C27BDEEA7A48CACB4AC69B3DE5D2554E7251BE2E08567
1644E889CB71E6849219F0DF24E568936163FD3FAFD44CD3CA9EA87E82CCF7DA
3EF54594BCD74EBFF85D77D8B5414924DB2A1ACFFFEB527E7F78230449F7A595
641BDD5B11833E4AE962A37434900064D09D467A76FDA7D6BC309B31FB82B98B
6813E529989F51B10F0445DCD34B0CA75A0AAC8706E18BD37D29A3BCFCE56950
1D25E2B0D92569F49B88B2873C258706DAA88D0478691AB71135ECD7851035CE
5B4AD933DF5B214BB42B6DD39C20CE46CC10CA46392D9310AC486AD94A9B7A7F
52C29F61FF7805D8E62BA2233AACF09C0ED35A7C50E3B33C9637D0A719670B42
2DF1DF792DBDE7AFF3000A002ACE02FFAB67E3CF8D91021366A8A106ABFAB960
C63167197E6F2AB74B2502B9C5E232CB4CF649C3503F0C374CA87018A4950D52
B8AD2F3D71789891DCC6FA33688B8A07A856417C03535C3E4A421B5939463E7D
4552773B8D7A24AB2C778D3D081A6B71F0EC6C70372B72CF35172BB0B73EACFE
68C1D545C7FF123FE5CEF55FF6871A0B67645FBFD305605B527ABF1AA7398D6A
F07A3F58F5224574AB5F54BA9DF319F330C44F612C414D052E3F457674DDC781
6FE0B1B9D76AC28A113EB472EC3A78982E582ABA0DFAAA624A1371FF60479439
BD97691EB2E596A8259F217D019E9F254AAFA23BAD7AB6B4870EA5D2C125B94E
589B8666559F466E3941757E98B199BD156464C0EEEA2A6C37538AE31B6AA25A
C885C2330D0238E6CE245099A7E827C301EA631F6E50BD6814E7C6BF4438FD85
1F400B499E55A6749192A6F0F2DBD54846573CFB43CFEB5CD2B8B11EF62CDA62
E8BF15A2B75F595BB8A199FC5A8153006042E52532B2ACB83E6CE7C881CE7116
00F5E7809F20DC91F4F64FD697DF34DF0A02223BB64A0EA942EE4C01F48BB013
522D7BF9EB2541F38ED4E2751ECCD9BAD04404D3BF5724E909FF5EEB4E8ACE6F
289F8F7EF560AD4EB8C79F3FF3AC9EAB595C5B39993BECD95098FCD19403C86C
31B85C9121A3095D286C3B466CA310BEC3737E334012E62E587DA7445E4F830E
08A32E9AECC94873BE5070C923E8CC9BB23B6885F691210505D7F0D85E9E4BF5
BBD83ABAF2052611AD59F472620786175C6BC1E7732AC31733F01CC89ABDD98B
2EEBF00F0BA211820BA2C66D02310B013E74C0A960C0C297007604AB42B5E557
9BED33B7C4A3A0EB26BEC9C17EABED3699AC7411A90D99E5178DB32E7385F50C
F4641D3A1ABBFC58FA48F6F257E90EB86BCB9ECC32FD553C32A51D5E33F0DEC0
39DC701E8FE4FEE0952A7A2C21BD5F361C4686FAAB794EBEDF63150F265D43DF
FEF0892B36DF9185832431A515DEEE3C4C080465789380E19128D2E74CC54337
695DA05D3BE62C98DFB04FF8FA0E6E706F84EB31375E7E07AA69625895593232
F360DE31BC26F05FD9DFDF05F1A162758CC19E81DAB955BB114FDF5F688DE32C
3BE03CA96739519E7A5869F375D09670EF177F7D1B1C0B2544E0913D45547312
2E7A93DC7267453A068D94CF7ACB4B26467D075A133B1D54F52CAEB5E200761F
6204AAF30C18E4F2361AA0339BE5EF972F4B57FE0D8CE7314477D1A35C503FD8
ACB1E2E0F72D7C3BC5ABEEDC11B734E3C38FC1840E007D071BED5C305FA94DD7
7E8DDAA7E09E9C87BA12BD6EF10D929AC40652D0836E0A8DE4BE7615C82FC300
0FED17EA056D12D5DDCAC48EBAFD76D4177A055524876CCE44763144EE80F36B
650B643B2423BF5A54051ED5A91A9ABEDFB5E9C5012633CC89B945CA8F99CACB
30573C5E487A84BE0ADB2843FDD71C4F0352AF818081F3DC484333FC7A72DE25
EC657F47DE02CBA939ECD8418F4FB70D12D79B682A12F5CF071F9096DEE84726
6236580866DF5BA2A1E3F9A2F51B416A0B02372F2C81E804EAC945A0DAAD3037
4EE7B3B056EE64D6D27F37501F4F8E7782F0D9912DAD25E883AB72BA70A0CFC9
4ACBEFB9A985A90BD05BF008B2625F9556985A8DD5E00DC1CCF79A359B81AA3F
21359D297FD53CF787D946FA3C70396E5BB388754AE7BC49AFDE03D1D1274C0F
3241574605591533DC35B0FD0EB25D48CE4F478E134BB12EAECD1B8E314D8750
7F1FE502A7D952D8E60871807C53E6376B091E16ABCE86C6EDC251D75C712EC8
933F327DAD6D778320D08EEAC55B4E7C010291DDD57653DE0EDC53D870129F8D
C479A058C3B57D378F52F29CB94B57E17B063DED4682B97E5C7DA98CCE8B904C
24C4E32C3021EF5291662749FDFF8F34987A370B50363947BE61EF14D92C2A07
268A8233A91D8856B291A7FF97F1B6024AF0007224B90689B5A2A9B53230B0D0
7976CBEBC189FDCEB0F92971360F90FD85ED87062B85432DA0B395523EFEB6E1
18FD1D4097AB467656428BA38A2DED6DC273D4A01C9DC5987C5C73AFCBA2DF20
290A1A7982F2D9BA7CB9D1B9D4A51BAF59C6667EB5AE7B86E2733F876173A10E
1BB40C2FE0ACB1C29D0044DEE1E3A2F9C122EF4BA46D5A1E443DBB69769E251E
705A4E35AB90126937F0503CD6A5A4A100BDA398EE06E7044D5347797D0A2D0E
0AA2BCA5529C72A8E2493D898F83F58D1B7E72E7638C8FA0C730A82EF03F89B0
17C09872153D7F76235EAFD1ECF8FD1F38B9F30FDEDCA9B53260CCC50CDD5ECE
7274763CD3FF4EAFA35BAF9F935651D56ED2466CF751795D7BC13D87D14A7C11
5BBACBC20A2332C56824BB6E7C6101AF5B417A0AE1A912215A7EF5719CC8F337
9BA4355678E4A017188A7DDAD6553929CC3D41926E12CA25DC1D0D4C3FF37F25
21E7EDE46DAD5C2610C7EA038CF4B904F504642CFD46A583EE51370264957849
5B941BD639BCBA715D5588FC544430740A4DD90C52DA56A741B396AAA93C028A
706FF9F0571E73928F9BEA2502BFA00FEC77469A12D03CEB3B9BEC9544545AAE
F7374AE1D15FB27D723FDFF88ED15956FED05B5F2CE450AEB62F9ED6E24ADD3F
8A0FE37D3A3662EECEF626D408BDAA3699057F9F6D8A8FD081322DEB995A3F3A
CADBA8EE9121877C14DF02D25CF43082AB0165E5EAC2C43E861DD1E9C187418D
16CA42529EAB906CAE56C93D1DB50D439E9D214EF740FEBA0318446968E4CFF8
B9B250DDD47CA998421C64DEFE53DE757097F9B9BEA9DECFBD15C056C359AEFA
51704455B72B4BB606D6AB14A095F6D9E0822C5F3B371BF3603FD4672BAFAB6B
810C22FCDC5659BCB61EA744F3D7734F49C949BBD7A12B2D62A29A26940D204F
94345FFB6121289BD5D224B67E9D05C8BBD9272A56D0ACBFD7F9FC8D64D51F2F
8B84C0C7F3CF111A7DC0B91D4BB0C52AFE8F6A4DCAEBA1F1DCB1F6682D0A249F
79AA50C4B23412A4C11ED768ED5DFBBCC0902B036F056015C1202E950ED2A092
50644753ACC5EB54A166A09EFF08414EE09118792038B0FBB298010280E05D07
ACEA1E06400263A1D29A56C7D237248A1FDEFEDAA739482B458260840594A828
F21495214D9F1DC97A323F427B453E03306ECB291D34CE42EE5A34F72388AAD0
29B0BCC44AE18C6B75B6011FCE1DC52FDB3075FA2F725183193DDCA689FC6EB8
3C8CF544311B9CAC257026083440B739493D4C936654AF92FB3160CDBE68ED5C
4A529CE983FDC436929075DF11778D9DEB42870853E3AC56F3AA9371C4936FCC
046D04146E7C401116CFBE26F2871B3CD1B8ABAE68E4DF92802CA4394B8E28E7
0E9C8B6A5979DA860DC117D6A8454EA11DF4A38560492BD21F5925847B20198A
513B3180AC4E57CC56698B0C45974BC233968191E7B7F348499A6B6CFAF17E17
57B248C9DA6B47B0682614570AA9B96069B15AEC28F3B0C0AD0876393D9248E2
3F0F6DABD35EB11730BAB8392D8C5A752A1FEB041810C6DD545F76064A187643
0084E04484BC9804319F1E3B1A7987395978F11AC308B638A4C935C8DBC00AE3
2FB3C80B01570AB63AA765C18E0DA3E7F6BF7B41919E8F9B03459BCDC70B8C1E
C506AA75FB1238EF5BFCFDAED96DCD6F530DB60F08C7D6A1ED696AF20EB10948
2D01484C4E20C57333B7EC064F1010CC1DEF6084F47FCD45A41B423664A7862A
1246BF15DD6C6CA349BC0691AAAFF54581052B6CF167A99967E4CF5742A597BF
84FD99940C17B7DBA0D64874814683DA17825376C97C0810622D1797A899AFC9
0120FD7ED73DB24DB33C8CF544311B9CAC257026083440B73CEFE759B3D3D31D
36F1570E458714F0F7C17C979A7D84ED67A459476943E00696C85178EAE32CCC
DBD4F1E6D49CA2292983911CEEE7863DC83616E4604CCB18704C1D89D3CD6DE3
12E4D4B371E6B3792346F010F44CF691BCD00514333A4FD2950BC177A79066B0
6B11F1E34583E8E102E8622B3B97CF473C8527373B7E5F8281A2CC37EAF5F563
4F650280BFD37113EB593027705BADFB29C79765A56D9D698D21A020F6254C62
7A10207E7777BBED146172A1F664442DA3626B825D5258BB0AD778CA3A3003AC
F66F2F7322DE6173F6204EC9BDF606FB71F8026DC4A1CEF76DA8A4CC4A4207A8
DE2FF1F9AAEB5447906C838B1651565057E85B570F3ABEC6A7E1365A92C49C55
75C3DF386E7DB945015C6C001519C0E8FEA23B9A35EBF08DEE4028BDFDD03BDF
CCE0BA5B672E418A80DEA7AE049DCF3619BAF0BE9A72DD91074A77BF96FDDEE4
7E264455D81D6734B5127F6A9308254D3EC0D0D1ED1B1515DB19A15019ACD1A0
865B07619C3FA06F5FE55F72778D115FE21A3537B9FCB732C3E3CDB7D4ECFD8F
A93E832942B5CF7A605342588A8E7F0E87474FD6582B7632B53BA02A9280C8E9
45C6AA20F2FFF902ABCB6F958610F19B5063FB5F88FD0A0536A20330F12ED187
0B9601B8153D8254420CFFD88F988ACC53C837A74DAC843D25689D2D1DFE66D9
AE74B03BA3BFFCB693B5C8116F0CFFC06942996F5D8233BE5019F0ED109199D8
37B42363553F7B7B08B84ED377D2F8C14BB17918DB0F7D485ED649018DFE44A8
49C21233BD30A3A4370C93C63EB0E2AA4E4FCF2EB9F8D738A2D8B3303056D0F1
420367CF6DEC91BD658CC67E3658327AA3AD6ECA63883B97B007CA521B36C05B
A4FD4EBECF0947BCAEE4657BFE82CFD9BA566F2F323516B1001B79EE54EDD747
FC122C5E94C67F3D8106AF28E05FDFA91DFB89AEB7B24BFDD7FFBCB6DEC7400A
A94113F4F1A1971052097F155AFEEEAAE44F0D74D70B8AA2286165586BCD4A4B
9019335ACF615DCF3BA00A7C00C214322E2F88C60C3F6C5A30B02340004F6A76
5B3C544B84ABC7E60E665C17EFB804AAD5404BE0C4DEA87B0125D0A7B7428931
FCF79B49823C3CD31ABB7FD53F25F60443F9FF7D96F3B82EE4F1EF2B7888236A
CAE4330350DB47AAFAD5021D461AC5E5938752D1A4B4007F4584A94FF1C26EA4
51E58451647A17174E4C2466F72B6AD275D5D9CA32FBF29B65AF448293AD48C6
D662C6D0D15BC839464E7FB082BDCB9207CCBCEB17311689100AC1AA889ED036
C8FDD74F2AD410C451157B872FDD09B47E04B75592770A37396134F1B03CE38C
AA73256D92615267A089293C7934F03A139B40C822654201B8FB64288B976C74
B5F9310F969553F7E8264811A4D2F39E693F2C8F2DEECFFB348D9E96D48421EF
1702131D7E8DECE17FD79EB78110EC2FBFB50094DA5BF8B6D580C236BBD38F6D
2096D6FB6C41CEAB6009AFABF1BCB3EAE1A400F68DC7B6D5E1B9BEE18AD87352
53AEE892A891C24527E64678BCCC5480B6B9CFCEE795B5F061217F83B5BB5314
7D0BBF050F71586D84FE4A63D76C1FE317981C6DF02477A2F9944C0FF657CB47
AAB6B812FBD45ADABBA09DA0F5DDFDCBB7B4CD659B98B3DED6FEDA9818AD2025
E808E1B68A93B2857FF8332A1AB599E5022AF764311955F509ADC9192FA85165
456F741FE58A32D5550821BFCF0B5DE3323631DC930A0ABF8B1DE8EA64F90E60
3CA4BFCE6A68348EE36223F0424598403F3739A9BDB3EDF8C20B605EF502AA89
A676B11DC87D8802768D2E730D0D07BE96EB5A7C191820874CBD3DA863BC103A
773230EB36E285DF1E44F57D95B310343EC03E7A01901603E5F511883E002944
3A791F754C18D7D8D97600093A8BEEAEC0AACF6A959226A82938AB008846BA27
B67A3FF1F421861CC852ED984CDDC4608C176843AAFA0113DBBB30B61DFE0D26
6B95338DCC1AB13363FF9F5EA96DB5DD66151EFEF0A17BCBE047E40CF31D3E05
E3FC13E530F958DF5521286D7992773B7CB83B36F4D47AF64435C5BE27D75292
6D84D9D8CCCAC6CABB235E9E0EBE25A6A51A88C6ABF5EA1D7AD30B2D328E5450
F4C31C898A46ACB52F500CF825823091327E9F70E34A23B631D756BFB3286AE0
58566F9C4D2F0C012909B044096BE699A49A2379525C4A846B925CB4AC891149
E3A9662D357943AC47DB574A52C8E67B52E986905212C65E1690AB1F44FEC2E2
26140F67193E90E2F2472631801B7176D13C8842A2639EDCA865B1D3B6C015C6
E8FCEDAD438FADD4A0BA29F67732D91BBB1B5A296CC773B5668F085E05C2E024
36F2F8A991D11A07BE8516BC0BCB6CB4116C4CDF45F4167C7603DABE6AEF910B
80300F631E70925AF296744E9451C969AEEE5EE2B1FA759D74857E3156677716
F470F0A174BC4AC7C50349CF53BEA701E0CB015403F6380EFB8197F908D286A2
D4397B40009352005EBA60160E22F4ABA2ABAA15B966AFD6747175238BACDFC0
154765B964645EBBA7376EC765B76EF6C23A35426521E6BFB9532D4CA7E0244B
BF8192B4C177A82AE1B5837D235AF3F6F9FDBFCD71798906A270D26D0DCCE045
380349550BDA23A95B5C471ABB80CF02387A0149078620D4A6FB94354FB31D8E
5D6606483C5E814D446501AF0ACB37868BF7B57ECED78C2665D3E3F5B87D1DF1
0E0BACF9FD7A949B4EC48D1926A8FA555DB1641968D7A5E4D28B9A845A432897
A866731FF8A47F6222B78559A0AA4B77F80C89F43F1D3AFF3A721BC2B507580F
44C6AC1F2C8788EFF5AC377AF350707A3D8A24CDC42F37101E485E014A4BD379
986E20A2AACF05DFF0A8898D94599F72D3190809CD394FF5F755A578BED9DF5E
347FF58B9DCD27B752FE8EE7FC08D5F5211B9F161478C605FE444DEA20119003
63F035281EF78C22CA93BB483D8E8D3B87C48D97C62351CA5A503EAD731C5AB3
3D5456570DA7F4262193679F7FBADCB097462D4BD5BB86FC0087231E1628ADD5
52A7402751B088C92D7FA18EA4093A7312A58AF91C086E0840D15B96376D15B6
9FEC70B2658D9172844FA1A477BC83A809FA97A533C7106E3AD5850A57E934CD
5D015A312C5C518ED1236E1FFB0CC0AF79BE6308DCB696D384F4D06123846A02
9105DE7CB8B36A0135FF4DC30137BF2F9A98FDD3081109FC9FF7A9289F22011F
2CD4BC46350E9FDF29F2ABDD225957D6134AC16600C030DC5B7F52FA0C4E541A
C12B48F27621958DFA24C3979B3DC37E39940C5D30FE3F65F0EB43AAF649D0AB
636E58E0BD55D34DDDD5BAFC719B813CABCC14A7B81E1FF7B656640E1834E77B
DF1BB6527DED541C4FC0A4B546D842134ADCF56B24B45AD0D17FD4EBC16B9E7C
35C24A4466F5127077000958CA0AA79EB253D7AFDB66A20C0516EB2003E4929A
5D8732E167683D7F38FE4B938F1CE73505F45096FEBF1313664DC6D544705575
0BE0B5BCFAE984A134AD3BA45643AF0DD75D64BB9FCF2A0A1ED7BD9D1AE8739E
DA08AB61F8A6EFA0CFC678DCE6B8C2AEDD0BC94A43EEA7B652AC8C8B6B18B9DA
CEBA712E00B739163F96C1E53C995DD26243230D91A402C7642467563CDAF91E
60771861F51300DE7098C1204BC8B8EEC856D9A501FCCEF45273D9387B0FE5BF
FA154E9F801DEC152856AFB3383EA46CE05C572AEB00AD08E300AE14159F9CC8
A7896A0183B74B6B0B393CCC1EB0D94AEF148BE9527B44362B7096F1296B5416
B67F1E3831F2200AF107EC792F0CA5B9FEA5C02636F891F8687FC167197EFCEA
BACA28B307615BDDFE59AA3B2518A0013C4C01BBEE049FA3D11030E6188120F3
7F55B43B03FB25F1E1B80807CDAC9469B938904AD84268101BB3AA5369680EA7
92C538D5875EC83F9E5AF64283C2391D1596CD44174E12D4D36FCC4EA86EE007
EDBA7CC6A34DA98B165A771891C73028C7016E40D9E96B174A3DE252D94ED4E6
3EAF24DCE7E05A6B1D9C4D2B0206674E794D95E8C115EF0D181F4CDC011170A8
9CF93FC1D4AFD2E011B2F64EB6A9B10E3919538773ED47D4693A822AD8F4E47F
D301B9EC5F1A80588E588EDA923706DDFC6EA8A4C70AA9437FF859F5DE05D992
340D6A9E330BEA0EFE21EAFFC33AC30FF45C143F1B500B15BE6BBE52DFBBB288
F35850752A419546B81429D400DDCC66DF0A1FF5A131C183824D1E6CC58E9043
CEF4F42BA4BD9956783584EACD2D68C107ECAD75D61FC04DCF3DFAC7DAEFCEBD
DDEEB15F3AEF8AFBE38A52EE41E5338264F97A5C007281E81B99110BAE4E4332
AA0EBA1BDE2E4A263BA53E1876CC9FCA94267EDE88F92D8316827035BDE9A76B
2CB8B00A92F44257A6D51F519240EFF3D45F61E36E0D0BA1B0E52F7A9996A774
E7577C49CE0923B4595E8D51344FF6316261116C24B9B18FB6617A3E8DC31B24
DFCFC6266CFDF76F93F9B159A1B06CCC220E3322FA43B974D98C9CAA1E6D5B1E
396BC00B0D9401511EC0D2154E40C331175F7F1EFF6D360466559162D196BAF3
25A21CDE288F51A84B1C616A2F0F4FDABAE9A3D40E69A0290D132A61CD2E7596
EA6F6D22CAFE4186844B832424C60CA18EE757DD2939B6077B680FA79E94BBA8
52FFFACA95A8D1D976528D38C796932A2A33BE61AD5B48A3607AC2A1D87C75CA
A9F93F1976C23BB7229540E9CAC248978F1465D0BC0A2CA69A576508D5BB5E60
3A4ED475FCE147E4319A72ABBFD6B24B3608A8A1862E26B995CD74BAF57E35C5
1FDEFFDF0A2D1508173BC3377ABBC51A7885F35C57CE750FEE191C0B7484CB53
6FE9E06540FD59FD75D6DFADCFAC6B6037AF80D0122709DBF26FB506054FEA0D
0460FD4AA81FF7905DB109282BA15DFAE010F97AD43414F488DAC31DE7C59C79
D5339EF7830BC3935AB85A9E4F1DD40CD9649B3388125D1977893EFC3EDFA1C2
639CEB1901DC79AE63F858CD0C64E4C7ED84275950A5E22A4F7C414A4D2E50E1
3A032DBBD164347C2A4DAB043B39CE7E6297DCA6B4C73ED8E4B3DD0E2E794B85
F9B784A2CF9C8273FD90890E2CB44444D8838C6FAB01C321FBFF33DEBECFF78C
5A1495E50E952645CDD253013CB091DEDEF3EE2E6204D1658CB84CB47F5F9FC4
8081B7D93231CEBC0C9B8EDF633BEEA2FC38F091E757076F26A644C95ED42392
7291ADCF03AE70BC91562DDDE77F45BC932BC898FDD953E63D2DCBFF3898DCE1
D8D7B0477AA22C776DC7CDB129124D91B488F47D8415EEBB23CA91B17E8F6E18
11E9752ED974F9FD64C8F8166384EBD6C902DF2D7C11DEF77D9B37661589EA64
1F31C65A462669108EFF2D76DA4023634896E23A995B68A5AF86E8ABE02340D8
E84F81FA79D149F52CE0FF9D114D51BB6D5034BA6D9C4DD040806C87FB6B3464
2D4094C8F46AE92423C6B42EAB50F041EE818DE15EE3CA253F2D7233BE406FF7
63BC2FA74BB2BA742E3EA86382931BE719D25D75C3DAE92B9CD114445DA58058
1F6F6777F9884F862AF07B92D14FF6C40F8B99C748286E32FCB216321E393EB7
529FBC0C4F0F3F2BA6A4C7DCD5DEA874D52C1791BC440677FBA2CC9D25A436CD
1CC576108F8EAC7B3363073482E2401DE4EBFAF792107E1C5CE795C2796108F0
1EB6564BE1ADF2166ACF0DABE6CCADBDDAFF4FC39869034F0ADC324D7E3E6325
00A4326B33CAFC89DB6799ECC0791931EC7A3A5B0123DF64776A6CEC6CB11454
155D03BC56D8BA16938B17B29FF9BEF255164A0445BFBFC63DAE2F55A832141B
8A51AD00B6EDBD775E4C955AD4B2BA925E9578870A357CA858DAD76625BF4479
C965BD1A93730508DAEA00C4917C60CF025354B31484F0C882B4F549A214B820
C4B25355A9ADDE3AE7A63A193B7931540EA6D47581B0E49AC7FE444BD67B489B
09384809DE88FA48A09F86AE1E1E6FBAD5EAF972AF09CEFE0E6BCA5D0B5BAC37
BA925A8B1348CDA420F3E7F8D1D91284726B7CD1645943E6CAF29F5E1D4FD8CF
D824A3567956D7853F11E4095D01E6D687AF1A87D48B6A26085E335A32647766
0F187A0C615D1288A25A4518115FD71B4513443F99B528F342C8C8D6BC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /parenleftbig put
dup 1 /parenrightbig put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2F4EA9934F170D87D1F0D90CE8F3EAE863FB027
FB5969E37145C8D881AAA4E0464F52F3EDDF47DE80E64E5F88C9498795601ED3
A72231E130CB29BEDBDE0DAE65E46E4AEA15E7A48F95C55B655D443C40C10B33
2630FE694497F876357A6ED53BDB28C7B4B441605A8FFA1ADA3FBE5C8950250A
DADDF662B8F2210602C0B2845635BFC1CA23D8FE15A12412B9D09696EDBE2F07
1A410D6A0DC13DFCC6FC441441AB910511D097813E27DA1098DFAC55A5F790D3
5E5527E3E7736757FA292D88702DE3D3F8F0B4E484799DC0AAD5A948AB04830E
F0CBFEC295F4C6A3B3475BC88CD91605651411C3638233CDADE8B75D65E924CA
F7A57C2E8F1B2819371C4FB3BF8C39D1E6895EB4BD376BD3B90DD9100008E0FD
DBEBC2F7BAF92FBECE56AC1A3718BEB55FD3FFA6A2BDE2445F4AD6916A80EC62
CB8528E1C72444BEB4D768A67A23CDA60AC0C1D8106D546A22771D28F98F9150
64F8FBCC80797AB3AE63F0A6E44D7F5E1FE556D43A8FC71B095E0C5A0F907A1D
610C8C0C2FC3DA2C4157D60322BD8EEA4ECBA187676658C3C5AF3E56C43099E4
600A10F4F769208FBD020C35F95C0A6C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 44 /arrowdblboth put
dup 50 /element put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
A853F0B32C3E5AB84D5618B20A2368E6CCF24E6635AC36F5912FDE664856D62E
28396E049FB828C803F08478AD134076FC54DCBD62FD91C88AD7CE0DFB8B4EE3
402B214CA01AF48514A8B3821A16F8A4ED22E558AAD15F1A9AA7B142AD376564
5F34AECC218C38DE3195C8143D31D6B6620F517F3965B051D1F9F4DB0B265FDD
57193B8ED9717F68B36AF43C46C1963AEEA7535856BAA145117D733E01C83BBC
5183F91B726DA65D452B1B4A1E4871FB3E53E47551F8E3D9207A4AF028D773B9
376DD40C79DD4383F8968D1F0AA16D5332DD65C1652E3A10C5ACF0D945089384
649A8CDEACCF1A67186B0FE49514F27C39B80DDE6A4CC1C22FFF3998BEBC5161
F9A8F8C7F4070C4CE552EBED4BC25F6BF87A15EFDCB0829463F74AEBF9B87AFC
D67948A655F8F606FA19D8CB5D63E465E5BA96FB1DE05F750BF2B42D8E058B8B
948EED81B0C0D58C8EAAD60F47A59FCB8BB87EB6D356AE4741AE73BB7C173A46
B76CE569C65507CD0D1A78AA64AA9F2D9C5CBC082E817ADA813D0EBF0AA1A920
5085EB002CECD33F415315EBBDBB29BA0219F1203298C834D75ECDAFFE8AC72A
89F4485BBCAE9944B6938C7439EEBF710782775594D22A36AF787DEC71D3EE00
BBCD3CFC8E6A5833E9DF81366E1672ADC4FB8A56A20AF1049EE0DDD3DF377DE9
897184DB71DA3BFC21F585E03C1F9B1CFD55687454C90887350DB49DB53A175E
88EACF9ADD79DE246399BAD5B4BA1086D1549B75E6D4BD9CD950488681217864
DDFF0E86803B48D464640417F60FA93E2EE4553FA4436D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 55 /seven put
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E70A7911CEF46D4A4074EBEC25F55A638011A4E0F2D07A01A042436C62962A50
973F9AB79BDDF1747CA2F970953AD5128331F2715D093DF035D882BFFD0E0C65
4D9E97727C8B4CC50778EDDB5E0A210C9E0A9B95B37EDB25A80BF2A045583389
847B65D114CAFF0FCF67585A6BCBE22DA41D479902960F7C0D013CCE81F60F3D
DF36E91F8276940F08464405DF7352069A414D615BA09E156C449C172832EA2C
E38EA97B9A576B444E00C0B19C9E751336898EFCD4847F7B5095BACD95228E1F
6EDD85621B9643624E6CE80610BFB320B3D0914BE2359C910FCEF969AFD599B7
8545A1AA4E33EF3F14EDECCFD82F9975DCD18BC1B687408F072FA39164340543
5A09C1257CF81A066CBCBA4B3FCF3BC8D6A3496230AAF1232518D07135C7823C
AC45513B2A9911B39603B415168A1FFBED834B271794C994A3F9821E4E9B9023
B08C7CE8D31B5FCFBBFBB71AE71A47B9E18E48F5BDA5D89F2EE08A2784F150B9
180ECCCC77586E39586DB7CB534D1806D9A3A0D376856B2036634A72710FC8DA
959A66289DBD2D073A400E7CA0B870EE6EBF02A0707CEABD8D44A32F85209065
B61A9E7C56EEFE751F19938EF2050F231708623163ED2DB636BA33208269330C
24A4E0B645E707523349225E6B8EB758ECEDE8173B87B4AE6A33F17030AAA7B0
A2CEB87A0360124FD1504C60DE14C8EAAAC52FF900289981316BC60E07B9A6F3
40CECD891D8706212848304E170D27F17330A29CFEA10E80FAA7A0837A0DD1EA
D10B0A7A3F70DB740709CF3330E44DD04F6367E04C3CBB3400BA3C1943B874CF
B4B611D58AD532395FD31FDC361BBAA07179A3D6215C9819796ACC66B0571229
E5D0EE470B9811A0F3B2A4D09B78866901235C66B0B7591265D226C571F25415
55DF310B9923F6206B6845D9D4835F7F36499A9C4BC39F35AC5F1F4360654A09
D9049D73DB6FFE7FB882642CB8D369C6F870BCA1E1753FF36E4D58E1E10A9648
D098A3FEDACD1A2C502230FCD961D0CCA425E6DED4A66CDAA69C13C313F273B8
54D4B38FD38C1237142EC3575FA9E198685DBE5378D15F1D89ED4C66EF889DC6
EF388E0ACA1B21DB7318203328C54706B5BD1E9FF4544F287B155E3B4244ED84
ED72104A59134C57CDDCEF9DFBDB737C2D3E72206E5B77808E9443097AC7705C
31BACE6BDDFF6716340247CCBE79316A3D9FE9377655F019EEE51947595BFE2F
DF9B7CBE42D72C75D0A88EC6D5B7249B4C7F45D09D9A99524B0752BAA11AD19F
8D34812070D14D6F1810758514E3F88F37AFD08FE448AB19F9783A1051B3AFAA
ED22363526D2C9091CE45528CC0A5F85FB7D754FC045CD01226FC17E49E68DA2
419148A456405A6BDE74F2A03FA6C93BC162B3137F46030365FDE7F42C01C583
149DBDD9149E5CC36C02AF06E94950EB113E23315F56F81640852FFC7E83A1B3
90EC771BC4F3A27898696CC62771FBD7CC605971A36A884BDE21CB77DC7B78F7
803F94C1356C66F73609CB676EFA4FD8F3FA9A7607637B5D2905840D01F61B30
59A4378D42B184DE94CC31609395B049C2708A6A468D17CEF392A92C7F74ED4B
791872A0E0C744049DF1F90D0C16D127A28A8D0328551BF197FCC2BC38FB315B
97E97A0C07518FC5E468A406F01418C722F32B82C4DC3C29D1CA5F9D67294091
16043DFFD14EFA85FC190E9A88B671AE88F73F6B64615F0A093AA0970D76374C
C11E6E64F1DC38BFA237B13343983977965E366DB13F4CD2C89CF51528BF57D8
4C1E5BE8E5557546AF88595F581BD39353653CEA611B1E7D6360CB493B47957A
C0A8513687E183C04F6AC8961F5DA9A4753F13C07406DFB0920EE608B8863EAF
260E5C6EC709D80F9DC275D3EBE0FDEBCD5DF6E95B34CD10484839957E243086
9E652C002DA1C077109674385118652EB37C582C836081169CB404C236EBD6F5
C27BE86BF1CB67869175432CBA8A0BA854B7A411D92B9564A559167CD59E2586
38D7B1A6945478B4FFE56F7438F879BC30554AF2546DA68BFBAC24D9C5BA2A99
2B0DAD7D1C56CBFA5E1695422E53158B6FF375FFD29028D21F6253416687918F
1B0B4AE53A5F410CC536B90B5A85194416638C3BB457090A7859CD644775920D
1318DEF46D3326BC34F9E5E4C47B9DC98425BD26A83D1FF48B5A9C1D4AB98758
F4A59F91944B7429F34325FBCE7BE4880BCDC6DDB5A464D59DD94F239D3CC12C
E6D7AB8C097385104A29782B7C5D94DBBF0F6D5DA7BB620652B09F3586D6B46D
81FD2EBA7AB529206F1FCA8BA7225F24DF7BE83A4AAE2A7DAA847CEAAD3690C5
D7813D28FAD0A0F2651EDF0B3DD1F3E49CF61796E8D2421F349799BB0FE413DB
035769350EB33CAC38E68567CE416D0F4B6C8ED882424E5668AD51E1B86F7492
AADDD51E2DF7630BE0727F26213438E400FC6F22F02B50310E17E41AD0552FD6
4B348ED9C030ECF2D9018DD2DD69EAC236FFEF650117C78717329DA45697AEC0
1967DC37F1FF664B60FF9C75E3FB52882097DF6B57EFD494799B4D20D692BC37
C7EA384A0B6BEF876CC50FA0C3717E3DCBD30EBA773FEF8FF59CBE37E6258DEE
54C6FD795DF27204FDD2CEDEE7056500F674453EBDDB568A9621015C6ACE7BF4
C41331EC91193F4E6D70F7B69529E96C93983A94B476B341E9641A36AF54EE59
800B7CF3D55DEF9EDBB9EA98D8A1F3DFD80694A84E29C910809D377B5A809157
90B7ADE4B9B205201D3D4B66D48BB6E186FC478719C447E407208DDBDAB817AE
2FD58922C2D185B80B4745AE748A7867D86E0CC1E6CC50CF716B98095428DC29
B5452ED435EA3336DFDC9BB86FF7CB6840806BFC208B1D9061CB9F43011F724D
4E9E2D7C5CF6D22EEF4062E3DA368C64D6A2339F7C8A8B1F1045E4E5A93585E9
24EB308DDFA4462C16792B5FE6B10BCF5649242C4102B81A95312EB84AEDEA38
B7D091C15A017F364C4030648BC35FA307C19247D59E5A3DC494580F1ED96A2A
800D74EDE3D14499702243281ACF2E6DFE69C4D2EBA0D62480593BA0C8C1FE80
A7C5B77C1111228A19DCBCF5D897C9E2824FC6503888F11D9CCA75BC4FF9631E
2C7A1BBAB52C9B18E831983B15E2625852AAA76DF57406561649E563B2E05E98
1BA09BBAE8B8A8624FBBDE008F447DDCCF19B67C720EA195914E19AA24AD1498
B7555E7E111AF317293883945475DD4F87056663BBB1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA853
B843CABA76BDE9582090299F423519EE3AF8F83AE7F7828B314B6E36E9127419
F274E9FBF5622C5E48D7E95664D6C0C1006661038CF2C93BEF1DE34A163A2C86
693A13F4D0F052D2E183F36401F0C29862BC1B36A086524F76C7EE2C6D436A23
7009F146F1756DCADD3F70C51FDCE610E30C0F4AC538A2703423A07976ACA74C
25F4CFD6A92969E206375FB0C672E45948B0E832F2BE688EC22FEEB3E06BBC3A
272F73081A30830AE4214F2F029918FCA40BAEBED6299EDBECA01E08F27E5627
F53BC56F4AE7CE2D6273B27323AB829E2D51672A4990E3AEE84331583A99DA4E
63610AF8F10C50FE6196E3F4C1E4FC9BA6BE0ABDC81A0A7BF6A5792A97BD0A7E
7BBD31C3FDC01D734550843C8D84C6CC0B492CD1A6CCD57428F03A863E959C77
457D401028FD00FFA9BC422FD09D8B8A70446A61CB256A2FA0B59A2646D9C5FE
961894DB8B315C52008B4416AC35439E010BF90E43A05FCB2FBE8E62385E220E
588B7FE5509F1BB71150E159D01D24EE28008D4213227FE9BCAA34364B1039F6
BC142AAB19C8E9B15F0113781DF9C9B3BC145955552A901AEBA588D39D7E87F1
CAF27D315E168807021B0CD1B2CE13B611A7B5FC28DEB4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSAM10
%!PS-AdobeFont-1.0: MSAM10 003.002
%%Title: MSAM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSAM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSAM10 known{/MSAM10 findfont dup/UniqueID known{dup
/UniqueID get 5031981 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSAM10 def
/FontBBox {8 -463 1331 1003 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSAM10.) readonly def
/FullName (MSAM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 54 /lessorequalslant put
dup 62 /greaterorequalslant put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE2340939CE40EE9186A0DCC3D3
D661293EC5BB40766B73935EB54125526067D631E1E3D1D6569AB3546CB257C3
4C12CA4AE98C3F99898F1448AC0B416B8E5C3EEF3D74B5FD6A1BE3C23B160E78
79A9E0AC4FC82364F946003C1B2E0EF3CEA944727E7502B65BA1331D36C159E2
1D107580F28A32E04CB876822CEF478BF4464CE4F7AE824FC786E099A1BE2A3C
7D2BFE2A748AB092AEBC2021DBFD5C40E912BC5856F3EF8615147350E75D2BF9
E428D7948E2128053FDB1F90CA9C7D6581E25A6645879F50577FE7F0B32B873F
13F97C524E19F1CFE3883C0DE1DF80FB61111978B0C2D028A99A712D3DC27D8F
C83C4EC335F0DB9912DD2AF009FAA56C5BD5855BA92851629EF6C47E6AC303A6
1A231558746ED8A78C76E476ED71246A2E15C51F465AB21A22ACACB03014B06F
201876D3C6F49E2D38D8C4FE8011F7BB148FC3227E0BFA51C0F9AAD64F0C6095
77B3D875476B666F9FB9A46763C49272FC504CC0E817A1533409D293D6D62CC8
DFDA666BC9DC70C4510BFB0DD2BC94B33D457EACFD754761B696163DB4C547B5
FF8994977A7C9910AF486487CE0320FA1E705BAF4B14FB937229D80F58D01E6E
9D9716EA3EDA84840B5D6BDE216A25814ABC4DE4C6818266C33CD4C3DA4F23BF
DAE6ABDC6D64E7EC7DE918DDB0B05D8413D32D99D15FE112C1D393D21806E0C9
7CE0F0977AA36617B8DD50937C5B0B5698947B0A71A167072FE1B3AD6F274D97
484926DF52CE7D9D2A4928A188E1F867C298E6DB475C0CBE09F0523D8BC6FE24
E1CED78178EE1E9D66A906B72505339E62499C0E4B6B5A2D596C4F8F4312F582
9413DC88D6EDFEAAE0C86BEE44CBDDD79BC02C844B80324B1FE3512E73C213BF
ECD22E7E13F98AB56E4D693B1D6045045E2F01DCC2AA1F70A4699B7D718A743F
D749133029EAD1870DF0B00EDEEDFD33642A88EB10DDF4CBBF8A7D8F7781179F
A91CF398747D52769A054CDACAEDC330FB79ECC96CF43C29515F5895D3A8C1E6
828F776844C88090405F868A872EF54467B72825B001B46F6496817A9B928BEC
ED212D4368368778F2D1B66D005F2D6E3DF4AB9B9791AF2CECCA3AE524781A41
5052FD21CB81D934F0F12CF8C8FFC656BAFBE897C5E86A21D3F42A38F7916693
ADD1DBF48F534DA16099FFCF3E3DBCB254BF49D8F72FAC2F9548477F9AFA414E
65A29F24FA16A9E0955A9A6CCC47198E6332ECD1A791F2E36E6656852179A94C
E3CF4477A9A6CF507B8184ECA5C0304FA15ABD8B0C379EAC19B9D16A630D96DB
A6DA819C2E481AE4870BCAB5963C0F9D837C97E207F7ED58B776799586B9F755
B705AC31C09C3F74AFBCDACF092B05F9E2B072C1B17EE6347523D3D5E1D404AC
636C33DD94121C3711C3D05F48E12DF8489F894E4913263176E81927BF5E3A94
99D124F64D00BCC288F03FD14F89E6352083333EC6C2044E2F81C477DD4CA9A9
55135915C27654B09BC9099FA966AD440417945879399B39C7BF20385456878F
9AAE7343912927476C2C88A445C03E3B77381F3F9A82FEECADCCF8C307144775
144279EB14E0F0443F8200C0FABD54A075EDCB83EAB07A7CAF6EAB17C6CDB239
077DC62173A54E93BE2911F4A45F72B80DD9C41B301B292EFA78D361AD74BD7D
2E94D44A2D79BB7B89708E094A21CCB28D80E0FCA707D742CC02BB81FE4B0E06
4A5E93DF0414BAC27ADDB044A0D444692973994CD028E1C62F1FFA4776554914
2D55B0F81C06A2633A4AE42AD00422A619E339F2E6F0C6FC74F70552974509A0
812F1007FD7055E9ABB8CB39F799F847993DB9593A76C388F9BC883D4A0DE2CD
BFD0F7F2A5F1C50791EB4363104B49088E6EA2C5E61EF256A9FF232357D62D78
0C876D200E4136F7B0570A3B0988F3E23443081591DDB861745B4F6F0FF7D854
8F558F995A283B346E266DB6FFB54E0761046152A864F710113B6BF12967D022
2947517E1CE2079849CF8EB01BB2B96EEC2575AAAD1AA1E019D7E72BCFDF2979
8E2A6EE0C1525389C16411E5DBD416467B9900F07223117A77E0B4C3B0D49A96
C2E3A61AF9C9B1CEB80AC6357FC0CA446FF87BA0CCCD81924F6209198BD6E1A6
9EECEF233B17CC4E9F0654024F7E857EAB409F4B9B9ADE4090F2B715443A80EA
130369A193A32A4DA3730F13E3C9E717CCC9E74611D787277B73EFCE14FCC3B8
6B11AD88F42705F65E9C747B472F379ECDCB7F8F9C3FEA64402972623EA0998F
255892C43CEFD7ED08957C495AAACDA59E9398B43788DF27F7433F72377C8F88
F54F5E3A5564244827EBF92227B94F4FE896FEC6519769AAD567E618DFF61B7D
B93EE0FFA2EA58BE1FDAA0025259789FDB31A1019661C18080567EB5C6306596
F97F039E3C9ABF9E40B4725A96F8170B49B73B68E308786FE99B0C005DE01894
7CC93C196E1F830570D51F0AD29BF27CCE45AD7D3B4332C9D50F1E9C2D04E033
1E197DB9BE1D44566F738CD26A13B8EBC8FD49E999D35F042E8A24F025414F14
D9D11ED702250F1295722F68A022196A0E38B9ADDDBA997283ABAA62898EF32B
C765387E238CA3475ED5C6EF2803CE32B5A90A8287C70386F46B84C332E8C00F
85A8CC2DE78D433A325B7862AD4D93B3EE2CABC4B688833BF263E26879AF213C
934FAFEBE8D804E2BC8433B81ED5DA99F08C2C11B93019D3D9C1C952F20C68A7
E141DEA2CB983DAC5A2B9426A98262FEB13C420EAA315C890F0B907BEA099C1A
10B0AB255AF99694C722166DCDA72FD58CFBA3328FC5EF83A52A750C5E613E74
A8572CB8B78ABDAC27B798E727E3E5AF9451416493FE3F4E95157B4ABDF3A910
64369E34A2B40176A5E0E30F472E33A41B8C7BA4CB1BFB9173783909161370AA
EA40C83C60AAE242358688CE13193C9DDC3544A959A1E6A16FCC4BFAA65A63C7
5AEF208FC201F88DD047B5E6EFBD4BB256F973269BA1B06CCFC186D48BCCB4F6
A0F512B1D6541417BB6045045CBE72B72AA2549C345B1BB466335226A0E76A10
9645C25A0FB4CD8455C7C10C0F4E7E9914D2010BA1C95C6BAE4E62C8B6A8BDB4
92281B366208ABD9C010B3660C5E150D63D6927255CF9081C0898E9B206FAB57
B306669AB87AF405C537CA7D3411DBC41C53EEFD8071C094486158E97BAFE90E
BA29BEB83BA60776D33BF9CAF9C7FEB66D4B93DA27E499B006D243FF59CB33F6
AFC65D10B74CC522BF4AD45E3451B395AD5029B148A1C9B710D5CF02B65F9189
0822C0A33C4D07F2DEFDD5B4F6E063891F0456F1BCA4540F9DCD3B0F9F39696A
52336AFCF0A33A029AEEB448CE120B9D939487EC8274AD4E1D5F5AF4C14EC910
680C5E312735DFA3A5B1835370A76DFA63A05379021A64EE55E25AD5218398A3
6DD66D1B474A2E7C6E236E0E4A9BD0E4F7AD1807C6478225C58327BFE1822000
26713D01CAD6951F456504D79867D523605ECD78F2D5DA05994BA4812BF65E7E
34ACB732150ECB3D212D03387C71677F617D76A9A42C708C89D61614F280A5FB
0BFA84A17CF9DF333C9E13DEE82A5ADC9D2E588338D247889ECFB090CC63CF9B
8D92B1CB784B65BE80E3B57998F9ABEE702E07BC127D272C67B0A97734E405C1
FAA87E6B9DDB8ECAD2B9DCD56D687DFF71BDF29BBDA0A0812695F81C5EBB83F8
0A810D6560F28D7CA1F89A11F253E1B3B4EBAF511454E4BF2C46A333BC186558
8D73374455A32DE993526063AE70EAA647454ECC62BFC5A53357F2955E4A8A02
E20AA64AB6511CEFC5A32874C8F2BC2424C6B85BAE80191216A22D93BF2813EA
18A1A961543D7C58C4F4B263D76AD6C61270F2A77468B3E59BA9D861E5AA6CE1
B7A9C4C2A13E80C4052283DF3529210B3F6E90C2EFF205866865E7E96F34513B
05A45939728619E02FF1410C0D220F6D615718893E7370A0B91675BCF681B2D9
56112D9D37ECB819017472DCD38FE4724834869F82985A69E33BF862DB420DEB
AA1CDF83099114501C037873E86E0D33FC954E12D40038FBDC78E7159B738516
A078AA386D9424B8D4913B7848D8439D2ACAFB7C81C9AB192D77F316D299D11B
24F67141B1E0FDB564B70FE68070BE6BC00F22C11A1291BA6401C722487BFE19
D7869DA874C9059677DBEF958B7AA06EB924A17B3EFE9014493EA1FA8C4C67B2
B5DC483ACFAAE88F2DFF9FAAA7825854671ECFD522540C9F6C3817C11D3B63CA
8ECF710EAC4F27506B67B972633D0821BD15F4511F305A5677F2919DEBF7DE88
4F60E36360A7856B6B6A8A866832534279AF45B4232877F45C92ABDFE0910F7C
F86825A1B6012FF93479BDC9639C01CF2C783356B33127AEC7039D40529EE54A
756D8B7524E069DA60A38AFE592B8B228ABE22B7BC9CD9B23277FBB567B1377C
77E21AE6F55ADF4F8864F4260562F0384165444385D5A8C5966EBF191900B898
85240634EBE8A5DA382E0EE3583B1B5D102B6EBFAD60AB9C335919EFBAA55A6E
36CE4887299E395EB5766080FC0B6F93B1247F28842FB817084C9C090616AA72
25F4ED6996D36CD9675009C615BA26BD4904F3130991023E4116A7E6BCB26C10
7106241DE039BA7F26E137040BAF587AE03A476526F025C70F16EF23474C0EEB
6E27D8562C7C733CF470EA198494A505A8F871E8EBA31D4F0D9F0AEB9D0EF63B
738B582F7BD73DEFD5D83707BBC7854B6FC7FA6E2636F0B68C4858B247F70C4D
F602764B9465975E9AF28C2046EAD743CC350E747D6524B9CD7F325946B9287B
F7D46E4342A71B0409B2BF5FA4D340DD549F6A5B05D2784EC5A248560F4E214B
C5304217B3AF8451C190FE1C312527746E45DE39D8D43CBEED9A19FFE143CA61
3B65344C26E189D790A0211556C609F107C78F55CA120F3449A697D1305DAD2C
D3EAB88E2CBDC022A4E036E232237C1C16ECFA62D6CF8EA3B6610B58C75EEEE9
676201206E4A8B8C7CF5EF409F2C0544DAAC926497B1FBCDEA07DF042ED870D3
9D74709FDB8CD2CAC4726655371EDDAE78A5D9E0811ED4DCE8C23DAE1ED44D06
F4DF09BD9A00C1DE178E766E05CD3CA64301C592BC01EA4F6D1973586547B170
A3338C60FA1148DC5F3F7B7DB5EAC870239BD137CC85AD54380379F5C30B0754
D0A0FD8DDDC7CE725B58F37DE7DF077916C912F2808D0E4CA32808D0439A148E
3B1E18B9C88C8B4DF23FF5C53B2881D7C23D1C239F08137BBD8FEA326E7CD1BC
C80027A40463BD58758F4402D3DCDFED46C2E3C405E1B1E8DD0062E1272AB5C8
91953946FBB4B9EB0A74D0F7F4FAAD798571EEDBF0CD4C92A6916909297F27B7
5135990685B849E8244D2EE73D5C7BEF1D3042CA8353210EB4293A2B2F1BCCEA
7FF2AA91F52D343BFBF5E91F2381AE5B6803C46605D471B7BD122153E87D872D
EBF37727370BB683A194C4C4DE13F54AECB116BEB3E0750E10AF272E0C015641
0F9264A21BA79821B29D8CB78746C314E6893765AB9BB7BB1730D758F687E615
D2AEED695331E99591AFA000AA540ABD36ACA911E91E20912AB819A80D5183A4
CB88E08E0E9911612639C05043942AC8EA0072E9CB7154C415C0FB37DFE3F01E
638D5052C87A8359DD979C44B730F06019191C5BED15E6E79FAF312ED8EB0B02
3E712A0F6C89A6F7C122A561F133FB4D2A98EE09B11ADEA53702C92C210334E6
8D5F3E1BCC0E81CE178ED749B00FF4089C1AC412DC5F6696C9D8B9D2EB24B35C
3C1F8F63EA348A95622AF76CDD5C4DFE06A8C7534A55FAF937777E864C98062C
CEAA3ECB5E518C75FEAA240910646EF782303BF34FBF8162C8650D5A6F0EADB4
FAD9AED7994003F74E09A3CFD8900A33160CD1D49AA1C7BB5E42A2B0AB5A9D20
A5AEE02435D84A2622ED87454A2867E112A9AC72653A7865E2DDB9C236384228
94DE4A396FA798ED1F370AE5247E0E703D4D4225ACC1EF410631555D7DBC814F
F84353CD407284FBEA1D371CA578165B888D771ABEF7C3ADE33DF899E55FB0C6
A99A97A474739D07FF17DDBA267EC6C0A6154094D6E7354FEEF9723F23CA6E86
D8467D66FC5DEA43D700C9712BCDBCB15EDB628F4B840A76D761CC213376A0CF
3F137F399AF2F349C1D7FC9EE28CE88F416F1069D6907C3E917AECDD245A1BBF
4375A03755C145042232F87BD3F097746E41A70FAE7761AB26D1FDBABBFB56FE
D8C80879557D3849CBFC7D25D84D137ADBB5FD4F6FEF8CC9D54824EC85DDF553
FC992F823952FC7591D08F035BDAFC9317F144C94E828F09E29A02F0D6639DF5
08D32902957CF0BE88694AA031FA8BCA9E73D48A60FBEF090FEFF955FEF964DA
F53A9B58D2732F986DD20814A1C11963E4FF24011CB93D616CF4A6DEA6ACC5B5
354626A142D85BFC4F03DBC32F26253B97414C9CFDF3C3EBDD68FE0B7908AF88
1961CDBB6A94155524361C0B95E42AF0DC1542752B2129938BCD020CA19D64E1
0EB5DE254B638D700EF4BA620D924D65E95A329AC2657D2CCA597A4FEF7F1347
05419CFB59A93578682671B9A2910BBAF099C877288C19A4EBEBCB3C64415248
C00D0295332B6388384F27779F0B0A2D05A9F3BBCB3C1F587EAE05AE4D2C5319
478E8D848ED75B368FF45ED8B2D572AAE502493D2A3660F8400E1AAF9B27AB35
99FA7E39E250E91A67101F20FAE8BFC13A07FD2F7FD3A45002C02AD891458739
10D221602C35139358B1F23E0DDEADDF0AC07B1689EE95DB17A3B6888D9BEB65
C7A9BA2CD903B2F8348489A57F5A7191D1627A2C76A856C9E178B17A40293F98
E9CACD819DBAFBD0FFEC6EF5BAA6D8AFF764786470A5B02860DA35A5B3A2BBE7
45E6E4882CCF3A980B0C35F6C170D7269F7263FBBBF4051A51437A218711AA18
A408F16E7C9FD7D61AC4E859A91CA4B18D5BC3B0F6EF0287298B75C11FBD9FA4
1BF203A988C21BC2C550839E432350ECB4471F8553F7B4E42128DCA6B1239DAF
6C9D4A8B8AB7FA8AB013EC3060F02D6DB609F59E0BDE4D05891811A41F7E47EE
7166D88DDCFF5BFE1AB84D873C38009A857DB436100CACD8DEB98548A2FD3770
B44D6194717757468A9C84238E5B83AD19921E31485ACC168C25DA73D95767E2
27EDA7FBEC3FA6C8C58DED3649994CC965F81327D8547181CE06A73A6D696552
6A6EB8009B1C40A46791E8DD0AD66E125F61CA6810BB4B74E266703F9DE0E322
41D93C72DF010EE7DF3B7AF46CAAA9463E68D5C8B792D3197C4EED52CD16D5E4
493C1F8944901537C4E6AC73E5D6621CBD177B50CFD7F86E786D6E6EC176F6C1
3D7E9346C2859A185793A764E960F236A1798FF5E3A740ADDEF422FDA93FE058
53A9989A0A7252337DDCE50B6A040E49421069081644A51C80D37BF73CB30254
BC1D8A551F71FFE93F068070448334307A87526A86A3A7D53AEABC3506E78DD1
849BFF403701D6059D6CC2CCFCBAC8BEBF440B8D3152C63908C6882E56EAAF71
2984E440F40B5F355DAC74EB02738BCB094E40A55A48A26BA9970D09EF48EDB9
C0C6BA95EC2A5E98325594AC418DFF541515964C77B8D2C8E953703063F17F36
D042EFFB97936DA27FC3601DDD601709B71382EC67BB58C8D07254A6BBF7FFF4
EADB3B735D143E4654A5F06ECF67F0305606CD0619022A5DEBE3247D8C84A67F
B0FA852538DC05B30BC3423FD37E586D4149D96E33BE469F3A7E8240826BF920
C8FEAE3B22740DA19BD70782CA4698465EA758AAC7B107212B363F9AC8947BE5
1D621C2E0B050F5EDC2BF39C72B62704A385C873648146E8E615D349ED779B78
7232605BEB38346E306018BE598AA09E444D0F77F63C7B91B8989130CC44074C
3B78058725777666DE7703EAC3383DC1036243002C75ABD706FF6272EC8B127F
512CD94B4EB72169496F57C21467F2E268E3F2AB0C62F99D6FBC035327144B15
3EA7313133DF49A031282BFAE803713C525D6B12C8BC41BF641A35D16CD267DE
5453EC212BB664805A6ABBD010D85C3565B2ED2E163B021D319558F8B12EC74A
D23D8D3D60FB98D39D08136666DDA4031A8E608B103688D2E860B9BDBCD50DEE
D3BE745BCA2104F0A28816B184277891B9231F28346A46BC83E8E043427C28A2
401F5ED30A4C2578F06DEF1FF3C98550BCDC5427F0D3CCD9AA1189F6A2A8844F
5EC219D9C8CA25E69488DF641E3A087A0EBC9657354AE68381B4DD8789E1D35D
4AE06A051107EA4D9375EE74AD0BC6BFFBE163DE6DD491740660FFF722FC1F30
238DBF05300C35CAA9F686616449FE094A5F972669F8749826284B5DB8E20690
CAB98FCB242CB73DF0BD147086881CD9C9335856F5F195FCAFBC3813528BCF58
6586654038EC562FB8C340A7A231DE2D065BDD828B097E7E7844246A646D34D0
D7356F6E3655663F9EACCC45B962A67731C76AC98678B54E6E3A103EBC0F25C4
4B4AE7D581455520DA75F0AA2AD71C12CA19CC7D1D0E4A13B262BEA658AA67B8
FC1B1350787F40DB00FE7A2187D2562E08382F94973EE4F7F6CB90329F80DF0D
FDFCD73F99971EE31684D721083208D4C964A75B5060C9B13CA0FE1281472A94
526D946AACF92F55944DA04E57D5DE2CDD0313C03A48023936FDD7893AB0AFDE
4ACECB1D0F6AC4F152E8EFDE5A98FD8D8DB7DA1A8F632686E80B86BAF16006E2
685F68747E2FC24D58A6084E6869B736BDEEF2FCFB7C80718007107308481D0F
FEC8CA83ACC5F02BD00176F91682B12D3E1109AB823A3263BCB5FEEBABCD6C45
DAA1A7116E7BC158A6EBC4D510AD852B107BFC1CA19C35E36F930204D43AF4CA
08A15623B5A6B63FE2560AE636775DD7D5283340FBB96E321E0CBF322EFEC407
625D3C39D23DC349FD0F95260238A0EC9DE7BAA6AE6A2F42EB3D2F0C13B53132
F2B339E29A79822315B46B97C0761EEE46D61357D06AD74FF7574207022846BB
81D09DCDBB88995781110510B81B1D598AAD73A382937A304B47CAAE294C3CA2
6A78162C7049855B022CCADD9068EF88DBB0093C8EC87DC5456AAF6B0A8CCD78
8424235D7A11C5D3988D9404FCFDED03DDF58A623C6C0AC12C36C0569BC4FB90
46E61BFEC639824AA6F4965080A2D2A4FA1DDD7D127F68145AEACC532DA8216A
9BC69AC77FCFDA9017540D372C7CE86AD2B7D6578E21E9B1F5EC568B525B6494
E59944AF046F8B792FFCD6D79538BA6DA236092995B76924772EC37EEB5C344D
77999D1DF620249F4408E156C9F05395D3DAFB8FE0D7FEA5B3D51FBE10FE6D6D
37146C27E65B3DE3B6269BBC706F77D2F671
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1D9B057F51ACE6BBADF67DC4C0A0F1AE1F8606EE140FB1B2D8843522362
8762E804EDDD847E3201FE5EE8F0F34C37204F4DE795965835323E85D72C6A00
6B418B96DF758C100BEE554C2C53BF9861DCBD735247E87F40C2D96DCB3F97DC
78AB912C76BB1ABD750EAB84C7E590434595E235D4EF39D5872B805C1CEA7EB3
368369B2A98529FB880AEF644E86FBE499DDA7E80AA55CFEA7C6A502ED7E13FB
7D049A71620785E5AD72BC0AE82A34E8B0235367EE050E970A3427942DBF20ED
6CA129B742049747F6A1129B659D6D185D7564168997033FEB96B9F11BA70EFE
91344967B451D0993BACFA317E43570B74B1193F270CE537242023DA14E0869B
DA1A295320574295ACF03E3E3C78D9D6518A4AD6BE618098465A83AC02B3BC30
6B8713E7F719A11991C9E1BF0CEEB87F341617EDF0EC79A0BB8B3037D15F349F
AD7A12A478AD24CAEA5B99DCC6C268BED3EF9533A847D6F72E2CF185C932D3BA
3C3AC4BCBCBF368DD80C4481B2C9DBA841D6A91AC3C5A05B6B0630F7A781596D
5BB0AE9B08658E12B5FF633460151828603B33FC29DDCBB7761C63212BEC7B7E
F617E6BF5F9433960D5804493CCC8472D5D4FF8BF4A18EF139B94111862A1776
D2B9446F3ACE38D8E67DCD7E8C3B4A0F5421678A1F314ECEF28D9B226674AAC3
7D60C4456EAF8ED946043C052F9BE1605ED2ABF485B4E9C20B727A23833B38E1
6E15F9FBAE784AA82CE9DC5771F38C34267037779F5B417137A8A2B4EEA4C32A
0C8F604193E4EFA21FE22A450C3EB165E9F5DECF4319C7AEB33F912F149FDEFE
63150A652A07E2AD6080FFA6DC62C23A735C8A062333
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 60 /less put
dup 62 /greater put
dup 73 /I put
dup 102 /f put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D913FCF244BF664E52
6105E2DDFC0AF5591370BB319E653A6A2AA7FCD80CABD3F952FA948239E2D270
07F90D70B52F66AB3347D85BF23E1B39323C00BDACA8903DE5EF2BD64D648C56
70B2C7F1210721DC766876AEDD11FA6F9E672BD85785EA3AA4DE0F69E4A405D3
05ED2B8EC87070F27AA426B14574FE6F7FD8DA3A41FA39F1540539B907912A45
1E0C6315017006CA58C08B185FA2F948378303C908E44F7447ACDF184CF91011
DA16C7079E68ACFEAC097CC3D1252752332ED00F098721892B60886F48732ACD
25288004255A63C157877AE5D3C3F24D3C3389AA1B20778C9B9E07A0A96C989E
BFA076158284F95840B4B7B4B1D12117DB5C5366F64674364A0A721A5497FA44
A931762A58D45A0087DC644B055D6F1E51E55BF5930E75D3079E225C7355FAF3
373E17667004B76F1C473C48119B5F3266AD0DA18797B91A6DF5B7A095628CA4
FFE0ADCBD3D1F3B6CF401C3E1BC3EBF6F761FAF99614C3E8D571331A624BFFC2
F0F853E776088994D068E1941BE59A3F2A6482AEB153D1D5B37B4C2A82296B23
367E70F7A203CA252A53AC4ABBB8A7FAB20DD5DBB12D17C434CC6DD5A5251A4E
FDD27FBE83F1AE5AB58EFEEC797444BAE4A1FC485597EDF1D261088C170680E5
4807D7E4B93DD712B834552D0CFE0897474584F3D9D34D93191E3612278E7863
336304E42499007FD5F82C30364D523A190A943003735A629FE16D2852F23A8F
B55ABDCD0B5A46D6BCF75F927E29BDC5318D41734F0EE316B629285A06EBEA61
BBD832DBD18260EB0D3DD3DF77A7FEB9E489094938E7EEBEB5ADC8DB2A152597
316DEA8EA1E09051BBDA9FD0446DAC7B921D5A00EA4A501A0EBFF0DE955BFB62
5561A927CD06CA3D9A03522C14313153679A91ECF655E6FA74EB31977A25F8F1
F6F98C02337188F70239343E2BD3BEC4B1C016EDC2F717EDC96C2577A20CDB69
7CB4E56371DB27036E18E2D89D21655645ADE74DB684AB18CF59770CCB6D36D7
89718C536F547505D0B2118E9BC0402E9C9BD53D33AB8A8DD0A0BEB88040B769
A412801ADBE116E0E90EC2391D4E2950F0D568F4DE62D25C01C18D3A66599B02
91CCE70952F8517749167565A6544D279346886FF458C7526CFAA7E0C77567EF
29CC4BAA50D512C40F3C7FDF6BF68C77AF767B242731CB80EB3F97E3FA4C324D
2186B0BF30D35A20D5A3F07DA9E428B67A6CEB6145C2528E48E5B3110598F6EB
F29D4345EE7B818DABCBBF299DE0586B1C005924FF216F3A6E27AD4D70A3755E
75FCA0F781BB036B437EB419584318D3E48327B2F343A54EA600DC28BECBCCE2
112B961539214F567DFF4B1AFCC23711B4F7DA22D6A0A34B5FF2842D69E20FA0
3651F548219FF92B95AAC620DC8ABF6EFDFE61A0231A0D756B534A2140A20895
919A03C3B453694275E0A49BEF44CC1461A4336C6D7F65C39C51FD377B4F26DA
D467F8FE13EA33404D6E90F73C572DC62D9D4C72D997
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFBX1095
%!FontType1-1.0: SFBX1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecbx1095, tcbx1095, labx1095, lbbx1095, lcbx1095, rxbx1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFBX1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-227 -316 1723 930}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA0E2F461BA16EADB32842B6D00C76F8A3359BAB9
9CCDA63EAB4501FF88DF4CE0D9DC9F071B528726352196D1D889EC0F0512EAF1
A6ED201F5B8FD2B90DA9585F5B2004EC8159EB426405D76A85AA0ED1D29596CE
FFD55DB52BF5C0325EB43E789D2128DE66E59F9A7C84CFF09969406DA529C87E
3410723FAC317F161388C55FBDC43B850230989AD991ADA95B1CDDC4D978E722
8BEB4E338C3EC48106B4274FD9FFC7CF03EF238D8160A515EA93C009A8F2D3B0
1CB8041F5EB86F1D975BF4EDDED8B7D2C81B665124CB1562B71114FA44449C6C
4DDCBBD36BC95B0E569A5A6EA9219B151426165BFEAA914437CA89EF4B0F5911
AC054509BA0102D462A183A29DFC304DF74A289A052531CF1C505EB94CAF245C
33DEF613E4F1B785DEC94402A2C46B2DD4FAE5DD176985E45A03D85E442D7D77
A7586ECE67CC2360820AC46A8CA0DE0852F2F3F7ABC9D4FDE78321A4B63ED2B0
AE51F2F1CBFAEB6FE8142B4877BBE69FE6D4FEFAB7E5A8A4B22803992910064A
F998A0573C898D6EFC101CAE6E1FBEB97001A62893B76CDA3996BB92B7C2B8D8
F5C16CD2FBB4F8D9DDF27E66377E9BBA95CDFFFE02D05938F97D05AB348A74B9
1D39CA72320F8788593D99FE7CBBC69BE81D60CF58A584C366D2F5874A3CA93E
3D630E60D2D74E3CB14ABB6B38E8B409EF705FFD7B13420650A3E56C4B5AB090
6D15C8CD09CC2F8B32005F24D05B7E5EF52B8BA4F1C73CFB0A908D42CB6BB6E9
507EC5AF073CE78791C3DA714AA60198B87689F05EB1298F554671C81123C070
925E3F07DC46D862F6C874E548187A5EE7C6B713D5BF66A7CB3F258D2B99BC48
41EC9202C3D02C9A2CF71D52FB4D0EA9DF8BA01EB2D2192FBDE6EB1E0A7EC955
13D077AED82C96F3A8D32180720DA7474138F847B46D021414BCAD1629F0954C
CD7808E026A4B5D79809DA84748C1DD5A1EDB6AFA088E9C1122555CF98C46549
F30B5A62907162B395AFF56320A138B76191B06FEC97AE75953891B02DDF53DC
CBB20B24E56DBB752A5C0D7940CF7E3E521FD1777DA4A2638139FF78B960298D
1627E5DD2BE89CA00374E2708CC47EEB701A6D026C56A4B495AC3916730A33E3
F20BE70B1608FFD5E07D666781A583899A9E954CE4EDD9144793A659B499C192
207C1E52F523C2D6CF26F77B1BFB04A74E32536B7C6632BEFE3B123CA985B721
3FB2CDA7BBAD5C07718689DF3C569C8BCFC0F8BC5E075CD64CD6230EFBA46127
656070359652536BC1176EF4EFCCADBDDA29266D238C0E7C800DB0E22BF8000F
D3DAF9A8B70334512ED37A8812D914FEE39E343EB23944236E5288CDD4B8D323
578F80BA1F68DBB0644DB800ECDFEE43E42D956605142993345431B9FF2E3660
D108DA86E2117BCEDEC347C04D58988D00402DF8794B1D73940EF5CDA5F711EA
0BE543BAACDEE7682FAE1239CBB0BCC0D1B9351FC2667B316184CA25DB43961A
A1C22EBBF71D328B75CA05456A731F177F6F99EEB4BAAC06004DF835495ED5A4
9C49FCD5B1F03444A2D651AA5DB383E3747179FD54E0955DF11800F8D76645E6
A7C09AB7C7CD9922E8788E3B508D7F77C8C341A1FB529EE1252A1158C125100A
5B42A2E400A501580CAF3C9BC9C74EE0BC48854DF648EF2A0C6AFBC2499BEBE2
613232E4866B0F82F15A18E9324C7A1B5C7DC8375A1D2E8D121894EDA87B3A96
3922A29E00BE8334ABE712B0C3B23708AFBB897F101BB80A110DDF7E4E761488
03E20DD866B8AE8BF3ABA756B9D8DD0E3B5E495E3070FEDE72BBAFD87A45386F
9DC59839783DB864303DE8C85969BE5AC5245A0270CD53E72377D6B86CBA8331
76323D1EA2402B20E1C4E68C55F1C6CE31AEFE7C8215D7503417B29FD16BBC2E
221724547E764D44F5A021DE5973BDFD4B0EC4B5A6D5DB3CC8716D1EB0AECCFC
E96209BEAA676650FF0DBCD65A89DB5513B266D00F71935DED5AF2E670850928
D9E6A69CDA5E108DFE5DE022D24C8DA18BEC0A790ED8BD50E7E77F002F99E34C
64E6BF6959B6E245417A3CCD30C9B8053D310B4D8FAD6185729F7C3CCEE8A9DE
3EB39D72E9C776AC7EE344A718174809E3C057C10FDA8B73C48A1AE933CD7D3D
2C7AC2D5BDDB2548C637EDDDBB242E8DC921CFE8851CD927C5AB6220E7A9E2E1
F20A66019777719D6D13084BC8BED1ABE47EA36D0F5282F33311497AC69F71C6
3F014D07370671C52CEA8A5E53198522C434869A0C67906B55C46E56F8C53790
FC92D2D39862E3081AFB5C0BDE232A458F3E2A5F38E7A3A97D8A6EEF387C9FD4
AACCC343705FC9CC20609255F68F76666D9D4647002BAE0876BCD353CDA8353F
F24A48188ED97C54815465EB7CF6955084AA74B9E8459ABFA31A96A177DE5AA0
0C9854DB2D25E958FD56FCE76D0DEB67A47A2DFC20F2318C9F6FDDFE21C2CF81
2CED3B67F6B17546BACB6631A51EA218C8811C7A73FE4972A46F1CD9A89D9F64
ABA4B585A674CA2D5F3B0CB9D33D6AD3777D15E08308220151CC188E305B068C
11A8020D1A155FCB44FD22631BF2BB54874F6206780CCDF810419D871BD38ACC
4F2B176F782DABE3FF8C270633416DB2A3FACC4D1D421713135FD84718A13369
0E6269475B5E4B670FABF83F454E745574255A02CD28BA9E87AD4906113E333C
0DA452A3DA5FF5956B7894282521184959AD0C62899B0F39A7FE182D41791D9F
8C15AA8B375B3C445C6EFF1AA44EECFBDB8B9ACF11B6ADE903BDBD785DF0512B
2EF428A2923A91B2F776C70FEC7B1820C42A1078409AD56FE7191150FA4EE319
9E1639DDEDF5009220307515D4202AF42CD3D3F98DE8CE8101FD697B9B981BFA
7BA525060E8E38C85848538CA9076CA03EAF9BFEE22C49F950A31A6912A8E62A
9B0A1D331A6DF16E8549CD1D757DA72837CA8E90CA93CBF9681425ED59AF6F19
CD6A6C9C19310EFC5E3BAE2B3838F886A23C87281744E40FB9C24D5B9612453E
5EF16C7733BF56AE6BA3F4D290FB8867810AAF4715E339375D60A1D1B7AFCB9D
F8A89FEE180D6275CA7F8ADA5E5973BCEB77DD72295C24BCB97A2A8755111464
61500471693B912992BC817E704A0E944FE4BC73F5CB8455B5EAB7423DAA5559
8A17A44F07BAC8A71E8F20774FC77035771407F6C61B9AA815F71BA9CDA2CC27
83ADE9766D90D8106BD2C089C0568476073FA36EF1BF8B03B7DC0DC3D0E9E5FC
8771BCFD404F15D439B59D094DB2E9523460F114D0D9E5BC68069C7DACD273B5
0BC27AF8E3877B5A18FAEC29D3124B969B854899BDB45C50E17B063DED4682B9
7E5C7DA98CCE8D724D14B879155BAE75A53F5B8CAA9F3EF14B096CE3C5EA03DA
61993C0742C0C991B2700E8E8DAACE7BF3E6015D0FF55BC9FDD3B63B0FD6A904
69F981B3728A590966A1F5668CD8CE3441AE0CCC52493F0D102D2B7A8FD57969
D2C61BDBC19750AFCE844147A34C17F8B7C2226896D515C595A962D99275B831
B6B117F602C9A6294A8BD979D0E1891573EED27D45D8FC743A5714FB582DDFDB
54972E891F3C1909ACC3F57E504A97373509044C5410E81DE9D9628412B17244
31EBDF1622CA25C441D2FFD4DAEE43CFD08C950DB75F8E5B5F42C1C211203ED6
EB5A3357154A0894C7C6C045C42EBFBF182F0D752E77B8EF24E11ECBAF10682F
0EE1A0A11302921F69446F53C950E0AF08006A4FCB9FDD4CD675AA474C42A773
3E97EE2065A7C30E8D9622E3ECCD12E57F97CE085C84C5938C3601AA6E55705C
785648C8F77B93A92502BE80997C0EA83D3AD039FE0720013D660B96ED1E6B51
89A938DE6896D72B0CD6A1747611D2BF413CB128327442D69D1B7FB6EDC903C5
AB3DCD4A3D172B4A8AC5DE573D52D00995249943EACE8608267FEFCD4B77DB19
44DFC2FCA9D28A6742AF910205C9B626B44734A2A35C990AB0C485C8FBCC63BC
FDE667BBF8B8DAE62999615F358E7F80EE2D8EBA389C249A86EA1764EAD2D65F
03B4F41A6FA44E9CBDE36F886A6D4CB723B35069C84B8D3F3B087C8454EBDCBE
9D7FE91345F3775F357A5368A23599557D1C23EE03044801F3211770CEAEE917
D81274FB0BFF9DF2D25FA03BD6C6DCA0844F3E2B8530004005E9F6DAEFA530A8
35479D3FC7623589A18544A63F960D6555EF804A6913C95B13962C80893D13DD
009CC4A4D8E80FA3A1C5F9D1F152BD242CC5B03E2614541891B78E0EC88E75BB
E78CB32E0133765517039417CA212D044907A66E3BCFBC6E22A8BAB77662B561
34033D3D98BF16427BF143B17D02D492F4024DC4CABF70786A7C03996D966AE6
5BC10785AB7CE2E6C544050618A4AD496060FB97FFE5F9C9C7E31FB75C3E973F
69E893ABC4AD81F1EE52D7A1D7C6B353DA579D9C83E6D9510BB613232CC88117
AD594831A1CF9E71594CE475C30E761254F64DEDFB54EB910F0F68AE5AAB53E3
9DE6AF787592277924D503B3FC8CBB424529DDEAD48EE971DBEF0AD790D5241C
CE157AA6DBD6AF81A9BC101962355B043F99B66F7E21D717BD703717CEA2FBB3
EE7D8E614A4F65BF1A72907BCEB28F129535655C5E9E97172263A7E42C94772D
55B7356261B866841B773E27B9BA709234D73C597A8FF5B855B941930507393B
148DBBBE4D1D60A3CA285454D782F68BD580AAA99B9A321DD9E9E16AC846CF23
6B292A528DF0167174D65AF973D985C5165342FA3127D068FA5C3EDC07749B45
C040B9D7E584163E3D70EBDA8BECB69AADD2C61B51D0941763DBDB27CC98610F
35EA14D23A22C2AE735247FA120EDE4E5300648671DC965C53AFB1F238200AB5
250B8DC675AE6B46B849A602F488F21A80EB7E38BE239A8E0469C562FD91DF8A
AFBF407D06A0FA21C524114991DB61CD6B9851361DC744F6635EA5765A068C5F
247BD87472592808C08B6EEF387C9FD4AACCC343705FC9CC206640C52D80B33A
D5E627D93D9F77230D85A548E238F61D1B21DFF10414695EED42E02CE4BF9C08
4609E63EE0E9DF5CCCD180DC4D09F70C1CA09F202C7CC91AEB7FED0BABD104FC
349DF5ED5A65A2E1BC41CB947DFB12314982701FC8CE428876383FA1A5B5F00E
5CC067EEC785EB34803DA30121ABE54423C8BCE3D416F2BBCB15D8B9B1FED23A
9542DE21C117D503987642EF747AFB35100BC08242BA57DBF6BD4E39413FE191
E96140B14E375E1C66A902060476B523E587A4AB657EBE85DCD6A6C892B97BB8
CBCA87983B8E63E7DDECB7CAD0B42D846C95F57BB3750B3814AE5FE829BA1517
34B6D3B9B6DF0D0F60C3817E8A751B5C02332508A0D0063177B9D76FCF2CDB36
B1D916560376C2E71624D90005AD2E75FB0BB9F48441D89700FA18C5CB514E90
70A1618C7C49D42EBDD432F0A24C1D4198557AC95FFABB31D8F27AE69D87A55C
167412BED78AA9195F3DB251C3392DF448D1A8728114AB77194F0EA9B4408425
B9F647ACD2FCEE4B184E4148C46F02C06AB82B6F3D0E47CCE988D25766F86840
1CEC3DFD9673D0416BAD3A3ABA18DF3377AA013DF3CAD255BFF140633F393060
892D5061403177A09448146BC96FA23F67673A87273B43413D509138D5784451
AEBB3A3A4A791405A1FBD67C6150CEF9DD8DA55B1E8D70925061A5137BB4EC00
2B9159F6EAE77BB7C3C8FB47ED25A9BD93D2038D94BB4C78C6543BAA89796323
03497214FDD8FB047612E861D744F4268D4C9B6DCE7D296F8B501EF67FD97344
0AFC47C1ED0C5A1B5B3D53FBA0EDBF8EACAE17BA93CD3C10CE46108180E65030
E021D4DEFD6F871F7EF9D23EC4295600148ADB54376BC35D43B1BE5C8B8D3F42
D6510EBF2F3DDED822A654C068E4B610392D8B56C1F89DB36C910DA86F7C5E1B
73F5CD7077CBBCDEBAD4403F7CCB4FE283D7DB7A27DFAF2E79627EC89466DEE8
87E0DFF2F16DFAFDB92A1B45361A68C4191BBF1C0DF33D687F455A999F9DA100
E0941B85F93A8E9D969D99B78EF5CB60A0B62AAFD4F39714DF11992B3A39BC54
A958BD37387035E6147F7EB2755A6B2434BCE500F78A25F66323E92CBD1B1B94
3C1AA99370C24B1422FAB8C78DAE2B9C375974F34D058E78A5E91283D62459AA
F538DE6C18FD77C17143C8A2C539C6DD19060CE59244062A4CDE2AECD22978A8
029EB2A4B1406BBFF2B1DB7C07CCDFF6148FDFD181CAED0AE0C9F80EC7A1527E
9B496C3B5D656CF7C2011D60A37E8D7DC102F97CC8D362AB9D91A7ABCDF16D3C
07624787478FAC3C7358FE9669F35AA8D0CB710AEF7DF561042F3057855BBEF5
F1747E946640C4CCFBAA342A28C7CBB47B48814BE94D02486106E74890AE46E8
806E0D8DC4E053D2676AD74CF36E3FD0DB3A43EC3721C728A6B725F764ACD772
DA0F5B5B73CAE1CCB597456453A6B0A9B5D572F1CAE51BE4B62E918E80A35A5E
970DAA2463EC7EE330FF05B3C2F06BD00AD864433417196581CEE2774A103455
48608A0360F9E92CE4FD6DE64355445714D8B0AD7DD06F73CBF9FD866D5949FB
BB1E4AA379732957AC35E11756EC2564692188660FCE71B68EE25C48824931C2
C915D433969BACB7D3FD49E1D5D9C1BCF633BC9D6A33D38AFB5B44EC192AA94F
FC3F5A418D2643A9DB38681252FCA55087A25B8E36D7DBEDE01CBBFBD9CB1C5D
CA64D414687687531E50B8C6BBE8A2AF2331629AC60FF0E8A338CBFDD4042E32
532D499E543BCE349D3F6487B5374F2A0C163DAAB3EE61D681403B2CD7713D34
08D17A98350DF93132CA58059432164A26B50F8BE1332960071A4F9F9DD7B96D
56DFE0D78343F4CEBD1F227556506CFD0B79E121066B478FF9CD702A0447BB0E
D5A87CF30D8477FD9549B9AFE0C62BFA3A43079B711F0F1596D78C406BF8B710
0496357726E9167045CFFF6FDE4E1340746F78B8A490C950FF7906BAEFA5F1B8
67DE401B09EBE71CA5DE4E24DAB81ED209BC977F81499A926FA86E48665722F5
1FE1163BEE8984AC6C9CAC0D5C42C5F222B95C3694B2A0F515BF6C809CF5481C
55E4DA55CD85E5F2C85F776BA42DACC537DBBBCF0388F71DDD5A78BB48F63072
221AEBAE6565E10260436699C2E85261C5066BC16F39971298918312250C1BB4
77C45E159122B22901C4F7B92E7B3F323E05A263FFE7444CEE8D8229B93E8A59
7F177401E22C612D14718D582B240DBC135672D70073E4902189C12EF50B4F47
3ACC165EF655F23C1213CDEFB8C361C47B4F11C845ECA7BEEA0464CCD5E7D86A
A3D18EFD237CDA518B7EA2E601EF88B9D63C0291AF8BF87CDACCEB18EBDB854D
0657819F4A6D5799A8B95D136076B962165CD0BC70D58EBDC2A98610269AEDDB
762A308F64FBDC573D00544F9E210577DB0A7638C43301FF297B398A16DB1F53
31DCE442BCA4F617D41E88195D83755BB6132B763483700498CDEF8BD9F3DBA0
A95A81FC237C6BE129DBB0EB5E07FF51832720958275F202B952383D90AE4EBF
BC50EBC99E0D74BAB0E1025C33C1A6A17F9584E2DF1B5400FBD250569E78C70C
5EAA1DBD129E0B69C05A59E308C8FA4E67D56C072B6600C72FDA7553F4D1117C
45BCF8734651163BEE47FEB933A6BCA1396F2043E9B574A680EB8DAF97354C69
D3BD7D3DBFF4EE7CEA13097AE35518FFB99B545037A4B6194872260274F5C284
25F0BF74543D00A6C8250BBD5F2DD2034F9A5AABA9C963B6B55420143710927E
3AE0A422BECA4833B16F5BD0C36815C1BACCA1374CF8E01CBC690B43DD784941
866B0093A78475FA18A11C8FE5D79983933B7BB83FD9F48F7008C85264A5B32D
A8C0EE36C09C820E83F03EA7786BF97AFF7A70BBEA6C15A31507C02811B93E04
BB25E7B47777BB827D74D36CBE13F628CBBCA58300DC0087A766A60F63978BE7
57E7FDB324894E4FFED1777C2187F5E1A2260C9D48EC2EF20252A869B5F73F6F
21273615D52CC6496BA5C760B3FDEE138C0213688E67A8A262A92B968DEE0004
05AAF9B80ECC6D4B5CA294899E426D213012DDF7277EE2934802770DA4E413A9
E5A69C89209BC7192C93E565C591DE2694A95B6995E959F4D0FB1D42E9FB91BD
8FD179876DB2285356FEFFBF70CAFB475E1810DDF08C00E06E0195EBA378E172
0D90CB3449BFA675969B80351FA5747195ECAD77DA5757F4802781AD3E5507AD
BEB97CF4D0172757515E552E41C99425EC1B36D3DF3B4787F5CE0C97AA3D34B0
F4E0AC41A03021D7695791168252F57DC5905D47AE0F453862CA30E1349DE4BD
FB856BAA44F1C3C575B4B2485ADAC7827316D7E1EAB95DCF7A42FB2FE1965F4A
E1D53FF0A257BFA3AAADE36133B41C5AE1EAE6E5FBFDD00BF43207DE7DE70802
B98B9C81A16D9E8C2906D96939D655E5D21C81292D7EC8E974994EEABB0773F2
4A6BC3614F7E4C86227C1FBED7AFD8C334877EB91D5A5F4C593AB8FF3720902A
7E5644848A57346228A00EF52677F4FEB7F5DF7EB0093FF36C008E426AA11A9F
46B4452676B2867990A56AFA5C2F20F89925CFC5D85A28B616B9EDA1AB50E283
E0D0BC501FC101C6688152F658525D5D03460298061C181F0B9FB0B28D20F0EE
E5825552418BA6FF077024B33DE798EF7F31FBF72141059A468B6257E5748001
F7E3F246987E3E2FD6B17631EB775597402E39BCDFCBA8347351C246C8F57914
8DC1136164CF7A259C5132533233A4B6C81B3DFD7BDDF09452F544143B86F62B
E70941CC751C5B4ADFD19E24E33905EC5F0911FFE7AD053945977CBCD11969C3
638F0B8FD51EDA35F4E43C4BCAE40A8FF65CDAC34AC084B4305C1A44D4051837
37CD197CAF8519881ABA73D449352DE81728D4C127BBB5DB53DCF99EF58E1EDC
25BAAA8889012BF840FD6F1582F6E98BD70CB0171A7CA46D17DA14AEB22FAA63
305BC482AA7552B02BB080926D3F2EB2FB846C79E0A6793B8CD1E4C04A6A5C4B
B7F28862B91276B4B5EEEAC43092470A5E6BF8A460A6997847DE1349C8E1D29A
4B352CC39BDD7F1560D58FC968EF269DA6D558A38CD30BDDB12C5140A1BC7597
8A091C62F74EA1CC5E93917B12E576DA9DF5499FCED9E6865D67E1F9055F3380
DDFF117068ACDF665862CF6D7C75BB6F0D03471081567F501B1385CC01436256
6C08D7004D0CC1FA7D50EB6A9486D0BDB1D3E99FF860370E0CC41A0D98A54E30
51EEAE04EB142AED25283E10CFA136E24679AB3D26672DD8BD468EBBDF22C174
56AF5EC80D6AFC0B10E370E2708CC47EEB701A6D026C56A4B495AE9EEB48D85F
BC1EF60AD643DE7E553889BD9E0B2E0D3D91F3FC7FE09C84100B7D9AEFC8A495
084BD1BBD0297AA25492F48B320BCD4EC86599F62A367CB549E3FE7207BCDED0
9D551707E8C84FFB41ABEE5C4D9620894B44DAFC5851E840BF250F85A7F49B1E
363F3D1E883C56A1D8AF76865138859A8196CBCF7EBD8B02EBBCB8F040C43259
B5641DC73A37597B2A8076795A99800C7B103AFC20E21ECAE26A40DB639AD665
9502F90DEB3DCFA5F9E2A8594D3CBC597C3A5B86E2A4ED94A7D997A5EDB1C786
5C7B751E3E9466F3CA64BF089C9D6EF808095EFC2423976B83CF5999CC5E46B9
8A382789DF8C7471D9E92E39CBB0BCC0D1B9351FC2667B316184CE0C0BB88C60
420E3118FC8746E18A70115E6F8676C28FF29983C0988726A31D7C134CFE26C2
AB2629796D755F41B5F4E5D10DC91D4B90B670A9903A20B8449BCC4612D86E4D
77661C628BEDB58E4B232A5C3E69EAA7AE5607DA830C584CDA6AE851536CDDCA
59F8C795DC9CB0E86E742979B4BC35B21D8EAE1F6ACFD1E222CDFE7FD1FD3799
6C6A89AF448FD5703A3AD3706E54611998B4C01C5EE552000881576971CB9E40
267EE1B648454B58CD0CD9FD9150E63FEDB24200F4767C68413642FB154AF6CA
0B62165B529E5A09630F90DCAA6B8C28157237FC958B966402A6607B9D0E8ED2
207D536993F0392F48915E3B6D06A1102534A6F09C7FEA6FD7E024A6DA9A0B9F
2012E84E750C163DCCCC223DDB5A86789194FE988F5FEA5AF6530FE2F9A3B5C7
CABD38A1FF6502F9EB5036944C0531EBCDB3BCB608F4BF4E16211A12CA453C71
D49922CD7C270A13F0B82B98CA9B6A885456358B9B0228CABDC0471ED87CBC2A
7085E48A006FE526E612B7F12E737718342369FD2FA841F2B931DB0C2C8029A4
FCDC61A14E2B9E1C74E667F1D7B9015E4C8B75BCC8CE993BECD9A30AE49FED4D
2F0FC845888659FD3677FB3E3EB2C7C334FDFB7A2B64253D79701A7D24D38397
5D99A4FDAF7A02DF04E86B1797B6F81CB076D4861E856FC6014295FBA2F4AE01
7B85915CA903C6005351639B4C7F93CF5D33774721D232F7EA3521E92D813934
CE4C8A6056BB18F8C34BAB46790F89CB79834F544845155F0FDED479534FC350
53A717FA7411F371B3895FAA113C7BBA783E043078D7635CB7271D8C8C5ED0F3
BE11A407B503EC5CF8ECA2B2867037272CD80C2CDF97C3A5C4830CF8E300B468
A2ACDF7B66BEA904D529E005007E330C9959B51A55A2430BDC4FA074B44B977B
78C11F2C97BA913F31FC39D288DAF8F0B6D57A79FBC5344878436F05BE2C5BEF
083F6C56F63E6A17337FA1675ED8953E25AD511CB865BD839560F0AFD26CBFF7
E94C4C210414C69D550B069A470D043B7C7B3BD0880B2A25ACF6E001048059FB
EBB4E08F06C3A3C9CD63C4A8A6E52A5AA8471D287F1C0128AA65D734493EA011
4E40A7F2697F3D6E1718E3524ED380D62F5AAE83494E800D9EF583C91C34E097
3C9089850F491152FEFA5D02E264A51770A7434178516DE898847298C46F66AE
52DE02D2EAD21921F975BFF76C7B9825CC6C6389300DC9562CCC20144323CF96
F4C3C84359790EEC08E7B08F182A8BE522D78A168DD57786281466A7C86EB4BA
469FE38EC682F4A2D600661D619087D8137C45535EC08197FB5B09C782649444
1C5D90903F398D641228656B1C6735F2E495216424C1A9FB01F1E8010953ED0E
EB16F25FBE26B8D927DF2F39D0DA3EAE1CDEBED7929C1D1E7F9A123422F371DB
D3954CF74E814CB7F4FFE8306418CD7E169510940A98E4C17DF2CA6FA4F62601
F29EA58CC3FCFF771C501758DC6BBE1A36DF67226E73CA9B8F47BD3AF0772C9E
AE378FCC3A8318A936DFB3218381CBA5EB69365C378B1A9116D57FC848DA2324
379935E66ED2BF759505E0CEF1C075CA3614956371CF4136782135A899BFB025
F5F359C1CA80FDCC858BC7B4D6BF26B24D42FE33605E3C8345BCAE8E0720841E
AD31DA8D1CDBC4D20F3F418BA4179440BD22F897FCF3C7880B3291273A1462E1
E4DE87A7D35907BE395232BF2BBDD15213BEE1237F6DB8E5EC3A26CB71AB92E0
198E77BC74504C570F2905F1B315231BA851FFF74465E3178CE78E30FD1C6344
DCBB7FD0BACBD21B2B161DD7384666F35239743788ABBE9114FEE0A12C240CD8
679CF2B600CC460544ACDA52139EA2CCB1ABAF71A35D36BBE9AC43246ADBE690
C52365BEBD55BE691EA260526A6060945E6A34D8325FC31ABE1EC2D15323AEB2
CD5A6D97FC546E899C8E527660ABB0434E78BD82D8936D2D0C1BD34E9BA70601
F2C027A961FE7B81A55DE3F4447396EFC7846A3BC9FD97207C15F18D8FEF5713
568968803100AF5793F52AEB5D76C88A14C67A0D8F5312B20DD102A8E3C00193
26593306DB2EF556B10F19B253DBB32F785C724722ED4642734B710BAD4BE963
8569D3463F2046491A78602DD867563247D9E675FC7A8BEEBBC4E4E67C38AAC6
952E467ED0BEC24D3A8B2ED7401F2429C9661A9FBC3EDE8B3A6ECAEE45A23BE3
C33D48197145B4857151C7BF6E309AEF2CA999760B4993EAA5F1B867DE401B09
EBE71CA5DE4E227928069EC53FD5E9C745E978091C4C8B2E0C6985ED76735DE0
D9B5D5AA9F42C1330E785F1F78B6B7C82D5E2C22B2729F2C58CBB49F019BDBDA
C7482826B8F71EC51A777EF4D8CE8723654616BF83BDA50EDE185006CC847BE0
F6A23A0A00B7DF4F412C71012BFCA0C53C4F78529A896CEA8CAE5A330D892533
9B7C0E156E754BE0A9DAB88E81AE9925C06C89DA157F70CB81E2846DD9FB0554
CEFDE5E6B879B9C2674E7A36A8AF511CBA44E43824FBFC3F493811090818078B
97D677321372D8AB907CE219F65EC6C7229DACDA99F13247524103082B4E3DD2
E25F1CDF9DB2DC9B67EA9348596347A81D5448A78D0ABED5617B9C8D02C484E5
2237B4D55F47166E95FDAF4FDBED8297BC94C9578F8AA4248C03DD7267FBA194
17F8DCE55956FA2468350F0944C08A6213957463391C91A7C1456FDFDB46767C
44FA15BA4CDFFFCBA641985D96779F5F278A1F90FC0F65DAE3EDBA9E51C8AB3A
A18648F59055C0255C80F2EC205FECF24964A4A4B22DE61EEBAA5C23F65B533B
AA8979632303497214FDD8FB0470747881588D9FC1E2C25A228E6AC46A6B355B
260F70E4CA71FC970E8EBE166ADD3B3619EE1601BB44A1CB7EC830F322EA5989
BECEA1E7AC3B74CD541C9A9C9873D4D6C551C92D7703A7262419E7545C6B473B
5F02AE7DC6ED817A28B9399D7862EF0B685A1A30D158DDF063382245754FB9E2
D79AC4B8D9D9E771EB7A37C96FF1195208055E5B92289539FFEF6A5B093D614D
905EA1F2C73A718571C5C42D49E82AF42A1E444FCCE71598BA8F63581C84A0CF
391A75A2CB73748EC8C976DFBC26151D66893E312892B18CC51CD2B41C9E1C3C
1B4144A157E5CCF00A362E6603A817A02E1AC882503F4DD682DCBC9B6936E270
D51977C31A5F9BB7A43566311633CEF844F24C7127D3D659E0459FCAFC4C48E4
5BFD3F59F355755D4C3AF1ADAD3762A5C11FFFBA068859528FFC0C8785024E6F
8B112657EAA3604E8DD05E04346C08317070B7B74446CDE1FF7AA1A0D38DBABD
6986F1C074EEB223B1770649C2CEC4D91D676C61F1AD1CCEE0FA1DD122449D00
4933ABE1ACF58AB4EABF4E9F025EFB9B17F2D3ABC3269B6E12A5076149A54242
8C3183CB829B644824962612D1050EE8F330F06E69DE516CEABBC24F63F407FD
21A937B3D1735027E598325E4B961D3D3A3B0130EC2ED6E91E5109D78DD0AAC1
40134D5E32AD8B11FBDC0509EB743118EC90AC989CEA4DC019180FB37EAA563F
78644792E432C3A1776396FA6954AEE77963016A1C77555FF8EC6F39CFFB4D4A
AD5762C8D5AA3BCE2872CF885EE445BD215107AF7F4880B539B756E125867E17
46017DEEA2E49527BFACBD40CFD211A88301D9A51582D1D03068750E08F405AF
AA95FAC073459899667210BF60478E29A0269C96055B1DE93C4CDE2E12D22B08
D256D613DEF46EFBC45BE43685B0144AFDC37E47EC560D4770613039407E813F
CE5339E177DA5EBEF9EAD14B1F2396FEE1CB05A36BD23A8C59BE95F1967CE198
82CF4CE6147FF3ADEB3E39854B8696DC04C8997BBFB6AB9F373B50F160EED718
43B9EA5A218FE065BC935DCBAA6A2152CED7D78C653E4D3E85B762C8C4F3D3FB
30BE148D4295C793C00FF7767D3C9DA3019F9066FD5AF41A8DB91E659D18F021
A6C150932CF933E538A01FC2334B8AB345CA00FCC15F0C28AC5A885463B1C0FF
932428BDCAC5DBDEDD27BC5081D0A029ED177F7D1B1C0B2544E0913D45547310
B36EE56A56E53AC9AA9D753BFD738991C5CE46E1329F2A60B9C23726113ACEAE
5A6EAC4EE772092C10D6A9C650BDF391F1168B9DED267FDE5F69D29B19233ED4
130D20DF94984970A10BA4F0500313465AFCAA8EACA5EE4681A944FF1D030767
ADFEE9ED0303CF29C11550E5EBEAF0C16FA757218D16DD1D9B0ADAB5213B4F0F
359C59A019B99960D86C0B7054DE539213422AF13AEB835A87F7EF22844AE255
F002DBF8AFA1055BD93FD6E9E687F69753F3DFD949CC125648595F08A3B55C63
F0BE9235DAFA21247C1F5D62E5B6C5A22F460E419B3E98788FF207E233AFCCEA
52A593DDBBA89A6045A97591BCAEEE22BDC60E1E74F651F4A3453C91E4193E4F
4B484AD47605D40D076763311021FC5FE65CCED6F2744E20A84BB201CF66DD1C
8F4BC3E0A6FFD4378703652A6AA45483A0552F5D4526C2E02C8B69D84C9E5723
FE07F72BC37090660C5B49E8882EB7FAD9CB84049B8C2E0701514C0E4FA3C5F0
785A799DD9F1E6BE7C500F34B97F68A42ED5D8B14B49D074FB13143651EC66B5
436D54BDB4AB65B61902630D514AAA7190D5DA7B6D52E5F87DF7E27E155122A1
E9FF2BCC9C58E503C17740F255096510F7607572C2CAB80D3E87A653658F0395
6D786382DE87EAA5E9E062649D14C6F448C41B70CA4851434B9BBD8E48303CC8
D8DB835C0C089098AAFCF365B4485E96A9C9C4E50BC74E43B4E6D836A7850832
78FC7FD658F3153D2A7BB39A6935D0ACFBAEEF071BE238E74784C22080DCD906
6B7C40E884AAA0F61F3B72121001B7DDE5671684AE9AF74B4F0070A883839EE4
45C59D2E6F1F88D8F5685C51A49D5496A6EE772ED594203FC37D2D549770FA9E
3FF391CE17B654019448036DC61318C2044E7DB8E23B9239EBF092F358DFDD1E
58AC7844D99FFBBFF39611F32DC7AD923099EB5E289653FBB12BCC3BB2684EF8
27C408A3EC4588AADFCA97AB917F145B7364A9BC79E95AB51E299D8D269904F0
72B85E8A7579B7827025E9211523C2F918602DD662A58ABAE1573C58F64E00B4
469BCF9EBD005AC84C68EB610AF67292F6754EDA86BB9EEA03D73E2030F8EE55
412B5FCB35CCF79528BF2B9C8623A4341CB7362A9F65CDC18694EB3CB230AABD
88851E40441D29E04736BC83E5FC97AC03B198B4AFA639A6DA91EF8EACE0DD10
B79E4076D45176FBEBA106D0268BF19E00C26DF2955F172225EE93EE47644666
AFDBB7A8231B97A3E146C23041CE5A60FBBA3A1CDB9D1444F6BCFB2984BE7984
46EEC5177B5BB232FABD659F532E4CFF40465DD06D4A683EE9CB42974B439990
BD274FFD6A8A2D337FCD128A128D39EBA872AE9F522296DDF10074B3B4F29005
9FCEF829B64C360D5AD3347DFA51936827B7904734E973FD42C00B0984C93FC7
7B955CAB886DCDF2F0DC64EF2447C529EE08285E200955AE86F639AA66E0125D
437EACF0163D80CE8981BEE284DD61B29D1A4485FC6A56F9468BD27FC5B43A2D
7B3F99DAA346901C85C242046F3455378DAA02A55E2980C0F75157BE45C6AFDC
7013982D6EB24911D27386829C25C06C88F964140AAB4C90211D5329AB926EFD
4C397ACFB134D0A2873916E1EE321C3B024D980D4A5965ABBF98A791636D778D
AF295A7357D6C4C114419BD04B174C9B5846B742A8F663E60F1E730BE87D9498
07B13AF4C860605D588BADEA312F7BC5C329D521B1D5A39DE4178D1BFA4F0162
ED13C095F7B73AD863852F6EC3B1A49E572610C7EA038CF4B904F504642CFD47
5B92A17894756F077749A8F80F0BDDAC3DD0A16050335EE3B76239128E786995
0B227A2BC112984C2ED0A310F71A138301219EF89E29EFDB2B70E64676F88660
178B7B0FD90D3C90EE2B8557D90E7C5A058192076D34EFB582BFD1AA89DFDDFF
65E9B853E9315D6F1A29ED495AF3AF836072ED471DF04A83FB88CCE8ABA657A6
ADFE822D40E023A045D98B645C2143FECFFF5C7774DB00EB9598FF3CE2801FFF
10D184F38C786F5189EAD948A35888F63501225E412E687FD5B99B3F2F5746C7
A6247F7C8E602E32841D44997A7E92E324471A9A4A7F1062066CF520A1EE99E1
50CB1193C353925E5EE1E8617FC91AD09563058F8653A375A7C5659B3C74C492
D7F6A5A0FD2C18FEAF1789725CFECED9BDE77FDE32A13181DDBA016BF0B8F391
43AD3B704CE3A592FF330458E8F6E1B541E63C52A72ABADBB16E911B3E602E39
2D96DE2CBC2A71B13808B25AF98791191B962D60832A35A1A0FE7B5821522B68
A0635F43121884186420ABE61F4165003FE0BF954411714A36FADABCA4CB731E
52BBB831670BE19D7B21C567CC64BE1A36DF67226E73CA99124473DFC80D55B6
F8AF17DBBF27066BF4D2F258FA3B94681F9FE0EA0855979B402CB7381E6C0644
1FAE318812B2DA414FCF75CAB94A96F7B81008E747ACF26571E3B2C14594DED9
10B188D69C01881047466A0368B350EC536F0873F011A3E1B18DBF7655DE569A
DC5089643986EB635B3386E362EC7B8A2010CF75DA4C7AC44373818286552042
7F047D4E7778ABA7522C72A67EC9C9403C57E9C5129523FE417DC1414E8ECC5B
15E9B5C3A0C295D1510ADD011D365BE2C51E72C229DD7CC621728C38BB70A3AD
0E78C5B130887A3405A668FF968B539014942319C94DCB2023EFC0B8D4EB2B01
D5A9F66C4F876E6619CD5D9EA197312B47E96708A6B5372C4868E315470BD761
9AD55960D1149901E8B11A4B4838BF91F9EA7FC5D7EC59DA350242D5C7007AE0
1EF43A784A146ADEA4A55961292BD44AF2DC41F97F21ED1DB3E9D2CF3E662C92
92B8B497348C22AECB0639880C3382F9E85A6037DE6979B1636092FD704AFFBE
DD5CC24A59AE8E9ABE71A47B686447F45D62C58D747E2C3534CE42EE5A34F99A
D86C6BEC994BF8FDCBB91857000109235289938AEE2340AA12BB786CDD7FAF7F
D93F368DD1D17BC1BD3FC40EB7229605912F5F2B5B04D1312714CE0388132587
6BF20CC2FBB3FEFE2564703CC45EBB55B8C0077C2107845147DF0967A2E0D894
C2668BB223022BA9D8A19DAB8D640AF00072C4655389FD8DD6F9ADCD7E5134FD
21839B036AAE26163CACB32F415F7459CB44876CE40626197C4CE3EA756E5A3D
AAEC56E15E6B525597DEF6FE6A5F23081191152C01A7DF2E63C2A22B58A284AF
A22FC46B3883938BB155480A4FF6FB2E46EDF9D9BD5C18C2E5F8ECF12A924BFD
574CE59ED5C3EE2A71EA684C572C03C96417EBB4ABB228BEE064F9EBB05B09BC
D1A2EFE8428746BFF9055B426B1CE9B7F79E4EE60AC3E2C38EE6FACB1880D07F
1308731CC4FFD460A1631B7B48633D0100E851E34CD11B385F1FBC0D30B9931E
01A93A2595512F9ADA081C82BB25ED6C99C9BAF35553E5EE3BE7FDC61D4336EE
AB8E04F77B3FD8F46FD5BAF75730B4AE0AE0E053DE8433B6B117F602C9A6294A
8BD979D0E18E1882C5202FC2CA2920522A4C94DE4D114BC7EC3DAA7BE47741F7
240D52145DF4603049B9088373851A0855F6C418B2525AB9B594F678ED1FE8C1
3B46EEE18C1D6E639E70226647795B6B29E97E12360A0ECAA2D7DBD9CA7BBDDA
09B7BDD68E477BAF861C673A90B6751A8B206143D0134BF52670BB3F4327676B
8C153F0EF062F7495F9D9DA1ADBB8347F29CC7B53873C7CB1A9889DAF8A3F33D
B03C8ABEA374243103C54F4A4CC84D6F57D3007C6DBB2E929ADF2C40726B1EC0
F9D4A34F198FE674525D8BBBD61B2BB33D7534E6119FE42F7817E41F05ACC7E1
6F498A3A00FA5ACF8980A23E89A62142CFD0DA19D3A85C15BE73F5BE65225C38
E0B9D9C7ACD23DC9743621119D843519D0FB7A9BE1E609057E776901598C36BD
8CA4056CF63C5DFE464138AFFF98C387DE4733894EF46C0C1B13860D6C0D3687
127310B61F15D3F92BF0CCEBE96CD3E818555EE9271FA89B438D1D4CDCCEE4E4
A7DD964335FCC634E08E495A4CDFC1F9CBE45876DDBC0DDDECA8A5244AF849C7
BCEA1A0C120A1C8B44C75D9E78062FCE44FC7042A9F6C69595485CE83DD6FC8E
59BD9213144AE9A4CCB1269CC8781929263CAA892AB93871BCEC8B55C960DACD
FB84CDD7BEDD81966C66E0E94227FF4DC1F3AAB930045F07CD60FAA8B62F0E5D
DFBC2E374EBD26AB34AF24964D036AF2A021FCBC9830080C857E92A2614CCA05
073141CD77459A9D33A6C611BEE0304DC92A25B84BF10C2234901FA2DAF0D345
5CBDD171190FAA2059CE1A8CE50A8FA91F9B68A2AE149BDF9C4BF7A3AD8D316B
1451E38907B58D12A11F1B10D5533D4CDFAF1B833AFDB4BBAC2F45E0D9E21685
A6F8C724D8D515C07A32E5A5A56437AE5B8506129E9AAEA996FA94076B301238
A2CEBEFAD20DF4F38BEE8DF7E2EE4C93BC2C94AB7B1D1934894DF0C0ECC6D6B4
73BBEE6293C1BD55B46A57525279C7A680F4AC3984985779B52CBFBF2CE280A6
F9CB3B3A26A43624AB5F523DB325960D3CD33BF15CA0E776EAD954C29319FCF5
3D9C911AEEAB9F744AD4BD0224306DDAEDAF57CAE03ED38DCED849B8B7121155
CC01828F84D0B64A8492B511E5EC3B449FCBD7D49B06AC0E6838711D84CF1A9A
C65724E0E44EADF1C79944E90393AEA15BAC9F35682635F388616499186FCC07
D3ABA2CF401E589A69D026CEB7B33592E1E93B65364DE0860842D433BB758232
B7EFE39642D297EC9C9F658767332937FFAAAC7F346475D2F4658FA4F44A0E1B
5061D7F5E3E363837F1459582B462E9CD2BE7FBBC3F8B93A7743F8782A10BE50
A8D8FCF57A79FF51B60C23CCE854E4B1227F6D473F9756C854866415A26516AD
20497FCFC013605ABA9F968481BE358D799DF62B56EE8D6FABCC3BDCEDF0C0D6
DE52905B69124245F4A2E9FE5CF2F2B1E344FEAF613BE209EEA61C60BD090420
0CDB0792CF315BAFACC1962B0D77BFEC9F62F716A0D8D07099C19D3F8FAC34BC
E17434973DFF998629C21041C567D2C0572BF62DCA04E6721FD2C2FFD56B0EFC
62A8CA860BD110DF5FA30F4144ACA40DB774F03B570D176879F7154DA32717A3
9741E1F826C338B80325E2C4030910BBCC5A6A80FC2809A6905631E179759453
656AC309C04587B5DC6C6BA31CC103B9AF42B5BE4E3F4C41BB69DCD67EB82900
4E4CF8AEAA0596846339DF5006D56BEBE3BA98C84F7AFE5215D2E23C497B78B7
EED0F84DD8F909807E51CDA9CC6338E19D26A746121376F6D871B9FC3FBF06EF
866BDC207E861566E4190E3DD8CE459454C7582A8C0CEB2B7F989092B9DD99C2
22A8853E8A160002B0424E74997091524E8A62509515B1FEF6920B6AB6D9E4F4
8245573C8854C4893827C86536BFEC998452E49EC8F17F0895E42AA15E9C03BC
9388ABF345AA5422721E3871295576F263D44A4542676EA145D5DF33A3EF5FD5
BB7C85B089CA9833124BA3A882BADA474490AF2DC330ACD59348D42EFB190ADE
BC815567FDBAE96F73989D013FB31CB7B479C2DEF21882CA2AEF10A803547710
B174D45FA49C28761933B9831BEF2056861B911CC4065D71AC336E24DDE22A73
2B7632C967ACF87C4507BC54E8C90CA91AFE42967F538E836E6B1D1D19023C76
FA6266C419CCD3675B29DDBC14E325FC09F05F1B62E7C08FE64DBF2CBB674BEB
A3B0B05774B911556F0220B5B8FA36670B125E75F5C0D54167E37CA1A49A7A8B
565A4224F3859BA4BB2386E3A698C125AE6CC4F3EF36A60AB0D3CE3DF27D18D2
C6FCDDCB3031EC89F1DEC272862A5536617781BBE5E2F25201703AE6AB93A467
AE73EFC333228709C15BB0DCD0BB824145C21E270FC43E34F8B5B999CF3F2927
F961E85C282783F67397E35975EC709FE01CF1BA2F9F78AAA52772A46A51D398
662F553BEDCE5B6BA16D5BBE62FEEFB930CE01125F3499357EFD3BCAC371837E
8911F8A5576A8ABFEF07D313E47027658F1EDF6ECC947388D7983862931834E2
BC3C27E50668C91E8175C35E37CC6634EE100CBE4B30F37CFC7C83E9A00F23BE
E68E61EE19AF21360E4CCCB8F2BECEC0A1ECA38CCA61B17C3DE41862EB658F55
8E86CEA33614DEEFBD46B07386A035608BB2F0E95F88EBF84FCA34915EAD9BB0
1F94A39CE6E181A59F538A700406FED25998FA62C6C64CCAE325A96E00F68B08
7DCAA4F725F2C92E224F46E1B2E367844EEC12FA31652B8983EDA58956C7FBE3
884B32BAABD83158C6F2380F8D50C860A109ED4D316211362C47698BC48E4EE8
C16228074A1706AFFC1A01264B14E08EEB7E20DA626772B469E74CDC1DB2F547
F3AEE1477C41BCB357C4366FACF4C2E3B986322233EF0DDA7AAB3E87C7D8CF7F
2319861A408AF69971D4B6DF576FDD2E09DD914993738AFC6673E4A738C80A75
C6F72F8CB238C32A35DB1BE464EA6D99E0312A8C6E9F8FB422B04D28D808292B
8B1162967EBC7E11EA1CEC076A06AE94FD469DC59C54CAB910F3ACE2066C0892
219574481BD80F5257B15ABA8D9A34AE47800CADBCB95A9AD9BAAABC3B2AF9D0
FB2E451E03852DEF24631D4B6165C378F924CAD22E39CDDE625BD78E780A8A2C
B1CF9F508A718DB890D80BD38CBBE1A19F564DFBC0ACFF2B8B096B1D63E460D5
A2CA9E781B39C016C7192805829993D7D1DF1CC6668EDF3F7F06FC7A85C20B83
1DEF1DD05EDB39B9CC8DBB620B93B519D190CD20323501771A46934B50FFAD6D
21E6606E43A436E42F133B8DEBA3F89F4F1B7EDF7DF1D7D17E747E8477FDF22C
D5D9A96DDC5A8369DB80A10C8FCB0883EFF9E0E2C157F928A240D24491DE36BA
9CEACFEDE7207C36D90279E25F1E713D3C7F0C2A2F3104DFD82947E1309112F5
CE7D18F3F6F1DAEBB9D379288B690B467D12FAD66C33527EE5E02228825B188A
107F53E5A1E769CF79A02479D35057154FA408C80CBA3CF96CB03DED1493D516
71E6A2A8772F4B203109A9D2128446664D0154979126B8250DEE10D7E262C70B
A140064275A596CFC403522016F14C9A5F48C4D3071F824D2343C845C5227AFA
E8CBFD5ABC47881281DACEE07B9D64D9CFEB812B02820AAFCDE52CEDA159F4CC
06392EDE25342F3BD086162C04B014F76AF9E8195F56D94020207BD97E69573A
C91A3C6EAACA48B5B70C18DCDF1295A77BAF24AC4EA1FC670A6C59956483040E
FA94729319302ADDBF53AC0208C509DC84CF6CE538ADAA7FC9EA5256DC2A7E16
6E4B6E3AF897232148505805C9ADEC5EA34CAF391B8AC77DEE9DF84E64A41EBB
8EA634F769D839EA676D818587369FE612CE6EA927BE4DD4921D86A386A71066
753811BADD31E1FB2C97F793DBE31D97DB9E085215903931589EF3B4E3617BA6
9E64251E59E64170CDB53B468623317A8C4C7F42F231530B1B3531673D85F994
FC46ADBDBB02B0019ABC0299257F422E6DEBA7B65914892455000C9D2041D1AB
27E513ADDE24520D9BBD3F9501C22B02F223EFBDC0FEB0DFD10DD16F4B9A9DFC
BF794133466148A85D332319B868010FD3A7BEFE77E437E5B0D58C8C418EB913
E5D3E7C288C33DBA568A74A1E6FA1ABAA027FC4B7CFC70BEB396F5ECD763F1CD
7A0D6FCB7F17845B575D0D72C00757C4FF01B5A629518194809E183F6AC294B3
345C4F98796AE86DF0AEE9584EF506DC3D24A2C340762333835CBCDA490C0520
28E46C3745CF8CFCD2840DD3B7CE1F25F664281216AEEF15F144CAECDFC95BD3
4BD1D05D82A1CBDF4886B7052BE681AEFBE758356C51B7271090FECCD43EC32A
AE866E6F2A743C1A040D65E7BF913A51F1F058019AC4CD26BB1B1D70E60E445A
7730027EF1DDA445009CB2912951C6815C84993BE87CE65A1E06FD6BC75B3A01
88B097F8543A1E31E9313086A77A27E8E194F370D7BA285749EF9F4A9AA2733D
F25039E2F3BE90A2D8E56BB70DA5F1BE4C00B0352B488F49AF068706C17E4E02
971A89425F63E4AC20C2307022A16D284DB5871BDEF8E5A806DDFF32FD448BA1
539AD165A5534B3AD05B09FEFA919A2D753ED16E104B4D96A1715F134FE99C76
0808617A2ED71DD266069FE8D550F8C2AEA9DA94DEE5493495FC75806E9A1B0E
158A3B1A36984E4F382FC0D1086C3DEF94B4AC1E01AB43DE6FEF5D44B15537DF
5995BEB33238E76251EE0BA16F6CD8C7F59DB388304D1085872887E1FC83ED6E
D18DE2CF924B2352E17F436AD73B12F6603D5EDD3DA4289387DB492B47301202
DFC6DD8858A8939529DA82C0F8E49A9BB5CC580C461C904B30AE9CDA298C2507
FF297B18429CD31E0F8E8A74781D2E3CA358E64B9D6160A9D224510BF5753E4B
8B57CB6713DFF31F3B1BD96521A3980354F7D13F4384D9AA7FC08A0F8DA79080
B3327616B9341CEB63734F53DEF541283C70CB052D4FA8A91484D39DFB98C129
CD2ED568855FE7347918C8EFB824EA33955EF33D4F8197F45847046B08C80E89
A2A084A64AF9E0FB79BE8F7101427F7171ACB25BBAF1E8C35DD295BD6395901C
BCBF491C337962A7A8BA427E358D23317059F9E130B13A0B5645FDA23AA5EEA4
FE8A349D039B67F53FD7ED7B6C348843C4E6C6ABE0BF193F3B666FEF8EEC1C49
DF5E566436190267C00AE700E841DF724D9EE59BBFEF924543CFA3FF497C9077
AB7A73DCA9C0BBF538A376B4B7384F7FFB21A1E7D22BEC1A8D3053B15AB14D45
E24579927007BAD9C0146D8EC590364D1ABC0A7A8801464051A44FC617A36C45
BC98F77F53651DC9485B8041076C6CBED212CBA5B878B12601FE236BB1267288
E7554FAEC80850B68BA355569F04A905CBA79F33D4680525934891933D81717F
529775A81FAE50DF5E2E4AC2EF06E10B432FFE33F6F9BC4ED3B2FDDDBC34504C
52F49188EFFA170B3256ED6E3372A303B2703EFAF58538A5078B62B397C0291A
F6D5C44EF3ADCD29D3FA34D71789E662B09F4D7AF7A0FAD91286EEBDE222447C
63B4F4E143B4FFADA71962E7C53D7755A717E200702CFEA7414B71930B9A2CD3
77A1F9D5F7E9C41BC5EB0838D5920E49450FC094ADBB1746AD89DE1EAC09E0D3
8757773FD36FADB20D2CA367DF3C9E2F8C401A811FD92FB79906B0BC1D180D21
22C3321EFBC33306BD3DEE5EAD60A7A4BFDAF504554729F026F8ED0F012EF966
F1FB287843CC74FDBC39E94C3DAA1D9D8872120D870B33D3EC1B30FE11BF4069
04A10B7CCD6F37E7CCD18E5292CAB69C5FCA892E46B7EA5990BC307E4299F9A1
05AF9E96ADC9D3830E21F850ED2330119D1CD980DB2BCFE4813C22E68F281003
58B97FEDD707865A4BC3E02B62BE6E59D6086598EC683A1CD81AEC10FDF3A519
F4DA4946CA9BD31F42C2D61ED84B02A64132A3171702D7968E4D24A8D66F60B7
208F9A2885C7C113B4C5CB691023C3DAD5463DA78D8507A83EA7C79E77AB79E6
D30C484B05882CEB08AF64D4C4AA41F8F0B3E0A4C50CA19B407D68439A8E5B5E
00D57D8D0CF914CC0BD0B8B8109EBA03019414434E55E8ABE1B0C467F58539AB
F8A3A8EAA11995D870E78BAA33C7686DF115326536D4735C7EFD0B178D550B58
FF4C9775322950E6372B3C4523B01C9870959DF0F9831297677C49B04920E3CE
4804A6B07EE2B042143FFC28353B48649A634B2FEE4DE3C9587686EA5BD7A0CC
1CF65EDBBFD25E3ECC528AD6DEECFCD5EFF71FA6BECF701CABCF1F5E84398D97
34710E12F784D2800ED461ECA947BC3294765517350C765305DE1634452E8109
7D52CFF61F98DCB4B598DA8AC6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1095
%!FontType1-1.0: SFRM1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1095, tcrm1095, larm1095, lbrm1095, lcrm1095, rxrm1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-188 -320 1445 942}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF0482493852D12053A7904
BF6E144B9488970F220C299E80886366662C1276120E72472BF84082B9EEC729
F7007ECDC5A850C88810EA679DABE81714004E65D938DA9ABDF29C949A52EF02
EDA8451563235D51286E9133FFC7A27067DF0332ED614AC2D4FAB88EC84E6CB9
FAB41C933E84B88097BA8742BC30A81416D1CAA3545F08E2554B28362B99B79E
FC42281922B94604AABAF5F7A9B8E2D9A4358F38F2382EF9544B859D098DF243
034CC475CEDEBF0EDD0A60C907127BB32F7D85A62A44E90B4056D9B4B2FF3A49
786032C6B25794E2C0003C7852C6B0688351FBFC43300FB0B72880BB7B58BB61
3D1064E7D4DDB128A9B38EF7510B7E5F82BDE39489E2D1DF08816781B13836E4
89390F84577F31776FE43A5F94F817A4AA4A698AA4AE84B178FCB65F1B5A5CE1
334417595F6E40849041565BAA497F6E4B8F4305D849128C9A26A98B909EABE9
8F2659189ED27C588ADC7C744712B4D9AD0C5DD25D1233E979DE7F53C5F1C47C
E9DF254086E5EC70EBC6B7E080060BA72F15E6BB75C75011B15B7ABB6BF761DD
428FF1BD688938C75BEABA7DEE2AF49364D2E198FDC7F8FA2313BBE598ED3703
7ECAAA4670BE3A85C693ACA829A5936778BCDCDB38A5981D4CAC8994E2B2F086
26D8793AC1393D49A8F2FE391F0EF8899A7720697B908266F619EAB1AE084905
36AD29AC3992BD3D77682CA8EEC0A297C9D4F167F3D6FE94EE31C80742E74DB2
0331C9E1C649D036DA3B081DEEF6D171EFCA22A3A0D668EE3121032D3A55BDD0
2AEB87D439107FB3778AB0EC59689768D3EC943D49A8EADC779F610C3087689C
19E649571778AF3905B73C16EAED4E185C873186862E2B848A6F7FF06FD50FB9
A3250B8A6B0782FF750829F55C0655D4D6FC707E24F5CE10B99E14ACD4566001
6B380CE26B9807513FDD928653CBC3FF333C089C557483220716BECF3B38AA5D
0433AFF5A5CF19043C6EC4A49FAAAB10ECDA541E143ACCD729EE49779466D11D
A94FAB52C297569731F5BF3AD2E2A68EF8D1C1218D4CAD6021093125A73710FE
E11B6B3B23CD2AD46270F92FB292F30D852DDE60E6818C162254247893637369
C7729F5A4CBAD8D78B07309AEE44069BD87AA928122D1FFF56B8FD5782BA085B
A2213F8816F01183C3CA298E658EE9C13C6350F14A9209DE8A4E08DA6FE245BF
568355677A9DD49EB4DD3686B5BB030C72397BE2798DC546A5040B8F17C5128A
779AABF374DA038B94733191AAF942B6BA35E22B7DEEE932B202E981784A16F8
F33E50BB66F44593DF8DB37452837893CBA42634629F0D64BA7581CF5E966FB5
3D24198F715A9CCAFCF4AD13465DF0D603C48302D7E683BF122B339AEFC509BD
A8400A5A1F19EC6C599E20238CEDDCA78E8314EDC6B44B38419ACFED6D092481
50786DE3383AB03CD116D52E4190353903E41392A1D01A4EE8A4BC53F31E205F
6E13FF42D9E05C483027FFFB98237D8A88F0E9AF05FCF284185DF4F84430F2E5
809E05D69ECAFB6E970CF47EE63D152C91D08CB1F2B597128D999D41E5475852
43A37E9C40B98C34E4C548CB681B4F0CFE0C808A6B7AD79F5426E165D8E117FB
75434FD3280C18757124D4823CFA87DE5DDA61E2B4C57392779188B8B1B8C05D
0A67AF2BCF74B60574111AD8538E5C868CD9A507E82C8FB885FF2A2FB18CDC67
08D9817386472C80FA1D0525852CA7D9F733FBD0822E7A0BF87BEB994EF5BBC6
F11E9AC04682962D485C410574219353816B83F3F1233322EA4807BE9511D8F2
D78AE5FDEE28D416CA830483D8BEB1F5338AFF9EE7A2C46A5A5618FD4CC4B79A
65A3B693B5C418668CFE7FBA284E1BD6ADA158CE5E34B9080416C4F4938658C7
BE3FAC870A28CE055D4D73CA3186CA198CBACA20DF47D2DD3E4F67E65BE2599E
DCD10D0407325DFB284532BAC0CA783402E666543CFB72EFA692DC73480762C5
FB6D70BFFA48734BC752DE3EED3C9B1CF54831588D2E79165C79B067492DA642
C1EF81D9CD3C67631F5ED2AFF6FF3081763DB6547047D43E14A7651140995EBE
154C2A4D81F82F434ED897A1C30FB6A326B4227E74CA9D00012D40CFA38CE640
7BE45B8EBB812C8E77082887B0E0A29E32E05F62318B18F5FF28B9A094473FDF
0C82C2930188C769172BA993B9773098D7B1DE57557F019DF489FBFD9AA018A8
540F2A21850A92EA39B643317D8E25ADD5FD1B8E8FE461B8A93035C200C355FE
14B475F24AB6974E13D88C67515161A40FF157E88C15584BC7A67699D8962AD9
A6CE80D1507A361BF7F77457262FDE6AAE4A8B7760829319C95757E2584B5189
BAEDCD9E573A2B023352069A4FCA1AFC6943CA70287B8D009485AFF1238B359A
02D9A7226FBE0F09E9FA8EE614B49E91FA1C9AB928680D1AD07D3EF225EBD008
5A43DA16F54CF8BA929C5979C11C4DCB6E2A143EC0C99BB754DCDF850B62137C
9745B86DE2C28C4AD035FFA966F401599445B8D890BAB76E5248A3CAF310D961
6FE0C6CE2CEEDBE99A3FD4420C00454E745574255A02CD28BA9E87A2A6A1A9E5
EB376EA8FBD382CE9E7C4BD057364126ADB5ABB29BAB52EB8E57C506CC8CF8D3
A9CB8301D6902DCF90282DEB09D1FD6C79D15D867E142AD6E699337FC0E05251
7CEB71717BC4E232465908E643C31012CDF2078E772217A856F22CF4257C9DCF
EE98A7EFDA898E95F774F783BAC7A203A4A29D079C1327AD276C7EB73FB49851
973828B8BEF905E8FA521F1678786E4543ADE229DACC3FF6DDB82D691CC1E336
BD6FC65597DB9B12C6005B92141397B973A5D7803790D72A65F33BA7437E37FB
588CB75B779B5361C9DE43C7C07939901D2528B53F0CFC302D910C0BD54B04B6
A2A528CF622F023F409A2BB8C16C88585D746C0BD2F8664253B09D5DD8957E95
5D0B861AE407B995E19933C0809CAC9CB99BE834808F467090058FDBAC1AB369
B615D706D85DAB27885183D3B700ECDFEE43E42D956605142993345FDFAA7494
CDF0091BD1FE97601A5DA00675009956CAD657DF714A00F97C03FBFABEF93A26
D784FE55ADF2AFFC5F34783357F86D34F82BF44046CE2FC49F6B623073ABF39E
F522A02073495CA295BE6933B1441A82533BDF29C9AD7137C7F05E70F42C45D2
6F55C136BE718FBC25D1459F04EA286BDE84468B082E9EC509C609B829C596B6
32A6DFA87F1361D058E302DCF5783FD9D4AC55BFB537D839BCFEAB7A17E4831E
3C9D769900193440EA578A31823AC0707CAFE783452A7DD35148E31A42C3E26E
189EEB199A00A378CFE896BC7B9AEE02E05F7C019BC122A6CA13AA87284256E7
975A158CF0204B791D844F1F5869EB317A6D811C66C04293B718EAD6039F8EAF
BDFA9B7C9E021C78560037DF19B15953100566039F59BABFA95C5BF98B9A708B
C7D956560D89C4CBAE6B18BC3B644F01991FA723C5F22B02AB6C7417468813F3
C80D58B99A15CD405F3B2EE5DC58DBF9D63E77D32D89219A778D8C10BAB34894
7E9B286EFD9AAC09E009A968DB1C4EDC17D308D9A231A1B913217A6E30F06C79
0940B4A32B0D0DC0157687AF5B8CBA157587E77B0D275BC02630C6B4D35FB432
5A8F1BA5B48C01335D2871DCD98E97B34437AAD1B718404261224F728990E5B8
04BA7BE16CC0093767DCD47C32A89F94252767A622043D886CC97318FD3A578A
C5E23528D61112F336A8B39AE7B1E3B07AE34521822ED032D6A8107B983B1A5C
792673FD4EE364B2D6232D6EE266358CD2C46EE1ADCD1D69A71EE8489AF6BBFB
FA1E0ED8191D7DE2F5486B8A7280AF3C1B82D63723468FD4D9767A61FC7069A3
1D428F46C102BD7C5633CA49847080B7AF7EC82DC71B57A293856B7881B76F41
1BAEC088EEF89B60553050398E8C71EE3AEFB793B2A86BBA6BA8BBA99AACE0B5
24CA6B3611F7BD528F69682B8E28F6B25297844C1A663BBF1D4F1E111321F27A
9AFB5A70FE8DFDE7F7DC35F4FC44A27C8DDF0015F8DD8E99CEB625B782E6D7CC
034B233A345DAD2D995F20118A8272BD206B57A0A8CB7F3276BC13716A7B5BF8
C5C3DACFAA2DD7725940927893B27361E40CEF625588742BD9D8ACB7A8160564
D3965A1C8A64C0107DB00ED420D35AAC655C26E165D8E117FB75434FD3280C18
77D193E79B19EF02C15D0AB273EAE0E4C161361C97C01E99C910C1E63155BAC0
21806A25A14A65B1434E2BF270693720F02A01A5AD9166CD074FF6977F7A9275
2FB55CDFE8B9DDCC1DB36CD6D67604433E9E75ED639EA991FFF19FB1548383A9
68EA5D22124C4BF2E0E098F2421692912E83AF2E7CD81AEF38D427F50C57C59B
296C0FFD4459C787E720D06628D7255CC1CFFD95F8A7D45E5FCB9A79C291B115
4F466E13BC1F39D6E41D428E7C5BC41DBB8BC8D65ACFA569DF0709204F0D0040
5E649EB90036D6E803D24BDD81593F3426429E5F9C061BBF1F3FAA1BF233AF68
326B2F24D4217C1D6F2A5F3DC8E9097090939E48F8732762B7688381ADD5A98F
6E341DC26BB050BE17C460EEC693C16B00442516718508AFC0B94E1711DCA3E9
524889B70E91ED1E8572AB80A34AAB71640F65A3FD1A2F802907A92F6CCBF2C9
678629915AEA5D922B48420C211DC03840184B3208E79ADB69F558D0AC8FAE1B
3E42AECA556662DF58278B14AD07A99A7F3974B9637A7F749048136D96ED689E
C756B25AAB6EE59E53B499321715A18BF8463FBE95EF1539FE7D5EF4A8CA8A5E
111CCAF5070997CCECD24598127D60F4476B1FB1F78B5B438A21E358726167A5
BA08543D8210C55801263EA2630072210F29D243A5B452379B7C0E156E754BE0
A9DAB88E81AE9C48CCEB164947FA3CA230E9A488EFD0D6F0A23242673B12CB1A
93B70C6550FADDC77BEF739B82244B62614B955E5870E1EDE213B5EDCFE5D7C6
187B119B867189D3E1C9F855DEE33462492893808D6C41A1AF04BBE5057F332B
80B650CC520C7FF8AE88D8AF9E83F1644C3719BCE7B41186FF93B9564AB6A2AE
E0DCDCE6AD1454DFF1C8B4AAE9F2257721A6DB1B9E0DB13DF1000F36D15D428C
093580A31C21AFF8DEFB74112EF1FA850FB3D6C48B33C567CC278B14E3CF5CB0
4E41FFB69D36EBABF7A7291D2E37D63E97E20D32E8A5529369A03D501AC66011
46907D8676C4AFF7176E12C6D9DA4E8533AE56E6549CF86576E0052A0EFE1097
378428AF52D38184F7C0D42E9E10F5D1CFD1B577CDA4DE4F917DCD113CC750B1
A18A7F79A9DD91E97DC91CEAA12A1D15F6029EE2080F148441B1165CCDC8511C
67B478FDA6F2692D84F3BE4B9456A1F59CB6D264578A27324A51DF98A303E71D
F209CDD7D74260290CD899629AD33CBAA7528FB63863F88AD36C39363B44A001
315AEE157B1D13887E2BDC5A51A290CEDF4954D108F79DCCC296009E826E0F37
182C69FC7A4E2121669C6E6C5B432D112F30BADF232AFB3788ABE75D0752DD37
C963A7D4EE0144CF74D866C8428FA690CDAA707CC1B4F6E91182FE8BD84C620B
FDB72E882124E7A76734F256C0B0D1BD0F941499F6F496363CBF85DC3289F615
4F2FC6BEEE64B8F8997CA26000A6EA2D5D2F2940ED5CF02A934CB68433FE348A
DE89B1A0960CD368CA3750908872FA1CAB183250BA953457E94BB33B853A7862
7E7ED5EA0ECEFA45FDCDCA28B8D7FEFC4C645040540CD85D2F9ADB0CA1447C52
A30C9A56515F282602FD48E859A8D4E6D543F2BB348753756337C1B4141AEFC2
5D2B992E69A14BC2C4DC81E7F2B4E1CE6903348CF7B4F906A88362C0605ABD93
19F49BF064CE6E27E4EA6B4AF1897F0F6B2A0119B5772316A2FCAF0BC5CEFAC3
6D12B82B56223A71B89710D743789E435998F8D1AE22FBD52C65EEE3000BA571
6D4C23C75336924514EC0A6A45105B9738CEB5DB0A90713D4646CB913A984107
090BF34BCD05ED2A2261FF18EF1203767D37B33762EF251844D5693B5B5D78CD
C8E075529DB5BD3A8ADD06C60BEF16536ECFE5A4A98D4C04C5F43E6B8E5784A9
F3448E3873FBC7A72249163C166E1322DED12CAAE39E289C19CA5F5949BF12A7
58C3C38D3816323CE98A92DDE20CF1ABFB1EFF2D754D2527389A7E4F473B93F4
68225662434232B4798A5B4F701744A26B570C4ABBD6BD7E243C440FABDBCB5E
FEF310191E2B0758EAF0D36C036FB917C4154F728A9FB16983682A41B1161914
9035240A27C8F93262B6330B972958328C5D9A7F1371490BC7A73A76C30FA433
DD1E26C9DEB76C265EE87BF0C78BD17C233E4418D9A61860BE740448DDF6CE12
70429B2BB48E1288EDB9DC7C607DCC6C3A84D3D4D044C89263702143233DC2F0
9589FEAD427FF7A3D02E59FEA06D99EC8C78B828247250CBD6D6EA9E8F8515AF
B292676D92FBF3CA801B96E542C3FC6E8D2172916AF4B384414FB6984FAF61FE
04CE582BD55C1EAC6346A922178B3C9AF5D78191C6919001D4195EB8DFCD9F75
C3A5113DD05E3CD8A2CB8BF240AFAEC0F233CBF9A86CEC90A5A7090648AA3A0F
6DC1120213DF599D3C625EDA8190AF712DB2E67E467FB37C7A96309E02D3641C
B0C5E9D85B02F63635262C2F1EBD6EAA42C4D9085F046DB06BFF336348ECC3B3
B1CB8B9F1C3F5C60FD2930A58B99CBD648D47CC028F73E0289545AA5BA984F10
5C58A0CA2385F7DEC39372DE576F582F60F9AFD4317AFD49DBC0317AFFD85FA1
A1CF898803F1714C5539935F961B3D0BBDAAE3FEABE7E59C662EC2CB04BDB4FB
E29CC460BCFC958908F37EE3C1E8020AC7214607A445DA29E219125BBE95FA4F
726703D3D574FCA0B9F573504CE5E68A6B433FE0BDA33FCCCC4BF180E50F055F
CA7D47DCEBBC7856F66618C67EED1B247645EDB0EFCE94A6AC6C9D4ED8F730B1
855DAB77A983118E236AF720353827F8475ECEB7C8A56946AD2314D0203DB1BC
7A1FBC8994883C6A9D984799D1317AA60DB4CF732C4EBE0E871939D0287307CC
FFDC27FA986E5EC3B139CA0862496498C32DF1E0221E5FB5023BFF2DBFBCD3D6
43B3E074185562C97E6B6BB98845B8788B6B96C3CFE812554DBC9F11997A8F42
2670A4F09F1F35CD2CD31BEE8EE35EC97CB96B0800D6CA98152A36BF36D2F517
84D216CF9A0259416E3275F986B160C5F7ABB5727BD52D4788B7F1B2F92F0622
8221BE2B99735AD01038BE6688432CB4BA0989A7A0FD2DA13154D4E11826EC6D
1BF0D3D7F69020B67A6D33D091CD034AC704BB734038E34C9DBCDE5B9519EB11
906488BE56D364445E210F9CB59147065CBDBF42C977C0EE614B5D128611D51D
60BC88B84199F67036198FE44E770BD12CCD7A43D684F350A119BCF0331B434E
3349EC411621E2E549F00F59BF602C66224232BB7B867B219A9301C461E2A4BF
70632B91D575030E5339214DDD264FD3CD7E814C73CB15DB4AB762939817F355
C5BF5E4C8E46D4F4A7851EA03255B9ECFB39FAF4632314D2A3B26B2C283A5FC6
11ED44F253BA1C6C088DBD900E6DF59B153AB4FD732DAA64FBFB95A7D0257911
DE1E389CB89E1BB202F158FC5E78E55629228EC140AFB18A6EA1019319E3096F
D8989FC5C093A82202929D51501A4485319261FAEC37FF325840304EEDB6E139
5DD68BE0BC9D7F3B1FA3F4D5B9FAF124465C1E4AACFC12A743C7124777374765
AC7E6D669CEDAA96D6B481727A4FCAEA999DEA79F9758DA5AD5CB45781F3B4DD
28B065C22E160EB74339C799EA804D998595B11B5D7C1C9130332300B9474177
C5E2D69B687526B54DD18F96E8AEE39826C4A214EBA75C98AB0E250316916B56
3CC8E3E3CBEB057D9DCACC5F70504EEE4A803F24148B083F689451BE6D0131B8
66B55C61BB5820B0B6F8D6A08893BB4559C6AC59327EB2EDDC5DA3F10FA419AC
2F519FA7AD5DD48DEBECA01E06026F70984F519BECDAD7912B54E1D63AD89F84
5A4ABC44BA3828DDDB0F1E2275A1642C7AA6688C4F785967EEBBF3E3992EABE0
B2E9A0F95013779F859BED9D5D82CBA55E01B0E98D836493698F9825A1437902
FFA06E1A60A26CED51F1B2FBAA10E9007FA971C311215AE27DE83941DB4D5169
DB538CD7BE94B7DB285BED83213D60C27FB79F1998016EDE1BF93EADB34AF109
5F697821F77CCD728F3C8414FFE9E69EB0869A6F133B5F190BB105C3D897C3A9
B1B520D609A2706CDA6E51FB9A5ECCECE69B1AD12E05BF8FCF306959BA70CDB2
554EF5C23E8CF42DA72B3E5D6AB09DCF3032910DDE601739845B78E019F53283
3D83FCB6472ACEF6FAB2991DF63DD926DE12D88C373A6DC2CFAB9AFDF09C9D25
81295BECA7EACFA1E3D05A213CF4CCDDF342E184BCC24B3A2CD6ADDC9BB1C115
6CBCDAE0DFD3D285554F1A4C4CAC1BFF487C6B6710BCF518C080BF2E81E779AA
4CEE9FD614A2976D8E3739DFC8100F6DC24138163121C63AA4DEC9DDDBFD92B8
68DE43BAE6A0FEB3FF04F3F8C3340087347ED5151C200C4A956DF88054E89C8E
B6DE1D1388CCC86A82188CE782C8C96C4C2FF0999BECF1422EA9FB77DD43CC77
1F1B120D975B9277CE47D49C275E97C2E9A9A6F16A5C09006486D2556472E7DE
B8001AD75392F1911C648C924F59CA016125957185E48A006FE526E612B7F12E
7377183FC5AC1458DFAC5D4AD0C413E0B14202784A6E6CE64D3D8504DF07DFCD
9B962A65FA4313D0663D58214CD0C0886BA59CAF894293C80D65F64AF5B89173
383C90ED66A6DB931DB46E01BDC256801F25694819EA9FDAED9FB4B6D7F8382F
A9827E090D204C722174FFB1D84B1AE6F19334A0C037BB13A6B71675FB0BFF08
22554A2CC7E9161D813DAF5EBE3732482D403D230977103FC577FD91FD63977B
0668E8086EB21246BB51F4ADDBFFBB0576B31883740112194E05A3D794B7D033
6A14E4C08D25A61DB56FE9364998A2FF5918EC67CA58305C441B9DDE92D88DD7
7CB7468A8F314D35D77CB022D606E1C404942C5B7DDD7D399AF35C6C026D29BD
D2AEA4FEC62667D67649FF581B543EC76D0124C9DB2A7629A6B7DA50846C8F8D
3DAD511EF5B45D684776A115BC58F14953AB46244851A08862AEEA610BD2B866
82426033708CF4E14BB39B57816991B24E6581F74FE0DFCBD960FE1F4EDD9059
55CABB9CAEFF660A8FA9604499C185943681708357AE0A20570B2FE8C0AC031B
299C36D800606CA851CD340B342681395650C8C00A83A10DAAB8ED7C5B5A2910
C5A29389D7AE8546A7630D1876FDE9F0CB567524708F1B93EE25456BADC753E6
9D43360DF66CF31E7B4D27FCFA754F772D6E93B7070BAADCE2F9C95A76CD17A4
3EF8348062B3F8D42DE672487EEAB7641E11A5BB060CDAB120A9662627DADA05
82752208AD9D20D185EB32B8672F17CCC2739B160265265393F766B3F3A578EF
CE821DABCD5E0E0D00ED43E67633AC39BCA169B6BBAD9F68D0BEDE7D8F020323
20856A5B740F17D3539DD88E1861775182A02A3BE1064B40431011EBA36001C2
BEEF15BC0EC15C4C44EAFC1F500A35A7DDB35E97C43DFA17B58240EA0427F34A
3E33FF9ACE60547AD5141A2244D970E59D776D76F017BB10A78894C05D8B4FCF
9DDFBBFE900009F02939A2DC1FC9211F039ACDC637FB5B629CAD8E55092CE281
AA5E86B704AA5B6AB106ABEB773EBF7E4DBD278CF6045E36702B3F48124430C8
7CA05642F16AEBD2B0BC12C66312C68E290C7234889D8E869269790E9DA18C71
FD8D0673079AF4627CB90AD629525A5031E331E890C65BDD8E90D65F140B772E
EE5C8CE47CF965402C0C6EA555BA97B9F8022A4F8095BC13EA9339B6DC8E984D
BD786258DF72C8C9C1F2D315C1EDF38051D6A9EC7960ADE83A17787E9506E4C6
E6FE9D67C298FDE8050489C4093FECACC8C1B258E39BFD5D62C58D747E2C3534
CE42EE5A34FC2DE30219B844A303BA7AD6F515BA2467620A58FA4B651FBE6D0B
D114581921663D3A38B0364B225DF289B2E03562C91747F8D59DB9F6433D515D
585A3F9321558D70B556D41FC9C9D9FA06846162A2A86378485C3574026887E5
539F56544B797A8A1652FFD92368528D3A6F960E7FF4F745CE58783B46ED6541
82B05BED179981FB4F7A90529618067C8488CD1BE8D856656281EB2D210E057C
3672632469D8568F819DF9554C1930B3749EB7E5A259CC404617084D75CE65F2
0D70BBEF57295E3C85C3D6FC2BB2A5A272702AEC1D0E139E6D430431AC3E49B6
071264D42B2A454471E87C9F573B373001D829ED664CBD36343730297792F442
EE498596F983045654AF690A09DF047E235B4B64AE52FE4BF4A2360F7296C92B
04760E9C6C61613572DC0CAEE8F954BD7CED3A6048EE3B6A6BF9DB7FBF04107A
870BD23F85BF282644F41D0AF738447AAD871AFDAD087B2E4304E926D766EB60
3E56DB120C5A841CC9BBDC084364581BA053C282E25AFD33DE7F7281F280E21C
90BBBD240BABB8D9FFB9C3E85E53D7B23DFCA0C17CFC605B82B2D44AC5AB0C5E
70DFCA7AF281296564B5AB27BBC9E7DC32E08C8FD14D52B22037060D77D0347B
6BFC738110F09D41CCA0471BA80CF1950165EECE3840FFAEDEE7979DF757694C
B3AF4E340FD6A90469F981B3728A590966A1F07E21DB27FBFDB8CEE6071DE19E
9357AD661CD5F480A7C9E7ECC8B3B01B9B88C659BAD1BAB5DA43979B5A135402
C14674BD79969D967A6B092648DBD1C3E83B7AF86F4EA098108AC7756403F216
51A6668E68D117A490C9429DBE1FFF5E4E8B0C7028CDBE88CE4DFBA19B3E7B63
21FA341B558100D7CDBB4810EDF1926090CBDA0B1D9696D2B0B627E3F9018377
49D09CEB6C7BFA19477F075ADF05D2D4B5705FD8CB0BC0155F3C47F05A497062
1083C7AF50A8B00A4A899C83995F730950E245C5521AAFE2505AA7B354A4F435
F7385BFF7C1FA58CE568964C974F08DD2B0EC41C45706E9BBC637266C882C0AA
B199A2CAD00C1F7BC958C7B556C5822207ED76C7459149B8DCD4277912FA2BF0
762C973132E728EFB64264BCE9A220DFF0F6C95E09E355BB5E29D1958F2DF3A9
3E8C92F7311EA7EB84B6451E53CD7CDE672342B98C8E8E0105AA284B6734688E
B4887BC845E63A5A4D6D963FECC2A75A5BE456F4FDA49C60627C7F8DE193DD53
584E86BBA90479824C5F4393915F5AC9E2301686F8797624292E6D1A5049D278
C4CC00FBB14C0DCAA264ECD10F2A4AF5D01E846A13BF6241784D7319F468E17C
0983FF7ABEF51CB11F1580B25D6B0EA2A4A8D7C0E1A50428F390A9E7BC970692
D640EED85F07DC8270AF90627DC9C640530D10B9A47787806F9F69D5E10CD71D
38532F55D26422533DECD96F02C52E1FA91A1B38BB2B732A1B2FC4B1F942D87F
704E18453AEBBAA476AC2B1D7A26B9FF52B0C1EE0BA788C83F264CD67157D4F9
FD0EF0E3B8B2D4B7BB00CBC0F34F93F9EAB5E6E8535C71A039E7E4A5E5641278
43782BD29EFD34EC545AF1B4C5522B15A07E9ECF4FE4023BAF507246FD35E362
5A47686FBAF2667CD00F03276017DF01B688391D5598D5C19E9F6D9DA7DD0EF8
EA89875F1BA72CAF5502C039ACE0C6CF860C2188B5E5E2ED391D6FCCD2539EDC
3D52BF3D0EAFD00F0398601318781D3FBD147308CCE29D51300C269B2536F37E
FFBECA26290D60FB28D7D835AD3E20CBD88ACA659959F52A1F606410FDAF932B
94999449683FC55E7B2F1ADD3398C12184D509D13BE9F7D4292AB27FDD13ADBB
97002A0117422247B4A2A96A6E72502FF62610F1B237CA4DEB8D097F836634FE
1B2DEB8B0A6B3BBDB8A7BF0BEE6FCD9B2F5DC3B66568E59CB3BC70E1FFBF6BA8
6CC36FB7EB45D8F810CF68759D44DA9CC54A30BBCE59C1C51FC1AFA775E1537E
F69FEAB9A875E9F2E2CB4ED86EA20AF8A0ABC2E7DF0E4C22493CB4836E823A8E
DCD3F3DF7B561FD7515A1E3344EC2F9B354A48713B4E280804016187EC0A2FA9
3CF65FE0F14DAE3A60365A4BC056111C3C8FA727D2F4B4EA37C71466D1E9D927
ADEB992E178EF01E143ACCD729EB3B0B470E9E7439452C19646B93A2E4464CD7
23F513019F185DB76F63A4062D99BDC24108FC0F3A0DDED6E9A53710FEE1E847
3C7DA0D45D0DC8B756DCA4C50C713AB3D5B64EB9881136FABC9898C570BEAAE2
3F0FC75DE2CFA64D8635BC8BA8EE1252CD1B202D306C9AD781A2C5F1549C9260
E7A0C8836BC6574C0C075378E78D26F7707B929FCE694F4A664B52D543699836
7A6FA967A0386536B0AB8DB6351BF489C96AE2F7C83E4103197BE497653A46A7
B860AA860136CBE5BD34E579CED7EB6B950A9F19E1E5B3ED19252541F4A2DF04
DBF511A3BB2F24B41E1EA342E88211E49C15BBB32B7E2A5AF8C3B8B6DF7235D8
69924573D54DAA2D3086A46DFE514E21DEF08811C66BD5618112F32A2F5C12FB
86AC6CCF27146064E84818D9CE49F33AFA3CA306FEC9AFB59BCF2280DC700672
A0F6D27CFB6C53E5EBEE8D0EB24D83B4405F9C4DBAD95818B5ADA86C758E745F
A57085F36F7AC42C4EFBDF0ADC60D56EBEFE7D32779187E42F6A10D784D82EEE
04E9483CF38C1F6ECCD992E9A165BA2C95878225BB946A19E5C7BBFEF0481C1B
3385A0EBB098CF446EEE451C5915527EB8E0BE0D8C70324795007691AFA3425E
CB90ABAEC6F9F812C3AD445193BF8878AB4F18684E8807449B0ED3852DB086B9
2663B9C93187261F5151AFCED1D207DA49BA8573D662A7F38091028DBA6CDEA8
7B0F6618D0D53C3793208EC0A3654EAC3D7F1847D292828B169FC3DDA0BE0C05
C80DDF763154FF88D7C341CF2414A6EBB464931A3C048D9328EA498CCEBB896A
C054E9AA4F3C35DB8AC83D5FC1C94C39503DB16E32D8044688B928203E2A3225
35DB17357090B7721F4D145345D1F6C0F034ADCA9ECD0E37DAA5642ECBFCE2BF
EA33DBB24BA46385F03ADB8E7731183FAAA37E13B1B3B900A389B027434CEF91
05A1282D5C9AE201C72F1965EAC901A37D0D508913BA9FF873875A21E655C012
9882F8211A177D13FA1453DB448E29FD35EBAA2B99C2EDD5A7724A5FE719780B
2D2C878557810A1559523CDFFF0F388DC335EBBD0411E336869B65C965D6911E
8439257570A48D9E8AEB7719DCAEE5454F681582B1C24D95EAA9A52346877976
C12EC32B12D2EB33062C046EE3EE48E79225D5D7C047E298B4CDC14EECCBB7CA
378469512912EEEB0692E4FD09DE4CD347AA984683DB16555F36996638B11E96
C464685D474F592B419B49BF1ECE2120BF3A98E4171EA3247E4386A38A4A2DB6
4FE0234692E5167F82EE005222AA6D225BA8C86597828D6D6DE431823066AEE5
3798681C7BCA4427F286079D9FEB48556D0405DD2FBF77A575F65011FEA13A79
D6C62EFFA90CF8ECD225A46DA5ED77A15D81E319125BBE95FA4F726703D3D574
FCA7024156B06D7ACC7A1E9575D8FF6F8B61A9BD8B131F138BE2AB5D934247F2
DEB90602485C22292EAFD1FD2C1CE501B8CCF101CDC2D18709AF1C5E5BFA1E25
6EE5DAC923CC8B5ACC3506D9665B287EE5B5914FC368A5F8DFE73ECEE5C370A9
7A78A6DFDC872745D5C14D2604E4824D6EC2C87FD59BF4A2992BFA0CE8CE250F
AD72B8A85B7F11B88340BB4B92D3050E94603C1C42DE0C535B2292FC84406D7D
BE4D8232159C00BF64F572191D360D63BE9390488A272D1E12FEA1EDC9F3715A
1BA084AF50B60BE00E52D50CD16C98629C86BD8616CE476C16F091C00E3F6E69
76020EDC2B7DAC6D5B9CF915D9A24350CEAD45ED28327BC107369CFB807306BB
5E7513D0156C77CE0CDD45DFB88473D23A07A9EDBFBC6687B7E22B3EE5D7DAAE
651B76E65313540E666FAB5BF14EA2931D0971BA72EDB0F4C743474905B1E7DF
D42DDF782A33396714E41E24CF3F64DC3AAFE9A8D25004D13E49920C8BEC099E
DE4DCE40322CA56EFC1D1F684B53A76824E0BB5EC020D0EB079DC174D9C93A2C
D63CA29E638C151FB55462A516F74E79A2396E4C040D7FFB2465F0100681E72D
EB346C605D5F8BBCF1E54D395D365C1A48A745A378E3FE5BF5DD3520E50E2642
50ABD13866E9658C1D31ACCC611BB2E7DE18296EE1DFFF50620AB8D76B261204
F818F8F7FA90B72B8B1C12E5338C879CAED4106791BEB923AEFA93C3F0A2A800
9B6A375209EA2CC23B060FF2853B29784AFC3A1D8DB7E6EA57688C97CD7C7C9A
8B80CB8235936573610EE5A48EFCB71AD656C16A0186CBF55205CE0D445E3531
719324C1C752F5D92E03067AAFE4AD91AEFE51938D56ADF59F5C3C81DF24D13A
744CAD69B01DE3F0A59667F95373A54669FF44C8BDCFD0F3A6A58B192E57F19E
2AB9AA33458138BAB27B34A8908A2C0C8B1396BA0A0F3773DE1A7B724238D015
D559E1593E1DF8C19DDC51170A3563B3FFA344651196F757C2BFEAC3DF5CDD3D
51A3B58410D78CA5482BBA454AF00AAFD3B106240C3A8204156631D1321C86D5
019CC2806011CFFE9838E4C542D8B5E3DDCB086045BA2FEE00D7EB653012EA5D
B38F4D1B48071F527443F6E627E4E37E04CFC879DABD78E652C2F30D1EEE0FE5
44E0CF55CF3032EB76701C8148655A15AB12271E6E12FE6FF643B6B833A40C0D
47DEF9ADADE19C73B2AA02AB4B5148BF4DC0767B2A8C5ED8EAF6E6ED879EBB38
2CE463DA520EA2753FF836961013209625EBF1740EEB8528A1EB39F378DD7548
8BD6D2A590388256108F0B6A9A8086548A8FD6D0395E7242E54D4C579AAF814C
1F93701CECB6E6C3DC5A650550509D0BA4BD25495F6E768BD8E13E13381E71EC
5995279731512C9FE920465F5DF622CAE04FC04AF008857DD62FD07AEB71AD5A
8E5C3B71863CEA5E4E540B0CF6859CA7194206A9D82ED97A1D8537555DD2AA76
0AE03F987EF83A4E2E92CBD92E6627729F5AD10CAECF37D6EBE1A7FFB357FD4E
1C334A0D321CF43B5CE79B3C0A8803E7FC657959EF975012B4D5AB738930EB71
6F8AAF88B63591D81401072CA100D46D3E74A00EAE512023003CF3CF29553FE0
7A7A3E3B9AED8D56214814808CA607EB12F345140570BFA639350D7745647FB6
3811D11A3AA7E94F930A139DF2C9EAB90D360D4D0CEFACAEDBA980E447CD866C
DB1530B110535AE44BF02D9181407D74DA8A32867EF1E83499CE6FFFEBB66F78
E2C7B9BA24338B8723DF80E5B89A772C8480DD71CA1AC52516191F8214ECBA86
65186489F9D8A52C0091F2532C4C19976E04B58E74E0DFA916912E04A1FD559F
1C974FC3B578B9CBACE3BF9EEE2FD384EC761615331EFDD67B31D2E85223BD1B
B8C45D78CE03E834580D85181C11CB1CA4ED936E00591F78206C10423CB76B26
5A9F5C6241457830F8D5BA5C2C25DE993BD984F2BF4FBFF484233689194831B4
6490CE0F1C4EF1ED2387628F86466F1E9821878BB5D9C1206128E3277AA8D025
D0C6130BB6B603ED78153E0CFE77D67849E194F29351CEFE78899CE46B900987
5FD1EA958BB8AC0EB9574FC830F5415147549A908C7B29049E17A42068CCE35A
C03C4E58358B7615AB23EE4AC912B6E181059B978DF18F80DCDDCBFB1BAAF487
9364060CC6E39F7180D371C648C27EF746E7FA8E70F3BF002003AB9C8B22018E
762674DAD94E039B760BBB395622E7CC90FA1E850C048DDFF34A7A32743157DF
E9A904DCD7CF994AF8C7DD1FE27461A4AEEE61DD47682F8DBE71625AFA29921A
6B20FD69E9384F92D15CFB983121C213493C7FDFBF9E5D58DA1D3106A52B6C09
0D4BB489DF6DCC84BAE29DC18FB2233A129E3A31E25CD5BC97D92B7EBE643997
87217BC8FDC62B4DAD3AD12EA9CFC3BFA87021485142E07C93D30DA9D450F67B
7FA14894599443244232BB7B867B219A9301C461E2A4B89BFC91D04EF5F48C80
DF2B3904A6D968D16D16D48ED571BB338AAFD9A3CED45628A8D80E4D1E500BB7
6EC2DE8BB22089247B98FF822F4FE24177CF2FEC7E6CDF34968DED861AC668D5
1066B57715E44AC54B45CD24A12FBB6F71728D7CB289CD36634EFB88A68AF8A4
7AC9836AEBFA73C678B067E06E2A19025625EEAEC3150BC98DEBC4C4EBD6F256
B9743E52D94EC0088091C62636823159534F4B588049BA86D273CEEB5632AF3B
F3D89BA53270FD8E621120116AB4C81C1931DCF203A4443FF8033637639E26F1
AC160490E83C03EBC57CC745AAC39F5FB6A40CE07744BFBFBBF763F8C66007D7
E72A81DC4DD5AFAC5242E68D092008451DB0EA2EC419D07B62FFB88A41A772BC
ECC4A90327065B407C655E0DFFBE0AEC72D53CA24CEA8F71E58FD1958999FF76
F23CF17109BCA7E9D9E8040E4E650385FB0397942EF158C0B8D9F9A62B3D758C
2E7D2FB99E6B03BB06E195CDA2C4AE780BBE824682F67BF746E85C1F4FF04D85
86911F73FB7B4EF52147208D9C7FBB46DBA54676F40D5F8D550F8ACC4BE48A61
BFEACE2BD3CB1EC9398900960AA876F32A502CE810C56D0D8BCA957857BBF821
D86237E283FEC794CEDC09F9077349C962323EFEF467E3CF54A375F2A969386F
22CB5C1C487C947835B9210890326D9D0B73DF2AE2CF457CE3C2C449ADCF0219
493B2268F840F62A90114E68ACC86F56DE0C04E64D112014898337FDD1FE54B5
EA44570B7FF9F56D57D97CD117BEDDBCC92269A32FE007777F27D77987E5F7F0
AC057A795976B7AEE4ABE0DCDCE6AD1454DFF1C8B4AAE9F222E6F4C79160207D
978AEF68423F9A4FF38AE2A6CC56606309998AEED7E9E5A3AA5810B362EAB165
03D08FB97D8010B505F836418ED326CB161A51C896786645841C76735855C851
00F73620FC4EEF2476D0BC4F004710AAD1DD616D6B47916329122C3B92BB9602
BEDDF91BD0FE26C2C425E56CC6D3BF9779EA06A7EDA19FF235A1B1D92C9048EB
A1E402C4FE857793BBE642D71C83E14DFB03A770C33F08F563F95D5C1FED40BE
32D14E2BBD056FF702D7262794D1E7E6248B6EDC7F236DEB7CB2779151CD16D3
DED4F1EB8650F2EDAC37B01631F3A0E926766BCE7970C1F67333E1F7F95F6B21
D45961B560D840DD06ABF9515D26FD6AD1F63366AC59949796F0194B491D4256
D95DDBDE5CE57978C0A8CCEB481033310249DCE208BBD9573C7E2A2CDE56BB04
13DA7775B8CF0E77EFE6EB8E5ABEF6320516B77062FF81CB388A15F87C35B9E1
E5A858242AC7138493DB18023AC18B0186FF4507616EEED91D307AA464BC0EF4
742D63A4E89D1838A585862FECBC6532F633A49CB71BC72B43ABE9874EA76689
81B555236A14368F9BEF10EC0C46F4BEF8502ECA8B2F0613D918F414904BB943
CBEA66B80C5D4FEBA843AAC818578EB4A5B628BB042284841A8684BA13A9443E
F623E7D4CB6B92B09CA243950EDC53A47FFDD7D8900084382181261CEAC4C114
FDA640CB3070EA48ABD09BBB634E8FD30A6B82E5855BB6B3D435B17E9D5E82D6
7E0557916CC7BB0BA89A9A8A5CF31891A4684758787EBCCA9473EBEB1009601A
220C7FD24E03637B459EDEF451F35799BCCDFFD73A427A9126A9C09BB6B6680D
EA945FC4E9E1DCB2C2AA2FD7B38C2B5E9D7D5354F92FF3A9698AE84CBE62E6A4
947A77AA3B0C47F6BEC5CF0D588334887B110CC04BB65B787F0CDF6B37AE4795
D8CF4EF71CF5AA3B3CE67AB71E903C1B623455D98A14C64BCF43CD2B834A6D01
EEFB950A0F7AA4E149FF01657ED22632592505882CBA0C9197E2F706979BF743
11BA69FF00A1F8B1B6ADF56F13BD3B5581A0EE53B4F373821467FF1946F2D919
812BE51E77F37B2BC1178BE026FAE3D5B960B22DFFC244C70CBF0014487BE34E
9EF519FB38556595082D5E4E718FC2C74D71B86C3109AFABBA7EBB4340C201F9
710F25023373FF754E7886DC8F047935BA4DC3650F540287D85807DABF39EBA8
AE1455A1FF4C34ADB130C398BD6B4D67989CC3845BC0EDFCF123E6F06A17F8EB
C0B020227032CAB4F56754BB3D041EB092A16569B0835C0A3FB1CAD089355728
AF1BCA396064BF6D7732DB025CC66150E2974CB409866B50BA287866E2379948
9E3EEF71F4FA68D626A9929BF6B8A281AAF47DBF4D2C305337055B9FCF454213
3E0A357923FFFE24EB172AD76D8A58665DC055AB7145875D67E0B4C045EA843F
7FCB8DF07353589C5427FC5AF2EFF5620309096E25F6A36DCEF96F029B6ED8EA
CB2A2D95C8447FFBD258548DF7AE96C43D8193C5E291E7C88CD19408970447B6
3179F6AF0D737D28F608D42D158C53A7C59D30D82130169F4447FE70A04004FF
5687CF71BFAF22241980972C73EA306373C72D63C71DC2A2ABB4BA9465E6D300
10D6CDB3645342CA4763E0D5859F483E83CA5813E3DD34A900644796941EB203
8221B48CC81E25A1A06B40D25455C3AAFCB2F0C17FA995A46D93E568020DFE78
833DB6F9B2E498FE5D8F52BB4A4B7498F7B858C277B70FDB07CBCA49F0011E6E
7DE3A3A2E25B20F4FBFF966728996C650DE5C3AF6B9BB178E6E21F8E6051EBA4
93889126AA38A96F0920C827592B1F13D97F4817E7DE9D0CAEC9E0A6CC364229
7215BAE7758929DA946A7C35AAEA44BEEC73CC2C4A3C64970A34ACDAA0D2BB80
BD7FDD72B36F3C69A32C51F5BA879504C8C972C2CEF816E5F4C9CB80F4EA25EB
8DF42ED0E8D814A0E006D772ACFFA632B630D74AF10FCA4092F94D826DE24134
1731473B4CC6E8FE7E2DBF05D0432ABE8332208653BDF38C14F33CACB89D4EF6
F8F946317964BB02B09A595E43D27B83757F9A26C2BC3ADFECB2980E5AB06BAB
57314EA3C11BF0B4C6D45A9CD8743AAC2A80CCBDC4FE6D419FCDD8190B30D17A
83E13343696B774DAA6638C874E5FDB756BC3C035996DBA77F6871071CCC7741
B8D79AD620FA3575812469F861D58E65555A825FB25FB8F2D26E8BF9A79F0608
FEB8DB0507FF1EF7B8B5F2F2B74D56F3530B55035CFE10B46829EA48B1CE0927
41CDFC696129DE301775F871E6FBA413811285127423F63088FA35D52BEB27D0
D731CE90D789DA5EAE4FA0AFDA5257AA9C5201C684DA4701BD8991CC72CE3782
6663BF8F93FD1BC2DF152747A69A7A474940C4C1D4E92284F2EB02F2EE17D172
3F7597D1151EF0E9FB8AA2C5C89EF6A8C3754E31D5175F2EB2BC6C0E21C823E7
EF19F93F5BDA10710ADDEDF36F9A667C387BFB34E465FBA152F1EA4B72CAF044
BDF6C37B3BE0C5BD445F341F7019E4CD325D5D633284047A5D15E6D14313DDA4
FFC37D2517208CB5DB38EB9ADB6402049DF7F996DBDA080F8187147AEFAECB60
16ED9E9BDEC00180953625A4F40EB4EE8A01E17C8834F707F2B821E323123795
FC14591EEA8BEC31913EE12E5CEEE0D0B5EBBC7CCE410C60F8E22C81D0BD89BF
B76CA3541CFE9D4578BA2BDD02C1A2013F63C471433FF72168A25BE16F0B307B
82A07E4CD82CA72090A755E20D9E1533CCCD0740FD09943EFD9FBAD2DC84C67A
47B7DE08ACBC8ADEBB1F4C4B2D855426841D8D8BF553E0A4D05F550C75A132EF
3970DBEF351B5512D5E439E1EAD78628774EA7477C38A6CE284F2FB7939B30CD
EF43C348410007692645668147E2F74D951740599DED7BBD941C08196EA7AC59
DDEDA9E84710DDC464974EED130BE46DE742D8E1F3AC7056E139F7A85D2BB5ED
F9FB9C71E3975675332F2C51DB1EFC0FCA9AAB483482FD3894D521A67C8212F8
BAB2CC73D4014820C6CFF7FE9DE814290CE88F2E199967C42DC9895D9D9FA56C
7DD34CCC0BAE7098C8F9AD6BD2D6B39B04516B82E46F71035F0CB52F712C70A8
10CC35E6C441F4477AE602AE2821DA548484FB978C583544E7FA7E6612A10A2A
5F73675B949730A40196165F64E65D81FA84AFD2B5FAF80627AB6ACD8B5ED3FF
A25F828F920E0716EB656D603829AF3A1C2CFFEDA73937435985649896036C30
0639FD21BC9F2DE2AB3736C5B3FB33ADCDA10565DDEE46A854D5B03A1A329C99
AE2493DA39AE007C2EAD4187CF26B0F427C2278E8AD89CCB14911BD47928DABF
C38A6A4DCD9B0D0F18E5F3A641815842B3ACF56A30D39448BE6AB1D3C4DAABCA
BC1E7752F0F75D22555B4F96137FE421B53C5FB1C3ED0E477BE6007A66BB1A3D
DFB39091598AA4950A64BEAD30422D2972C602A786A4E78823F17AAC3969BDA9
726C7A8F97912CE322D32426CFFAB09E9CDC296906C6B39F2E3694DF450AE4D3
217955D4D7A1690A037782CB430B8FAFB5D4B2DDC8A0C4BBBAF1F22E65341F6E
A83B37D0D774C3260421C603D44D54300E8A3272C57E217261ABC1392FD59132
23B8FBEFBAB8D1054E924232A6C5DF67F90314011879DD360DB659541686FB63
BBB090749975C982AADB6C5FDBFD88F4C21A973FFE33B028A8A00825E97DA0BD
28C5137C141BCD8338111163BA27E659AF2CE73C2D46C19477FBC593DDE94931
688FDE3CDA67700F1A9DCB7626A1164D588AE4E8462FFD057028F77968FAAD2D
41368B96290E63453A4CC26A4F7AF17B90B1CB8823EBD6FAE47886646B16B7D9
380FBC06DE82A3CD9E8399759F401EE0937D1FA3BC92A0B444FF979FABAEB0E9
63D13AACB52CE04275C273A5B07579D770F9514493406EFF8C7CF442BBF21C97
A8EA4ABE8CD4DD2002EB9F9E9E8A0AA6A03FC813BFA684E6C407A9894385D3A1
7C3D01BF42B2A211EA29668137DD811581BDDD7AC24009736BDF82F219737BE3
4679492E5FF1E05C371442B69701C62865A96B50D9433C053D7A7BFC4B8A54D7
D8052EFFBD7223A7DBA8D25BC912576FDDAC72154DF99599C815478150D221C7
EC7E318AC282B81B64E4AF453FB2EDD9FEE37F38D5A1FC14A919577A8659C81E
C5A5182849F622966B61DCC30F41FECDB73267AE4C19DBE22BFFA28FD1163528
4ED92AA130C5984D0DC97E26483C1DB21211218E9D597FC070C55FDD8E6BDBAA
1B0EEE8F81D9F375FE5AFD3E4FEC21E4C0B82443DB451F31858DC5C1C02D9F6A
46666F2C248FFFF9AF93C2E519FAA00142BE7E2DEC07A1FBFD2A4E5D771CDB46
7BE1984112D907DD994993344A184A59D21A74FC8CFBD0C404F68BAE6A39688D
EADB137D65BA13D1C88F00093D564D9B15BA74219A4A46DD7B02B85DBE022857
5624928846EAC30D1D7324887DADA9FB5C694D0DD3FB34341646285CFAC5374F
17AEAA230E62AC03383062CE8418756FF17F1DBAD130B0E809F32BCA8369775B
A8DFF2532E11B33EC6B6BF5D2C1C690EDC1837B5DE813912FDB9C64B9DF456F8
40CCB37A81C1572294864FCD01EF6F29AF198126E0154BC837C9D92BBE879086
51ED1510BE77D82A88A44A338366C445E0BD4455CCB98BE4CDB408E706D05BC9
B4C16584ADEBDDD6AA6BA963AAFE3285E8BA56EBE69BF21A1C2CF3CC3350ADA4
430CCAD159405C04A6BC0CC2407899EDFC9A5239DBBD3DAD4D4B008A6DA03EAC
7F09FC35883BD351A678A38C75D1ED1C21AD63990BB06D9EF5E3601223615249
C0EE6DEF6365EDF3FDA30906CF08882E479FAD4490C11DDD6B787BA8009CCD36
2C8AB11B6F54886B7A8656D550CDED5BB36276933F150234D5E20917E8DCFB9C
A5F8809B321C29D1231F22C284D3486F47D1279CE34AED61ADBF6EAE55331C44
1A380AE2A57F9E9F1D2B0A799F7BDF38AB3629B67301BA90924BEF2958D9763E
653B954CDD8134F68861FFB532F11F6D3866FA099429C583A4CB73AC9A6E470D
DF633E489065A2ACD6AF5245895DE20F21718BA7ED4411EA7EFAD1FC771C1E06
27B00D8B557BDC43AA95BBDF455A9390729A6F19B2FB987D80AD716D55049BC2
729A21603DE6541E6FCC5009E1655726C7B0D9A75C5F40EDD7E5DFFE0E508B0B
28E2C164CD39EF2074D511B9C65D71F126CFD490171E97B6A54082E6B4493DB0
7705C02A4D2F09B97D4449270928E385309DA064329A3092AEB82399DD0A526B
3AA0009F664C80BF9960D5CD6DAD410E6FAD53C451F4686E5443599059A861FF
991457C4B22922C932225A3C60BEF69C8810A3B04870C7DCEC19FDF8CDF9AF16
B81C9DF66E0C8AB133A776CB44A522E4F37D05767E9C33E56A63A1A1EF08DB2C
AD9E0A4EDCFBB7280D48E5AAF85980498CF68CC285606E1E6DBFBF1A7AC5FCD4
0814128AE72C85346A9849E95DD45794B0562FDDFB0FEE563EDA4351339AB1B4
B7FCA5D463DA4C2031330754DB27977338C8AA52F8F604DDE4D23122EF33A17F
5D892FCE5639D50E684B17D430B81DD3580B8477BEBFEB4DC62A053D3D4DEB50
61070B381067D5EA0E1672FEE8F524F64A94C41D7418B60CCAA792EEEBEF46B7
E6117E0761491B024611E709D4A813F86CDFC4E52D8A71E8980DFDBDDFABC7CF
C150CA10BA75A26BA0400AFB83F11C3233F21A676BFBC6885A80D5C3DADEEE13
7B79833B330DB5BE6E6BD655F0B15740BFEBC888522C825BEB766ED43795AD56
A2C221AD6346462B5D9FCB787541837524B628DF9BA9CBF24C5927B1D5A7A433
524C1FD7DE0F852429A1BF6F4C132CD11818005B3C159C4CAB86AC115CD1A20E
C9786BB736CCC88C283E49918B0D74F6AA41A4FD2ABDCB2536075A2853761AE9
8F65BA31828B65B5DECE2DFF5C0AC271C071B0CD243C09889F64E6FFF5C057B3
A87E2EBF2D4141236E835BF08CB4207A6625C2DCC242B13C0853992EA5471988
DD9C896AA7AF018C7C5F0A93500E9803227D112B2988415F7B878D67DCB9329B
24BBB29A5474BE30C2B6CDBAF34574AE86F4B1AAFCEEF6072F6D641358D02C61
B232D8CB84C2AF38D389EDD25ABAB673AE1B12E073487DA047158182FDACC835
1980089E720CB52341887602CD9CF0ABF641E5AF95823C6DC3B980899B478242
4B8EB23DAD2EF048483FC0563868DD41BBD9766BDD2F53633EE71FB61A2F8F36
72CF45D6CB47773516D0264AB0A967D93CA0CB93D7C0B3E54A51A436653897FD
702D2C4C7FC5C50F40F13F0D391429D65670942BEFF916599A9000C26C69F93F
782AB9BE20EBA3E274CB1927248211038188B8E2EB2260B19176416CF9367983
8DE153281AF896DB08D4F9B445F7727DC6923FAACE692C6C9BE54DF7AAB30C4E
1666410D44ADB618683D2FD0D56D73DB5E886513142C96E0799AF8279BA85F3A
C2A77FFF892F7ECBD340EEA6BEA10E7AD9472A9CA128D14FD5C73DA57C6C6F5E
33333D256C192BBF631802662DE76230679ECB51404BAA437C928248DE2259D4
48FAA1FE4C4F43E6B7DFF3CCAB55E1F317352DAE76BBC94668E3937C73B0E83E
5267FE03C98D3AECFCF4494D573C0947FA33B41A2DC57CA0E8CC5D3E94C19670
846FBB6C45B7424119442941B97C9D664430313B2C2AEF4E605512E0288D8617
E46A354E662303DF207F10231ECFBBE8757DC3B790CE6434A992E81C656F4B5A
4E58CD3AA6EB508B7540FED78B098FA2961B8BC76CA1614BC9F5CCEC50DB0EFA
DDE1992FEDCC90AAEF7E15BC8674A2EA7C636FFAC57EC3592A217881248902FC
D01CBE85BCDD8A45FEF5B485AF009F498504C98D2E381D8A6B228538D7AF5DC7
4413F05B3CED4875CDA27C2F1210390171B3E179D75A248E44134DEDF7401EEA
3B1A4C867F00DE3C0E211FAAE8D88076457A160538E6A63458916A79666ED6DD
0F541EC2AC0FC41DDC2BDE3FB4CE5B12BC51B023FDC1676C3C0CB86F905BA46A
06E7AEABE434E3C0E1F4AC829AB6CE410FF0E7ACA0404C7D915484BA93AA20DF
D71DBA07AAA8CE64696C5EE8AD08D6EC1475B831E1E4D23DBE66563550C09FF8
D6EF3BBA91684B097D5A5E14AB0F82DC9139815B00E89F2E30722AF21629CBBF
51487FE2F46DB3569AA1E5ECD09DA3E95D33917E8FBD3C978B23115100ED807B
91C3B29D5A126770FC06A1B453C9361EF75F93A24C1D8216DCA0347C9FA10A79
FE3D87234B12C35DF6810B4DFBBB6E6EA0E6CA9FD7CD30918C4E965EE2665246
E42DDF7719AC15EA062DA6D80AD9B3D7A7609865910B695F17D482EA96778360
3E523F75C2BEFE81960D69E7403FA8432D0106CF921D1EEF56D81E35DDB18FBB
5C3F03BDB7E75A59C7430FE8A0C20AC08B6D5E73AD9F0166FEA9DA497214F5BE
3472C8B76B252D83CED6E29B2BACEF8C6803C9EDD8A008C81F1D9B7D3664FADB
D1A42FFC36589CDBAF6EED753B98BDB086F0A927E10E0FFE7143CE776FB1FC63
8E0E3AEB9BE6C1FB96FF92298DEED6FAD44097D42049308091AAC243FDA83F5E
0E98D58AB6044ADD9621FB03DD7ED6CAB5041C27A8CDD43307D533CED1D149F7
C979CD870D8CC771B91E9F3656AD07AF2487D3DB84C88A68D5B9F03042D40ACC
75DAFBAD5EBE6B69948A34589CBA3B7CA6FC5A0E1A66EE293C84534BF9E20582
B0DBCF6754CA2CCFE9EBEB938D30E57E6C8B9905EAE4E6E2D632090FC99C6EC6
039B5DC831DD4B8CCD7CEE9EDBC9F08758B6892E84A9541AB17D47281E69556B
4964A07130F23E46972A7456C4652E4574574C3F5614DD89DA3C88B0033B5A69
E7D18884DB9885C1956068ABCC8B393B821B3C95CBE19F9FF91873E89A515EF8
7AAB7F6A0D650BCCBC0CCEE2138A5037EC77CAEB25C13A7A31BC6AC8938E4D22
47820DEF81776231E5CD0E4C45B0D1B1457634953352EEA60FCAF7E787EA00A2
36221102B8E6B2B57BA2A11988F1F84FB34C2B8E2A502EDEAA576ADC4AD8789F
53BCB51D0C479A1ED8C1D63361E399425FA240DB45CBF27E3DB10A28708D3F92
3B735259A6EA40D07E6C1043429A2A617521764B1670A9417D3413769612A5E7
3B8D52FB48AB63B78353F5C3EFA2843B82425005EAE0F495035F7CA02036290B
F88AB80CDC5ADB6D110BCE6B68C16A86673AF4734124560B8DE844B5C8C1F35F
5D2E500EA3415F8552C8ADC8321AF51D05FE20A9DEEC98FC1E70BB27A3480EA3
646346699DADBDD32501642511363627A900D5F85D9425FBFFB3AF85905447AC
B28A82496506D314C17A26F1739060E24DE7537A0E75943BC46A9DE1EAAD9184
1D52EE5D2B2EC97DD405B553E84C5D669C6ABF97A0BF49AF1C4E87AC0E9DD3CC
04448BCD9054BD78DA46F40064DC598F8185F93724701FE285104C7DA5A9998E
CF48A6F6FA5451EBC011A728E1AC99E57EEE436677DACD25A9919C348DA32995
3107A310CC82304074334525E0C21BDB4650E9FC584C94FAFE59BC259EC0C9B8
1C558D9028EEDC491DD2035FD6CE4CF1B03539A5A6F67C6B16A745B32593C2A9
7AFF4FDC257C664146C647B796BC50F3F6EC25E36FE5D265D00CEED807B872E4
5F7AF6AA785D5892E7AEF87F8FB18FC261C09AF0213D64976F6A679438B58A9A
A81E28A6690220AC671713B1C90C4C67CB1E84657F4520982EFC1CB66E5A0D85
B8016B79CAF10F5923868335ED211E220DB65D2D95313769913AAB51511EFAEA
C9C272D87BAD2528CDD10F8DD6D0BB6C293B24C5C99475CA9177DE72973ECD2C
AA15ABDEF48D42A85C10D4EA8AAB19A04E9D6AAB562E65FF65FA47EB49D6728C
D38124F1BEC4277067C9FF8429E76A04B5EFBF9864FE36E3D4266A6BE55804DB
D02B96D1C66CB85C537657C480B2F8AE8BF9456E735A6E99A18B729B2E603004
CDCA7839D57D9943616B915435F969D5B7466A6E6B9F6DD093FAFA81700A3639
1E3F01195DD543E30CD52B0EBF7E81E8A25AB0EB5AC1A8B75F6E77392192B1A7
8704D917FA7EB0DB5CD41D74C0066F9F8345664187D2B5EBC7B4500FCBACD166
453221EFF7FE42709CFC88C8DC9215C9FBD40A43B18DE90EB42AC67A0E32FD75
554B794975B20539CEB3B8E82A49B5737E85B91456B097D40E6BB7EF3CB961B5
A7FCF8A018E1DE8E5A3A9D918530206C7FE5FFCBF5EBDEF88AC3E09C6CB5D43A
39AE7B201C421C6C3FBD771D875EF9E4B18AE90787639AD0D255EE8A51808D00
770633ECA2301E0395F0A30EF07519BCB611E2D35AD0B14753BDAC70714150F5
3EA2971BA810F0548C13FB3DC5EB889C9CB0E3E418A7CA76571ABF4B599C4C54
2A05E24E56AB96A30E6FE8FCD9425FFD9BA083085F74540F2F913AE9D836BBEE
77DC3C229975822274FCF293429FF779E32062952B687D2668A731BFD630DE1C
7D74BA4AE839591FFB3FCD7ECB901FB39EBC50523A7BB5009AB3BB8FF6F4C18D
523C76ADD741281C4F795852073087B6EA60F04B14FD18F425EFA310B30A3427
F7F49DD789B69C0D60DB7D725ED1F74DD4EE5E8174C5C92B5908B70ECEFD27A4
D5463E306CB6EC2F20EAFB8AAFC23324DC2FD7EDD649DCA3C51098A82F6E4965
14823237EAF937B0C2F2F2C1F78886C6FDF227BB76EAAD5EA5FCFF4D95310A4F
225EE70B709FF9E313C0EEF71A0C0B81F5942602B5B03EE2CC04CAE53FEDD2FE
F36FD5C7F945CC9633986BC647AE404DAD2BC6DB72C9487B85D0107B0B353CBD
DE8649311CF6CADB211A68305AF82CE06101903A8DF28B2BD0B6731318F359DB
09E19F8DF3C435A9855A9B0259C714EE9EC767468A2C8A5BAF06DE548581618F
E7BFBF0D53F7C0760A8DAE479B634E8FBCF9314E135FDB1F7977FA25489E1E33
D2D458189669866154A4F2D2A23358E5DBC724548079D8CAB54BE3CCAB738F68
2997022632F2A449D3CA390BB6E76C9CF4F81AD37F522DDA4AC78144A577764D
C86DD2FD092CCC642CBE4F16F8BFE9466304FCD2777EF4582BA4E9ABBC04C450
31D6F29A123A9E451F57786266DBC1ECE8FF9BC8A1B0881CDB0507EC88FF1FB9
E76B2613C87956002EAA118A6AB55AAB0CF6BD8203B654D488BFDCC2EFDB46EB
6A4929B22F058B8AD6CCF3A03A97E5167D60897EE7D62643972D719F88313354
B32E0FB0F52B9EE1788C25D5163FC66D69044E13CEB6D8FEF6F7E2CAE763C613
6B5AF25DA4BD7B439C2F690897A1FE4D44E67A8C7B80B22E7F6BB9E4637DC529
D0A4973ECF85C4A622C33A335F98D1263B23051D7BC6E4A270349247A4E38DDC
A8843AC99CE6D6CE28A2D3478DBDCC6E8374757E82BF59F2DF0CCE102584C504
D36031BE918B5F7F0D305ECA77918220C0CDB7B1B80D457500EFE084599347EF
7749CC14ECDC7E654DD313F19561F32E4881B8BD4AC75E7A7B0A03BC70F6DA2B
90B13B0EA8F40E3A5737756F713ECD1A8D16835F3728276EDF017A323B1AB506
C9DCFD995C9128F1A979A870EAEF6F9A245D58DB518191615079629190BDC9EE
6C9FD7A180DB80D469ECD18ABDB98761FDA308FDB3FD9E96E0C3F3EC8AC17821
961CC8946A0F4F9C612F17E494694F5AEF1CC44C83A77EA7657D1AF77EBE76D3
2413CFBBEF12BA2A468198AE1DD689FD2B4B39D29F669F87ECA55360268316D0
01CD41FD9EF06A0A02196D028FE2460A0196415CB6ABB0D6524CD1E4DCDD8F88
3956E3AD1D7F64868358E44227247CE21B4C31DF425B33D01139A45F8A82F2DC
6E9C8F1E282A2886CB1D07F688203CF5CC8A828E0729C711E50B270BC4CCA6DE
140F23BEECEA3336F6028F3F505B42805FC29C4C767D588BD1A5BBB04BDBE4FB
2A4E399B0A7EFEFF2FADFBF370E7F1F80B21DA27A08781FA813BC1F28C2E6EC0
3A05CDE937D1E7352B06EF55B3D4D9AD17556889907C07BFDA1BD9B5391B3A3C
76127C39FA6C2DD04BCDB07441F35CB584318F68EC054A1B4567BE9038E0BE9E
47B310D01E66660A6E70A71F7EB38C55579E900DD9FEBAC4D12676C26F4E48AC
6E1B5BEB58FE94F0C2D18743638911BAECC208542045CBC9C534D4F906F6A13C
700DD03BE8C590F2586A2B477C02EC4648136E69B7512D9DF5328F7C8DDC80D4
0F0CDC84A6155273E88099A834501F848DB873A7AD321C73C49110D52FFE1069
6417A080C516196319A8115E38D2F3B4605F9B213D8D684F436CA12AF0A715C1
CFDE9A49BE30DC9ED1ADC5B38123BA2B749B7142B68FD64D9D7B3AFD07F0CB81
F6178958D39A8683CA2B8E71BCDA5B9260FCD30E00BAE2513D1A9495B02A8207
BB4A7ACFEFD1E012D6D794D6ECAD90E42AB06099D4E02EA0DCB1249826742F34
702A710CB0E6DB2933044254AAE663F30F8405F22EB67D1CBD730F99237502B8
5197488FF75BC0838DA0B7D176D9456A6C6EADF4C006C8ED12A9F01E8DC33B82
7B178507291998E148B133680D2B3E70CFBB41128688F089EB515E5D2EFB201F
42C51C2CB8E11BDC5FAE8566664AAB787C33D3D423694B90790B8883F96F5CF5
F0F437D6D199626E86007D218FD7D38F798938E356251B862F926515C03E7262
54435866BBB99FEED8B1F4637202C2431A6D70524D73E4972BAA9BABC6140851
020BA1A1D8184A6AD6E0F8150810C56199E453657498F116A5CD942A0DEFB9A8
AF4E1DB427780BB478E4AE1D0AC98707ED2B74153BD8B970FEC3D4B115BF2DB8
35382CBD858DDA14E2553057BAA206395B565E50C6A1AFD710A476587AAF6259
6F7FBB0219AA15CD625E521BB8D618FD631C26A46D4D2EB3A6B5E9288845701B
9B837FEABE56C56061B49379165805EA5D62CF4C4227D4AD282C7803C2BAF243
FD3AD733C672C134459E1682217455E01706959993AEC74E6350236E52D040C8
250C25A7A8D6072092330D515B319B40C0006C9D2AEF6CDD69AE6E6874382189
1BB916B6E3604B8C96E18AD36E08F6EEC2F76ECD205AB4B903B180A19AC8F0B3
A97B07097D1FF0076A651E24B6BFAA0F40B58529666E7ABCB3ACF719A6A8AD73
ACE30AA8B739B3B037C8D858C8E170E734CD3EC17A0A9BF5DD3A283F12EABFC8
31E64439751EE89AF3CD2F33710B05AB3C0227E4B0350C7B42887425A318A286
FBB27700C71BF7E05E8D81235A813BE4DC91D983CAC4A54697DEB3425FE5EF72
8F75D054C461A6B7D2AECDF18159B37C0E9DDC10D42942CD975AB620C5C6706F
8FE48A23933B7F32237D565FD1917333EBA80E1AA9ED56AA477EDD70C6D13548
E0AE4DFB09D06CF82D1033C2578DCBE9636F6CA3CB6E71765318AEA463A4A76E
D5F6427C9361785273BB9B53862F1172DEC60C7F5A62D51974119AFCED0947FD
59138AEA851EF6A8ED4FCC10CF60FFB044BA7B5788BEEFBB9AA7D1CBC21B3574
165C63DBD4BA12A9214DDBEF4952733B71FB34155E248420649DF4FFE98A86BE
65F3471AE16F059441DACA91B46FA9C6CD3C7368806985992D5E4A72A77A5A51
69BE70F8A09552323D76F68AA1CC3B8DA94E4B9FCBCBEA0923C4BB2CBDDFA8CF
9BD9A1C36AB9FEF9778A7081D738A126E7C166BFE558DF015F22045AA38927F6
229106433F277E572ECD5984B96D1AEF44A90F88C11A9A66F9EC9FF080E342FD
20D5BA0CAD5132A7C2CB6665DDA7128247DD1CCC0237110CD37B23287FCB2FA9
348E68AF9CF092F9D4D8DFE065434EEA2060A2F77278ED0E17A7AF7FF2023495
2DAEE5165544978CEA9C3D0F8181C723FF83F0BE9D49EBFFC247C2DA18EFB272
D5C0924687AFB771E457801E75059060B56144259F2F3DB6BD79AE228AA3389E
81C822F0CFF636CA2E9AE2BAC68D920807542F04C2B5DA9172198266A6262483
DC91383B1B4F5E924D174186FB3C533E1084E76297D697900605B6597BDE235B
234BD9306F7B6E8CB4357683070B1F157345FE37346410B60E402F36185E9943
06ED1B7AA3F25B8472278A433AA8AB120D7F1405C871F3AE89BD7E2089956E28
5474C3122013297C21F5F810E92C6C066E336E54A09523BC55D289FB8B803424
F10B27DE496A99FA28D0A1911F115F589AA3539676FB221CA90D979BA7AE37E4
6DAD70C411ECB96D22BFA0C161CDBA22128315FBC2952F2BD3456E4477B48A03
DD873E870269FEE55F79BD9697F8B1269CAC2C6A519571E40633047E148FFA2E
C32267BD47FA82801E0F57FB8F57B19323FC222E0B9E283FB5B6696C88658AF1
2B07DD671FBC36B836ECCAA7EAA99661CD08889EA7DC77A21F9BE7726CC7CB36
44C4768D98119911BD5DA8C2059F3FBE80E2F5954C62E59BD1F8229689AA381D
2CE262AD00E3492F9046D2AB9D99870D559CB8944DB1DE4DE7A44D39043B1FA8
94E297362879C5F3159F40B3780A1F4F50DC0669F8B2C7ED714D1BB52ECBF3C1
D511FFA5E9ABBD980676B77715BAE15FBBE8E1E7EA41F76036439B6CD80A60C3
1E04257E7AA5D272211735D3D526AB7F7D3649ED93B0DC49C3826A4009FFCBB2
4A92ECA7B73D82A71825E370A20CB49A959345EAE75F81EE49C3B594F813B890
DAA2BD13D3A49A03AACDE2DD86A9C9E48537ACFF04DF19DA6105E52E96F8B9CF
16BA859261442806091B6A2861DA11BE8573E23BD8700084B52A9A52EE64AF44
2FB76BD6B8F40690D21CF056DDCBA498E1A8970BED3DF4F56D227AD8204F9C8E
86DFC3EBFD58E95D8A27421993EEE23F570E97E35C1F7644F4FA13A58452BF0B
70AEAD7D874A95C70C0D881BA741081678DD17D01F3D5191D9B4E8F4905EB745
98103276FCF116934E100E921D7ECC5A630B525B86D5585AE9F95F02AD19C4C7
A8E753FB6EC75D3C701ECE2AF5A72AD56832C850D2D3708FFEAA53E463CFC746
5D17B84DD625E5850C4FE6F571D5EE40D9691209DA02D09B71F2BC776293047F
B13B3FF9763A2C5FF36048E4E589F4E20DE255BD84D2B5E3FBD9966842F3567F
2743AC3BEA27C0EDCE7F89CA5F4A523FF4F8654463045E83BA8BF08B8DD2B42C
1E7A5F0E3D5F9BB222E356D0ECCD6F15B5747E865F11E0B245A7A90564CFC730
3BF81938DF304C9DFE0AF9C17984EC54E44944A0B05713C80B6ADA9BDB193A48
D8894C57B307D5140044C302E8E3CC68EC54125A702A67DDFDB3CC34D62B5F92
E3F48930C65C150DC3B9264FD0AB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158278 55380994 1000 600 600 (controle1_5_10_2017.dvi)
@start /Fa 145[31 8[25 31 100[{ T1Encoding ReEncodeFont }3
41.511 /SFRM0500 rf /Fb 22[27 31[41 79[32 2[32 34 24
4[30 34 50 18 2[18 1[30 1[27 1[27 34 30 10[45 9[38 24[30
30 5[18 44[{ T1Encoding ReEncodeFont }21 49.8132 /SFRM0600
rf /Fc 134[38 44 120[{}2 74.7198 /CMMI9 rf /Fd 207[38
48[{ T1Encoding ReEncodeFont }1 74.7198 /SFRM0900 rf
/Fe 198[35 35 35 35 35 35 35 35 35 35 2[24 45[{
 T1Encoding ReEncodeFont }11 66.4176 /SFRM0800 rf /Ff
22[41 115[48 30 37 38 1[46 46 51 74 23 2[28 2[28 41 46
41 1[46 17[69 50[51 28[{ T1Encoding ReEncodeFont }18
90.9091 /SFTI1095 rf /Fg 254[42 42{}2 90.9091 /CMEX10
rf /Fh 205[61 5[91 43[71{}3 90.9091 /CMSY10 rf /Fi 194[71
5[45 2[45 45 45 45 45 4[71 1[35 35 40[{}10 90.9091 /CMR10
rf /Fj 173[66 82[{}1 90.9091 /MSBM10 rf /Fk 193[71 7[71
54[{}2 90.9091 /MSAM10 rf /Fl 204[35 35 35 49[{}3 66.4176
/CMR8 rf /Fm 135[52 17[45 28[40 10[71 1[71 1[25 58[{}6
90.9091 /CMMI10 rf /Fn 135[55 5[43 8[29 3[47 1[46 29[68
14[52 52 52 52 52 52 2[29 4[40 40 40[{ T1Encoding ReEncodeFont }15
90.9091 /SFBX1095 rf /Fo 22[40 40 7[45 103[48 1[48 50
35 36 35 48 50 45 50 75 25 2[25 50 45 28 40 50 40 50
45 13[50 67 2[70 2[56 5[59 61 69 65 3[43 4[25 2[45 45
45 45 45 45 45 45 1[25 30 25 2[35 35 25 10[50 7[50 50
19[{ T1Encoding ReEncodeFont }51 90.9091 /SFRM1095 rf
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray -104 -336 a Fo(F)-8
b(onctions,)32 b(\351v)-5 b(aluation)31 b(\034nale)1894
b(mercredi)31 b(11)g(o)s(ctobre)g(2017)p -104 -298 3969
4 v Black 0 TeXcolorgray -104 -132 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -104 -132 a -104
-132 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -104 -132 a -104 -132 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -104 -132 a -104 -132
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -104 -132 a 0 TeXcolorgray 91 x Fn(Exercice)k(1.)p
0 TeXcolorgray 46 w Fo(Recopier)h(et)h(compl\351ter)g(cette)g
(d\351\034nition)h(du)e(cours)g(:)h(\023)26 b(Soit)36
b Fm(f)46 b Fo(une)36 b(fonction)h(d\351\034nie)g(sur)f(un)107
b Fn(\(2\))-104 72 y Fo(in)m(terv)-5 b(alle)32 b Fm(I)7
b Fo(.)30 b(Dire)h(que)f Fm(f)40 b Fo(est)30 b(d\351croissan)m(te)h
(sur)g Fm(I)37 b Fo(signi\034e)31 b(que)f(p)s(our)g(tous)h(r\351els)f
(.)15 b(.)g(.,)31 b(si)f Fm(x)3108 86 y Fl(1)3173 72
y Fk(6)24 b Fm(x)3320 86 y Fl(2)3360 72 y Fo(,)30 b(alors)h(.)15
b(.)g(.)24 b(\024.)p 0 TeXcolorgray -104 299 a Fn(Exercice)35
b(2.)p 0 TeXcolorgray 46 w Fo(On)30 b(consid\350re)h(la)g(fonction)g
Fm(f)39 b Fo(d\351\034nie)32 b(sur)e Fj(R)g Fo(par)g
Fm(f)10 b Fi(\()p Fm(x)p Fi(\))26 b(=)f(2)p Fm(x)2605
266 y Fl(2)2665 299 y Fh(\000)2765 237 y Fi(1)p 2765
278 46 4 v 2765 361 a(4)2821 299 y Fo(.)1125 b Fn(\(3\))-104
448 y Fo(Calculer)32 b(:)e Fm(f)10 b Fi(\(1\))p Fo(,)31
b Fm(f)10 b Fi(\()p Fh(\000)p Fi(3\))30 b Fo(et)g Fm(f)980
374 y Fg(\000)1031 412 y Fl(3)p 1031 427 36 4 v 1031
479 a(2)1077 374 y Fg(\001)1118 448 y Fo(.)-104 561 y(\()p
Ff(On)i(d\351tail)5 b(ler)-5 b(a)34 b(les)e(c)-5 b(alculs)35
b(et)d(on)g(donner)-5 b(a)33 b(les)g(r)-5 b(\351p)g(onses)34
b(sous)e(forme)h(simpli\034\351)-5 b(e)7 b Fo(\))p 0
TeXcolorgray -104 754 a Fn(Exercice)35 b(3.)p 0 TeXcolorgray
46 w Fo(Soit)27 b Fm(f)37 b Fo(la)27 b(fonction)h(d\351\034nie)g(sur)f
Fj(R)g Fo(par)h Fm(f)10 b Fi(\()p Fm(x)p Fi(\))25 b(=)g(3)p
Fm(x)14 b Fi(+)g(1)p Fo(.)28 b(D\351terminer)g(les)f(\351v)m(en)m
(tuels)i(an)m(t\351c\351den)m(ts)109 b Fn(\(2\))-104
867 y Fo(de)31 b(10)f(par)h Fm(f)10 b Fo(.)p 0 TeXcolorgray
-104 1060 a Fn(Exercice)35 b(4.)p 0 TeXcolorgray 46 w
Fo(Soit)30 b Fm(x)h Fo(un)f(nom)m(bre)i(r\351el.)f(Recopier)g(et)f
(compl\351ter)i(ces)e(\351quiv)-5 b(alences)31 b(a)m(v)m(ec)g(un)g
(ensem)m(ble)h(:)321 b Fn(\(4\))p 0 TeXcolorgray 8 1199
a Fo(1.)p 0 TeXcolorgray 45 w Fm(x)26 b(>)f Fi(0)30 b
Fo(et)h Fm(x)25 b(<)g Fi(3)30 b Fh(,)g Fm(x)c Fh(2)e
Fm(:)15 b(:)g(:)i(:)e(:)g(:)q Fo(.)p 0 TeXcolorgray 8
1337 a(2.)p 0 TeXcolorgray 45 w Fm(x)26 b Fi(=)f(3)30
b Fo(ou)h Fm(x)25 b Fi(=)g(7)30 b Fh(,)g Fm(x)c Fh(2)f
Fm(:)15 b(:)g(:)h(:)f(:)g(:)q Fo(.)p 0 TeXcolorgray 8
1475 a(3.)p 0 TeXcolorgray 45 w Fm(x)26 b(<)f Fh(\000)p
Fi(1)30 b Fo(et)g Fm(x)25 b Fk(>)g Fh(\000)p Fi(3)31
b Fh(,)f Fm(x)25 b Fh(2)g Fm(:)15 b(:)g(:)h(:)f(:)g(:)q
Fo(.)p 0 TeXcolorgray 8 1613 a(4.)p 0 TeXcolorgray 45
w Fm(x)26 b(>)f Fi(0)30 b Fo(et)h Fm(x)25 b Fk(>)g Fi(42)31
b Fh(,)f Fm(x)25 b Fh(2)g Fm(:)15 b(:)g(:)h(:)f(:)g(:)q
Fo(.)p 0 TeXcolorgray -104 1807 a Fn(Exercice)35 b(5.)p
0 TeXcolorgray 46 w Fo(Soit)30 b Fm(f)40 b Fo(la)30 b(fonction)h
(d\351\034nie)h(par)e(la)h(courb)s(e)g(repr\351sen)m(tativ)m(e)h
(ci-dessous.)978 b Fn(\(6\))p 0 TeXcolorgray 0 TeXcolorgray
1172 3094 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   gsave  1. .setopacityalpha
 0.25 SLW 0.25  setgray -142.26364 -113.81091 312.98001 142.26364 0.0
0.0 14.22636 abs 14.22636 abs 1 0 { 0  setgray } 0.0 /Helvetica findfont
0.0 scalefont setfont Grid grestore  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 312.98018  0 -142.26372  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  1  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -142.26372
 312.98018  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-113.81097  def /maxTickline 142.26372  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 2.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  1  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  1  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 142.26372
0.0 -113.81097   /Lineto /lineto load def 1  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   1  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 312.98018
0.0 -142.26372 0.0   /Lineto /lineto load def 1  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   1  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 2.0 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 142.26372  0 -113.81097  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  1  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -113.81097
 142.26372  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-142.26372  def /maxTickline 312.98018  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 2.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  1  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  1  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 142.26372
0.0 -113.81097   /Lineto /lineto load def 1  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   1  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 312.98018
0.0 -142.26372 0.0   /Lineto /lineto load def 1  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   1  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1101 2879 a Fe(1)1101
2643 y(2)1101 2407 y(3)1101 2171 y(4)1077 3352 y(-1)1077
3588 y(-2)1077 3824 y(-3)1077 4061 y(-4)1390 3173 y(1)201
b(2)h(3)f(4)g(5)g(6)h(7)f(8)g(9)184 b(10)-2663 b(-1)-295
b(-2)g(-3)f(-4)h(-5)1172 3094 y
tx@Dict begin  gsave STV CP T /ps@refangle -45  def grestore  end
 1172 3094 a 1172 3094
a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 1172 3094 a 1104 3172 a Fd(0)1172 3094 y
tx@Dict begin  PutEnd  end
 1172 3094
a 1172 3094 a
tx@Dict begin  gsave STV CP T /ps@refangle -45  def grestore  end
 1172 3094 a 1172 3094 a
tx@Dict begin { 312.98018 0.0 } PutCoor PutBegin  end
 1172 3094 a 1099
3156 a Fc(x)1172 3094 y
tx@Dict begin  PutEnd  end
 1172 3094 a 1172 3094 a
tx@Dict begin  gsave STV CP T /ps@refangle -45  def grestore  end
 1172
3094 a 1172 3094 a
tx@Dict begin { 0.0 142.26372 } PutCoor PutBegin  end
 1172 3094 a 1102 3156 a Fc(y)1172
3094 y
tx@Dict begin  PutEnd  end
 1172 3094 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.25 SLW 0.1 0.05 0.5  setrgbcolor  /ArrowA {
moveto } def /ArrowB { } def /ArrowInside { } def    /x -4 def /x1
10 def /dx x1 x sub 499 div def /F@pstplot (3.5*(x-2)*(x+1)/(x^2-3*x+4))
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  499 1 sub { /x x
dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 1.25 SLW 0.1 0.05 0.5  setrgbcolor  1. .setopacityalpha   1 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.0 SLW 0.1 0.05 0.5  setrgbcolor  [ 284.52744
118.42473 -113.81097 56.04498   false NArray  /DS 2.0 2. CLW mul add
2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot
{ moveto gsave 0.8  0.8  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 0 TeXcolorgray
8 4233 a Fo(1.)p 0 TeXcolorgray 45 w(Lire)31 b(graphiquemen)m(t)i
(l'ensem)m(ble)f(de)f(d\351\034nition)g(de)g(la)f(fonction)h
Fm(f)10 b Fo(.)p 0 TeXcolorgray 8 4371 a(2.)p 0 TeXcolorgray
45 w(Donner)31 b(le)g(tableau)g(de)g(v)-5 b(ariations)31
b(de)f(la)h(fonction)g Fm(f)10 b Fo(.)p 0 TeXcolorgray
8 4509 a(3.)p 0 TeXcolorgray 45 w(La)31 b(fonction)g
Fm(f)40 b Fo(admet-elle)32 b(des)e(extrem)m(ums)15 b(?)31
b(Les)f(donner.)p 0 TeXcolorgray 8 4647 a(4.)p 0 TeXcolorgray
45 w(Lire)h(graphiquemen)m(t)i(l'image)f(de)e(3)g(par)h(la)g(fonction)g
Fm(f)10 b Fo(.)p 0 TeXcolorgray 8 4785 a(5.)p 0 TeXcolorgray
45 w(R\351soudre)31 b(graphiquemen)m(t)h(l'\351quation)g
Fm(f)10 b Fi(\()p Fm(x)p Fi(\))25 b(=)g(1)p Fo(.)31 b(En)g(d\351duire)g
(les)f(\351v)m(en)m(tuels)i(an)m(t\351c\351den)m(ts)h(de)d(1)g(par)h
Fm(f)10 b Fo(.)p 0 TeXcolorgray 8 4924 a(6.)p 0 TeXcolorgray
45 w(R\351soudre)31 b(graphiquemen)m(t)h(l'in\351quation)g
Fm(f)10 b Fi(\()p Fm(x)p Fi(\))25 b Fk(6)g Fi(0)p Fo(.)p
0 TeXcolorgray -104 5117 a Fn(Exercice)35 b(6.)p 0 TeXcolorgray
46 w Fo(On)30 b(consid\350re)h(\340)g(nouv)m(eau)g(la)g(fonction)g
Fm(f)39 b Fo(de)31 b(l'exercice)g(2.)1444 b Fn(\(3\))p
0 TeXcolorgray 8 5255 a Fo(1.)p 0 TeXcolorgray 45 w(D\351mon)m(trer)33
b(que)d(p)s(our)g(tout)h(nom)m(bre)h(r\351el)f Fm(x)p
Fo(,)f(on)h(a)f Fm(x)2009 5222 y Fl(2)2074 5255 y Fk(>)24
b Fi(0)p Fo(.)p 0 TeXcolorgray 8 5393 a(2.)p 0 TeXcolorgray
45 w(D\351mon)m(trer)33 b(que)d Fm(f)39 b Fo(admet)31
b(un)g(minim)m(um)h(qu'on)f(pr\351cisera.)p 0 TeXcolorgray
-104 5887 a Fb(vg)2924 b(Lyc\351e)21 b(\311mile)f(Loub)r(et,)f(V)-5
b(alence,)20 b(2)3725 5871 y Fa(nde)3834 5887 y Fb(3)p
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
