%!PS-Adobe-2.0
%%Creator: dvips(k) 5.995 Copyright 2015 Radical Eye Software
%%Title: interro2_10_05_2017.dvi
%%CreationDate: Tue May  9 08:37:04 2017
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: SFRM1095 SFBX1095 CMR10 CMMI10 CMSY10 SFRM0900 CMSY9
%%+ CMR6 CMR8 SFRM0600 SFRM0500
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o interro2_10_05_2017.ps
%+ interro2_10_05_2017.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.05.09:0837
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/07/31
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-circ.pro 0 0
%!
% $Id: pst-circ.pro 3 2007-12-23 16:23:22Z herbert $
%
% PostScript prologue for pst-circ.tex.
% version 0.01 2007-03-23 (hv)
% For distribution, see pstricks.tex.
%
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def 
/ZeroEq { abs 1E-10 lt } bind def /EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub } bind def
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
  { pop pop pop 0 0 }
  {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
  }
  ifelse  } bind def
% END pst-circ.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: cm-super-t1.enc 0 0
% This file is generated from `T1uni.map' and `glyphlist.txt', `gl-other.txt'
%
% LIGKERN hyphen hyphen =: endash ; endash hyphen =: emdash ;
% LIGKERN quoteleft quoteleft =: quotedblleft ;
% LIGKERN quoteright quoteright =: quotedblright ;
% LIGKERN comma comma =: quotedblbase ; less less =: guillemotleft ;
% LIGKERN greater greater =: guillemotright ;
% LIGKERN f f =: ff ; f i =: fi ; f l =: fl ; ff i =: ffi ; ff l =: ffl ;
%
% LIGKERN space {} * ; * {} space ; zero {} * ; * {} zero ;
% LIGKERN one {} * ; * {} one ; two {} * ; * {} two ;
% LIGKERN three {} * ; * {} three ; four {} * ; * {} four ;
% LIGKERN five {} * ; * {} five ; six {} * ; * {} six ;
% LIGKERN seven {} * ; * {} seven ; eight {} * ; * {} eight ;
% LIGKERN nine {} * ; * {} nine ;
%
/T1Encoding [
% 0x00
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
% 0x10
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/afii61664
/perthousandzero % PERTHOUSAND ZERO
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
% 0x20
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
% 0x30
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
% 0x40
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
% 0x50
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
% 0x60
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
% 0x70
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt % HANGING HYPHEN
% 0x80
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
% 0x90
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcommaaccent
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
% 0xA0
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
% 0xB0
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcommaaccent
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
% 0xC0
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
% 0xD0
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/SS % Germandbls
% 0xE0
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
% 0xF0
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls % or /germandbls.alt
] def

%%EndProcSet
%%BeginProcSet: cm-super-ts1.enc 0 0
% This file is generated from `TS1uni.map' and `glyphlist.txt', `gl-other.txt'
/TS1Encoding [
% 0x00
/Grave
/Acute
/Circumflex % ?
/Tilde % ?
/Dieresis
/Hungarumlaut
/Ring % ?
/Caron
/Breve % ?
/Macron
/Dotaccent % ?
/cedilla
/ogonek
/quotesinglbase.ts1
/.notdef
/.notdef
% 0x10
/.notdef
/.notdef
/quotedblbase.ts1
/.notdef
/.notdef
/twelveudash % ?
/threequartersemdash
/afii61664.cap % ?
/arrowleft
/arrowright
/tieaccentlowercase % ?
/tieaccentcapital % ?
/tieaccentlowercase.new % ?
/tieaccentcapital.new % ?
/.notdef
/afii61664.asc % ?
% 0x20
/uni2422
/.notdef
/.notdef
/.notdef
/dollar
/.notdef
/.notdef
/quotesingle
/.notdef
/.notdef
/asteriskmath
/.notdef
/comma
/hyphendbl % ?
/period
/fraction
% 0x30
/zerooldstyle
/oneoldstyle
/twooldstyle
/threeoldstyle
/fouroldstyle
/fiveoldstyle
/sixoldstyle
/sevenoldstyle
/eightoldstyle
/nineoldstyle
/.notdef
/.notdef
/angleleft
/minus
/angleright
/.notdef
% 0x40
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/uni2127
/.notdef
/circle
% 0x50
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/Omega
/.notdef
/.notdef
/.notdef
/uni301A
/.notdef
/uni301B
/arrowup
/arrowdown
% 0x60
/grave.ts1
/.notdef
/born % ?
/divorced % ?
/died % ?
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/leaf % ?
/married % ?
/musicalnote
/.notdef
% 0x70
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/tildelow % ?
/hyphendbl.alt % ?
% 0x80
/breve.ts1
/caron.ts1
/hungarumlaut.ts1
/dblgrave.ts1
/dagger
/daggerdbl
/uni2016
/perthousand
/bullet
/uni2103
/dollaroldstyle
/centoldstyle
/florin
/colonmonetary
/uni20A9
/uni20A6
% 0x90
/guarani % ?
/peso % ?
/lira
/recipe % ?
/uni203D
/gnaborretni % ?
/dong
/trademark
/uni2031
/paragraph.alt % ?
/uni0E3F
/afii61352
/discount % ?
/estimated
/openbullet
/uni2120
% 0xA0
/uni2045
/uni2046
/cent
/sterling
/currency
/yen
/brokenbar
/section
/dieresis.ts1
/copyright
/ordfeminine
/copyleft % ?
/logicalnot
/uni2117
/registered
/macron.ts1
% 0xB0
/degree
/plusminus
/twosuperior
/threesuperior
/acute.ts1
/mu
/paragraph
/periodcentered
/uni203B
/onesuperior
/ordmasculine
/radical
/onequarter
/onehalf
/threequarters
/Euro % or /Euro.alt
% 0xC0
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
% 0xD0
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/multiply
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
% 0xE0
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
% 0xF0
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/divide
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: SFRM0500
%!FontType1-1.0: SFRM0500 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm0500, tcrm0500, larm0500, lbrm0500, lcrm0500, rxrm0500.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM0500 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-211 -338 1855 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B57DF626EBF73D2779A4A6B462AE6E5
19E586FAA5A6FAE6CB4E80BF6467C89E1A97B49A0DDC14A3C22BD6C9A3110530
C714F12B664F8DAF49E7EE5F26A1FB39FB391585B92BC143D8AF7A1DC5828C76
FB778196507F6ED7110C374F71354507E7B06D427EEF72F711D631F86C25A6E9
925C4A2DB93AE4A00FA4C9F8545D5FA4D703130E507323519A405812AA421062
F49FB854B4609D87682D0A4FD3B9BA33B2D25091F366D87C885FF732408D32E7
A8BA8B0AA51E0F13E4A5D7A70070334AE4261F477CA6C958111FAD37A7CCD04C
D8B0CF660CC25C087D9E1DBA8EE4869EA22FC33ED6FBC968D1118422FD213F9E
4DE09D8C881B27E43B46DCCE9E2B7ACCF0FDEC76071C638EFF82CE7140F47015
4989DF72FF5A863C785657413A01FE7D0DFF6DC80111DC022CF3C7527269AE6A
F593356351153315F1988814C6020B73672E573048FAE6EB62D784B055001E59
A19509258D7B194D57F0E5C4C0C66AA7D5D54CBC4EF9E83155978E48D01D7913
0B2216D451B4DD0F51D39287B08047EF0E9553C125E00405138078F533037280
E0EC61CC1EE3A221A96B274A72BDF0145BBD8B3D09DF401AD597FA7054E3D205
CB3483DA30F2E7621DF3F48D108A7B3BF2A4430768F7659478256AACA9317F9B
6FADB8E3E012D2C4CCD0F2BB85BA167774D5427CAEEEC17BC8F508F68AD5FC5B
2DC4ECB93EB18BA078A9E36AE927969D3A3EBCE1CB7C2B075980B6451E534D7D
CCD715EA30EB367961CAAB8E76DB1F329200080EB3739412659725A3E249253C
DB26244CC83A330497398495C3F136A9D6E4007AB3389389663FD46D6C80AFCD
03982615563EDE73605E33B1B0E519149240530C52B8625B50A2FF63325FA62E
76F7045FB77AAA45F1574B9906B4610C16C97EC9C93466FDEF6E41E9FDC847D1
A7FC826CAAA9635A1EF10072593939005142F61809EF49D7C198B927C02675A6
44607478F4AD4A152257FEB6408B04B6111B3770D9D1DD0C6F1D8704969CDE7A
32F8996CA03F642F5DE54E2165E1C01475DC2246C43CA286DFFAC5241015ADA7
C4102DC0100066E14908970B9AF8824628ECBD9E1B33C6C9938B78FC9BB1C805
C51E1A2D296BDF05D292D7F6A5A0FD2C18FEAF1789725CFECEDEADDC389C4E45
02E25B0157964C8C345D7E6DA459F54F6389004BAC5C0B20E59EBC6082FABE25
08EB3B634F656E97438F9B605DE828384EE2B34DA8A960546C2561D8D361B90C
51E0AE25212A52D33A08EC17ACC7C22E06A5D8CC3DF457371FA658A4199ABB5C
36BC967DF98C1B17BA3FF405113F17918DCD399C09D0247C1E89B2A8AEC59A3F
41E2C8B7EAB6BB88A9B65C3239687800B071E8288F1AF5732A5CBFA7B37FE708
5A248C48DD46D9E3EFF6B81FCE5D4EB1EE731847FD050AF0DAF55832342BA4F4
C57BDFE6BD073F2376E44EB97829968ECA4E0CD35AFEAC7BD6A32BC116541818
5517A1647196843C73BA9936EC80F2EA98312A5C98E09AD2608D90FEC2F9C91D
A0DA7DCFA33037F0AC991A9DD7600501B8FBE59C3473A98E06CB648B4023F2CB
37BE4BB58A45B8254495F8862BF21628708C98A1BE0C561289A53EF90CFA34AA
413033CE7E801178FB40CC4C99AEBE3DE4FC7EFC356B116DF444345D2257519F
57701F342C67EE05B6CF0DD8E708355C1C943C64A342974F55929C016914FB7A
7A67BA19A5203A1307077F0AFA72B96B0B3EC6D56DCBEF94CACC518F0BE22F7A
4FB3160C473D6FAEBE77B7C26E175FA8BFA903F17D2E82FFDAE1815203AF1817
30646B5D6DBF430CA68F4D7C4E85BFB031118204544114DB706ED110AD9A3D6C
4DD4BB3ADF55F4C8A7A78AEB5FA4F7B5DFACEE6C0BACA04D67CE6AA4FC6A36A4
51D0FD937886D7ED3F2062C0FB9A5D0825799255C227DA8E320393D40D424BF3
38B19E557E7569F71564F9F0AFEE25C1A759DA7778FFDC310045D90F4FE52124
18FB7458F9F802B57CA0AD1F684ABB249E78366D8E93741A4C1DDC130BB9BC15
6B0C58E975ED942B90C3F2A2248AB6F7FEF0CD8565633F5DCD87B85D0A115382
74C0D8C990211592D6E928AB406DD16C34DCB5DA798010F76FBCD75D6A7CE8BE
5F379D4F36BB1C767358540F98BF7D57FF8C1AF8DEE7C73D21C2EF9BD7AE2C42
4487F79655D92248B512D9929C11653117028A379FA4FA423357628EF05A78F0
3E841887B573C1E165BED94D287C207BA3F799C17BC7F3F368481E40E7D90C33
77584790AF5A8BAD5D996B17F661A123DADFE470069F7013E01828CA3AC791B3
E711F632DCA511240C983B8B3B8E8722B6BEB22D924C473B761DF8EE5BE6E225
C55598BF343A1ADD11CC8733097E65D13F6BB15B45EE9FA75E2CB94C1A948C0A
BBC923323D0B916DDB44D87F7D1CDC27F190B06EC053D712A357E0278A662AD8
9AA556940CD03A5FF4FD9A23AD79BC8009820A9D7383C10F6D914B3E7579E2F0
B5F37758FBFA88369D0D839104DFABE61F4165003FE0BF9544104C2EC5D14C6D
6F457B27AB65FB6F4D40CF9C87603B19F9797120E085C7CFD4CB4274661D9582
E5FDB1DD55C759AB853D4D34771107241DAC1CC3C79A0297F6DF3BA3AE165B61
A169DDC1D006E0430BE615AB2FF44267E134D247848CEE1E283DDBB86F73CE3B
2BEFF110EE0ECC75DF4C6A6A60BE9217C24EEBE0664BCF7008167142F43F542A
62302F8B19C8F7EAE85DAF68E64FB833A5974BBDFA70075A9225B77090FC9326
8653647AD018CA5CDFE029D8155A5A7ACA7B8E12BE8D69A606AD38CCA4777312
BFFB53CC6B32D9D1999D6F90C4DE9D83A08479F3B1E8BCAB1777DA41064F94F1
7A4A1CDC8A14AC86DDAAD910A85D696075B4940B1A7B34C917A08DDDE97D9180
ABA37D2F0405FC314AB457EF84B4CECF5EAF0CAE799CF60EF34EFA245CAA37BA
AC0808FB10315C8C9921B93DE67BA8284879F4F04FAACAD5A17F4876EDAD14C8
CB198BD619F1A79AC9BA473EAC1F8833BB78C3FFAD3540FBA36F93A61934E1CF
5B7E82D101232199F55A7B7AE3B2E133600207A256EAAF61837F4FF9CD6ADA9F
CE763F5B08FBD9B21015A30F225CBB2943FA3190CDB5540149643F2111724889
6FF4EFCCADBDDA29266D238C0E7C800E6370D991BA34676B1A70623D392CB0EE
8C3C475D1F6C5B5B693C1636F456752CA3558BBEEF59606354AD4A6B726C0217
6DF5BA5CFD52ED66918F252747423C9CBDAD9C30E93DB25E64475C22E7952000
36D413CD4316990557A0939B5898ABF14DAFE4CA4729D00D1EFA7E5634C3A62D
8EF40B50A4BC239EBF7CE7DC5954D296971E82F7FC211E1453F193546B3770F1
6E220FD46131B9284891417B54A81B08B5FBE6351C775A2DDEB0E51DD0653924
281F254FC8A135610C3E75682D78AF7495280A63EDFBAC9B5BF5782FF48C2D74
EAF5D173E21ED3A05C0EA432E2C24278F117B96D7FE4D08DD68520C497F7A926
BCFAEFA92D1CBBC4316EB29842A5B72E5EEA0ADA703FCDA71B2F50D23E951D0A
44BCEDA0C4DFE275CF792CB4A48732764C40C3D3D82375A008D38C74B161A800
FDF831DFCBF3816C7A095D6428F6F7703414FACDD0993E654E72028390CE59D5
4CE093669C3DB6EE90E0B7F99B119BFEE6396B6774BA82FCF824907A72492DAB
15267C8AEA3DDB4F8630A197E3928C065A6FE954E0D7B0170E534514F0ED765E
061CDA069C1E3F320297C88600C780BEE103DB6AEAF89AA0764E82699DB69609
A7338FB728B56B22AB4C01AF82C6F9B862736D867D927772803D958E753D56BF
C9D8253D20088D1BEFA38DFED64A77674F90A9F3F62014A59159D28EEB4D51A4
4A20C66E1E7122697E62E4081D5F3269C7B3A2D6F721B4CFBDCCFF1BED30BEAB
890DD6AA6884E9E9D47FEFD2A56C190EB19152E4BBD8688E4C9A891D0DD80A5A
0A010BB54447D16BDC35C3C99A0E81FF6818FD14B9B6D41977104AF92A6EE793
8A36C5AB76A2C1916EE599ECF4C17DCD009BB3E4643D86013978168A44BB075A
EF26AFE67BE1FFC2494E24654B5E115722E3B5982BE1764272E0FB99EF0AFE13
427E0DA7F980561DBCC7D54B1BC1B9AE91F963E1D24F98564BAEEF44057BB151
3B35426515EF069361DB7C74C2741D9AF99C49F1983579A30AAEF5E15A6FBBE4
04E2A5F6FF00D2F662E0281571BF1C68259BB1BB88E64BDFAE35CD5CB56A2DB5
4D66BCF146221638F93B29D9C8157577A68A5F2CE7F880A790CF14F063989F89
7208B777EEBA748F9AB9DBD5C10FF066BB0EC4074A2DA43ACC97D99BFAEFDDE1
D0925A7FE71C5274F606E14399F08141D420A7D171A9B3E3D90FC8F92372C3B9
A5870687BED3ED7AF5D06C23A7B1C0E16F3CAB1FB5AB70C92F1612E2F772E07C
D09E659C502D14884FF032A43817CA2E536208334DBD171724B230CA49F791EE
579801427AEF43834A3B623EE6308B33F865E8C78B03968BBA4454A33CFE7FD1
96C9254B8BF11D2B34E35FB98512F623FCEC960B719C2782BFAC149C2B09B300
D6160544414C1DD16FA343AF06E69BC7A08968C003BE208BA9E14636CDAAAEC4
637F79AB9DC059743E29682DD31C0FDC5CC3CB53564F6C9A4F501AF32FD8B5ED
051965873AB4645892A3032BC29C75B5EB6BD4FEAC5861C134080D23859E7387
C3DE9CDC3C861F663350128178A0F79A5709E2329EC6DA179601DF1348D48E48
DA348FF3D27AE53C4969D45645ECC6B9F49BD4A184B3382D3A886F004E48A987
EE709E7035146CE7A0CF9A7C0270756637C9164C8BE877F68AA9E2F664ADBB2E
BB66CA1F213288B26BC8C3F9F7FB125AC97F952DC8AE62B71C808693E66B33D3
D4FC762880B58DF85D424834BA1C6DF455ED32F1F0507C8A3C1DB49E91FA1C9A
B928680D1AD07D3EF483F53DC1B160F8FF4303657821DA8DD730ADC01B50442E
1D185BC7B7EB89B0BE25E4F55C5C24DB390B13DBE7D33AD85C6A571BDAC4894B
14F43474EE4926E8364817A93238298A7B3D35098C598D327946F9ED347BD4F6
2C080F64B13447815E4D981E86115348F7DF8AC6A6DA34EC67A258CEABC579A8
D808BC1EA137B0B90AA85F50C05092185419AED71F564A1BF732626B6F55C3A0
330EF7F951F35799BCCDFFD73A427A9126A9C76A0F271AB557F5843880349CC7
4C43983B339B1EA97AD1C68EF86B3E728A64E1981F850C02C6203908C0654DE0
42864A1D5AA1A65E99D52BFF26DECBFA3045942DB1C919E0F94FDB120D3E4457
B5539A862C93438EFB345385822D64823A847925921AFF53D813DEA19E78AC27
73FEB605160EB3DF0B3720FF466970B965D0B7381EA1EF0C659555F2ABDC3514
7244290871E8BBCAE2F14C00E308EC630E1834E79873EA3E0B47C3BA14ED403D
1B4EDF0DDEC217336872019CDDD59A11625B6145E19406AEBDAEDB312FAD2335
1607F5C2E7376B7BF06321F4026AADC6D64CD35D907DAE068C755A7D1DCA5D48
CFF737309F2E9FA31C38F01FA6BB929B7D278093A86569A5B8F4E042D1D0DDF0
A49EBEAD19B2E9AE89A65C8FBDBCEE4B905F7287E6C611570C24D2A0C36363A3
B14E0B3ABB8D46C6F19AE914D2E24A596DEF299974B6663A378FFED6820FC2DA
47824B074160730C679A92C31D142D351E0CF1930E183234691D8F4A42F9E8F6
C860B3946D7234C576598D4E425E6518A0A417E91959C5DE9801962A3BE03CA9
6739519E7A5869F375D093E9AE3222D5F968D86FC7A693AE4E6C759D18AF2E68
790A8E264C5D5AD12936EEE94C0B84C00BA51943AFC404C14A6C0F3441CA7080
04964E4582DD5AD548FBC8B92B77DC4B6728315266C0F5724566F3E762FFDD47
92FF706E24C0AF00B88701B58B320496C39BA298EB0A601A94455B2C7E12DBE0
0E91A3DD4CCEB0A322FD7439737BD2D74C3C61C61824D1958E865287A1E57EEB
7775397289B13F3C0D9D6EA10F4F780FBCB40BCF801B371219D3DB3DC55E8808
1808AB8A493BC71FB09322F90D66F6E93AE2E85FB09BD22ED68D1B820362A2C1
AC63C86005E73CF431DBB9F635E4DF768464B5C4BE9E6EE4B257902439CBEA07
91D3A0EE0A5316F9F40FA453C1DD1425A15C887DDC3F530456D6A5598E3E30DA
B29449B42D35388C5D8C26368388DE70920B952D1CBC5E40D2852E8CD9AC588E
2A6C31619F14354D70BACE74C2054B2F0E172C8AC420BD0DA240FDB4B1999A40
DF241505A22078A72A2F43816BDAE9EEB9CBFCD3A83D7C6B5CE58381EF6581C6
ABFCC594D28303614722B9A33EED607789103D70FC7B0C7DD2C8A89BFF0EF2AA
58DA3662289FF129CA0A23C0112734EA50A82A3E16D6B490673720FD6A84B18D
97C290149984F17FD443934CBC9E9025EB1562468422C7704CF4EB34062FA49A
B90AF028658E64F3BCD9391F0BC631AB8362F78A93B8E845191EEEE85CB885D9
CDC33C28FDDF8B550E3E7EC028F73E0289545AA5BA984F105C58A0CC80D7A7DF
0453FB324D770F7112D3543150F87754C6F2A5E26F7440CAB36919BC25948932
9659C3AC03CFA2D6EC42440357B621ACED6ECB6872B5A4EF12D2954DD2D6D1B8
D2337114396B7FAC8EDDD3FAF50DE99070D5D3B0A5A3FAB3255F89CAF1DABBA1
BF5E69BE839B7728FFDF0D51B2F874A2E19614A15C92AA33097B3C7B9818D3B7
D3B7A9C57C6984E8A1310C9AF4FF497D54824DC7429ACD831B00F9708EB1ECB3
581944CCCDBFFB7A8CF23DAE6EB76BD707DA7220F27680F58A154C524663AA05
7BE2C823A4126BDB2D872832CA3B7AABA4E5860851EA4310000966FC750BBD12
87E12BB8B613752A602821B4ADEEBEA1E478EBF5015DA9043C1FC7137647B1CF
44D215C19097657F51EB4333E36F949D9A92E4960AACC2011E842E103CFB1229
24855642A67A99FCCA94BDE4CA0CFC61724687EED3173E67B2924E293DBDA6F1
CAD49D2FF5573283A8D9B404C04C72699732400EDAD7906328F7CBBF38C5C66A
163C7A39715296CD5939B26A068ABABF6798F6EA8EB5F9410D24FB6CBA16B7A8
654B95B35FE54950FFF8882E01A506926FCC96A7B621E8CD0D840054AB340E5B
25A740AA83A53CDFF88ED1ABCC5CD0E715ED9333A1A185DD573AD8350FCEB905
9D0A12F0E358EAB0EBE6B76E576780C1621225A259A61D04E594E6A149CF8CB5
3B48BC458ECB29DB3B12E93E9BFF27EF0108342D68B5C88E5424042A5983E44B
77F361AF2B18BE63F299454F461AE32BF4355F860128995EB7CE8AB4CEA372A4
8C82A681EEBF0FB695968E32C051B376C42D7BE6D5B62B597EF2230BDAB3F002
5F8783A4400CD702B48EE3C53E46C536C34709E5223CEEA0A86C9C89D9BAD324
0D6FF27AF9D54A3CD7A77156ECFCF3C065E7D057944694E7CB6098B0BD07C1AA
8E038B8DF9FA6DE9E1A505C81CC95BC665D78C7CA8B1A71F63EA804BC63FB0EB
6EF5432691C91AD95A28858F39CF27C45923F721194EC0051F70FA13C410FAFA
C56DCBE06F9156A30768599392AEA03F90ECE5DAE3E973D146316BF9BA0AA77B
A40DA8E0AD131F1A67716DC6A07A7C91C1C99ABEFFC56993AB7B2D1F1F6FE286
E7862F6E8D3E1806EF69482015FAF8928B814DF5223B94F37BDF09DD3158A163
E2E0753A66DCE85044D65BFEB8C78DAE2B9C375974F34D058E78A5E2B31D2AA1
EC9C6062832309BF16B8D17F9FF2194B96C0C0446D212BEF4ABC1A7FF088DB3F
1846E41606DD510D2C7D0BE9DD139C9B9961BEED657159198DFC48995AFC77EE
D2D210FB51C9517F1E01E50AD85973E73B3447EEBE6FBC51D8DFC71FC9E98661
DE1C37014DC52E459263815459BA2D699B66449E414B3AFB82E9BAC5CA56F19E
724FC44A1EED5FA28F10A55F99FC6F65A71B56E557371B5C6A817DB4E0D69B3D
F988E4DF9AECB657C8DC04ED4E0B87379DD916618215AE43C04D58988D00402D
F8794B1D73940EF42B7958B39D4D7BE19965A9845BBFD1CFCFD6E038204382D9
9E026DE9307561A0CA750876FD4C64F5B3A864A886A8D7E350753727F8ECC424
EFCFA0DB2EDB45E13804E96C81C132E26F08D3DB7A1CD5A3E4CD9AF5CC4F225C
AB1B0F800B9746BF9282B91F5842FCD0D0FBEF707B8FB92EA58FD6661207C7E9
B6FC7746D687300F90ECEA17F062BE3F57FD2F6DA950B68EF6AF1DD0DC39B8E2
D010486076F4825A0AF1593D3D6592C0788E59485A06EB118283F7907A829EB9
B313B9B76B11A43CFD64DFFDF223A07FFBB71286E8FC1AA09EA7D3C5E553AB89
7E1D4B39958998D5798664FE39FF4B33596101264C75F1C3A742F71DF4962039
87018C30EDFBF4BA558F6FBA61C95548CF5F45CC9BDDDBFFE7E6AC3B8A68C529
8F563EC6DA1F5C2015847725373AFDD25534FE57C583A30090540EDB4956ADE8
30F9CEC9E47617273A11692F6162086CA756BA00EFF2F69E73F8175268820C3B
1B8960CA31C5E10BBE2AAAF25197FB64AD9FC55AB3C2B84306176F7AB7126971
6E972FDB8AD62C98E41501101AF7EB03916D04C885E161DAB614185F16340D86
5A1996E6A6DEECD51F1463A922E378FB7F982ACB149F388742C36BFEF08A6FCB
E2943A5CC2987D4F4F13362D7ADDC3D3BC7DA1EA7D8DE3DB4C880791D8482E9D
9773843607C355FE14B475F24AB6974E13D88C626FAADDE044E3C5A02D6B7493
4E1CA2A19470E3278BE72D0270E12D1DEEDAE0D53E94106BBE5B477C96F71B75
8A6AC0A17AFEF6D76501D740462B21BB06A88DC601CE3DA0A78AE6D8D0B709F1
5E70470AA5B281ECA4092535BFE9FB964000782CB5BF8D4BE40B060C2233D9AE
5D06B7064DDF4364EDCB98FB4A45423F9F4625BFB22EBE875C0E8D393BDC32EA
3DB4AC283C5DB47854302CCC9AB7AFEF434F585F218A1665C6320EFB421D9CB8
9B2FC5F3FC381B2FE8997EC131EC9F3DC89191A056803F9D26AB7BCE976680AD
E652371DD507E715B1E395E1E542F6019415FC62978756D26A0C59CD21A7157A
42654A1A9DB67A8F742F59EE9F3757A3613D69E4FAF9E2C7D0C09F85B53FA64D
D33E517533A8ED0C5C2E15E84E5794B28C88DD46ACD5FF56C766EEDBCF086960
0EA2AE82D3DB145BD2C80500417DC7B7499008C4FC1EA7098B1B93AA05E997D9
C9A692CAFAA72A6A709C68D42D248B449A15DF2E4F2275FE250DA3CDB311CB20
EDD49DBC9095F94F916AB63327FD846D44720EFC9136137E834E01775190640C
827C098C73DECABAA2BB9F74AECF4DF62217946ACE5A1C9CC82CA5E6AE33374A
4F16ECB4FB1CAB6B75CAF210654B1A9D0B3970E155F009E626595875789BC836
FE8BAB7FA82E77EFC996B367BB79E69EEC7FBD973B2B6DFC2770A7D8EDD30119
37B8FAF85749F5F76D18BA91DA8186563C7B36AC7849C9EC825165CEE8D7EFFC
D4773B364FC4D887CBF476FEB4889D9D26DC2FFC5CA2678FCF4727DC836A7213
2D1CA61DA27BCB19B9AAF9846B82FF1F02D2F0A66262BBC6A5466367A223B751
CB40832014D11E9A1D033B0793BCBA9A63D4B451062FBFB68C3B768CC0BA2C59
A79F9010124FFCE47E409F0DBDBAED157D2507B270D928085C40BCD50DCCBF38
AC12D00206B6BC2F9FB5398ED788341CA51BFA6753A26C3186826955A01B47A2
6A3CB87B61FB8D8E25B5BDCD72C3569906C4539B9EFE445BE4B8C7606EC5CF4D
C65CA405E5DFBDC0F22D5DCAB19AF785B6C0EBFC022651EA9305286E320BE4C0
02F68C87C5EDFD5C043A6A93E254921B8B0B30961276EBB0F35BE7F4AA9CE2EA
00D7FF5F01AFB56EEEB1C77982ABB8EE6140B32CE306D5F840E8970BE0144BC8
E1BDAB95497A8970CEF4A3CEADD4EFE91D35DF7679833FFD98AAFA87BCDF729B
56C22E2E5B63F5A34B5C7B9A0C066EE7EABA27D325DF0F65E562648CA69430BC
27D408E890D158291B8EBF9A811A35B4789338531CEA9C31F381797E638F006C
052C76630B40A69C0098E514885C37A18059EC3ACE295613268FEDA546BEE38C
4A5BCDAD888ED4BAA94F5951D428C756B157A590057C76215C21DC2E8014D138
40A391D296B4F65419D9F90D451689A369759AB6480F82F90CD02F460E2C2E7D
293369AAEEB8B2135D6D5C11AFDCB68812634F5EB021EB15B7A26CE0AE7631B5
E2DAFA4C76529E02A585AA57E38AFBB5932BAC1A456FB1E0686A2C291D3E0549
34D4F9101991800124336EAB31789982D566148BB44FA0FAE9BF4FFAA1508421
BAD346F807B86CAD54B9DE2D281B47FD020938E02C1D2610D54EA695186B7341
2392E1CC7C2EE377F334CF6EC42AE09FB8F2078A37DECC1633CCA90237E25D1E
DD0C054762580CF95FC863D5A1E9F9CE271D4EF02C7B3F4693D79C9C46C18A19
8E425634FF7311FA695AFF125468FBAB8559F405E2356C473E158E2A03521AF3
970E6072477C0B90BCD0F1E86970BEAD42A34061F34F83855C0832ED8BBE99AB
D7034520C985BB93CE582C78D45CE0435537BC2F35648BAF1F1DFEC9937F2FC4
91DD351F0EE256CA0F1FF9956FFE7111F40E3808EA55A8208B058DE6FBAF6CD2
75B0FD4C1951C648D1F75FA0C7E46A46B2BF91C4931A003730F15B790D08E288
22E7347A916B4183E49FBA4E0450B7BF4D267B014A25492137965FD1A2148730
352AF582A0C1B3E9BDE84BF5F535410F82355C2A57257ECDEFC79CD3533F8384
2E754D9086BFA19D11CE0782F231D8326FD0633A5EFD2EAD6B369F8BDB82ECEA
94395D64C166797ABD0FDDA0DEEF21582A64AB454981FD0F07389514FE7E49B7
385EE2E22A73C2580EF426EC1A7C688FCF3055B80037BA85ED49D86A5DC04657
AF2CFEF7BD7A358B056DA716700A368865DBEFA5E50207FC94DD6E5B41F5D03A
36410EC69D8AF4A5112AD13B1FE8A9271B428FD286E3584BB89F9F25253FEEE5
F695493B93F468225662434232B4798A5B495E3DE1E98002971E1E8F6BECC774
D5CCF63E842783BDE852A5CD4846E7627C4E51DF8B16E3234052F3014F9B6E27
32EBC81F6BC257517EB9C4125203C8FF1D881F6C47B34BD7A91A4DFBB8CA5ABC
A3387C78E203E2B03A0E2A05CF14D61977508824D328722D6FEBA7C63FFBD250
569E78C70C5EAA1DBBBE119E907CCC13C09A7F01AF160394A467DBA7AF94255F
BF02D7997B7BD8E0D6A70C764B8E444F592B411FC5F685A8D52C7F2CAD73B9DA
3439FCF973C4F22F8A3ED4CA0AD673464FA5B3DEF81972297E16C7309212EF4E
1234E2D9861991C354B46A1AE81878FB693FC8A6CE75C4702CBF0E6741D8BCC9
CB6A6DC57E064B720D7A590105FEB6F0C40612C5BEA35E168F2D8A2C8C066BF6
EB99B521600A5584E6D369590DD9B1E85677D4AD4537BAABC36F78B9C790C18A
FCB5968C0010366723083804C7F9A7525B256291CC92B1DC9DEC00B48A98BC36
1710C6CF862F6D34FCBC7193A93F3AEDB8343A57474BC8E79D37A854D3848E4B
A296E27D7A66202C4F0AC5A9B8CAD7CB4E0BEFAE042437BF1ACC2DEFA87A839D
70015EFA7FFAA12B256EE5767DE6E795FF26C2B74B1501595196184BBD6977D1
5BCF91CFECEDF19E342389D90EDC78717B7BF1A60F4BE92B4AF02005973D8039
1ACFC616FB8D9D7E00F5A884569DF746684239ED3F7C74616B6C7782BF11C905
21E63B94C6D0B1F8B270F61DE04C9E9EC2A214BE6CB518B59E217CE5F72FF6A8
AA6B2C97D8B4DFAADCD9247310B9458B6B7F0524B5410DFC768628E060770499
49C2CC8117B374BF513AF1280237CBE074D111A9FB054EAC869E3C319D8A64D4
F5BD7BBB3754EDF3A82AB3B967D549895AD2EAD722B08FE88611D729ABE047FB
4547FDCA93A13515EF13D1E748D5AFB5D301DC4403A087EAB53B115D3F29F665
C1F035C9E649899F6E821894604DA5047690477A859103CB5CEA1432B9B1158E
5DFC8CA968EA5D22124C4E0711EEEA20769DAA8DD669C3630465995A16EBB580
3ABBECF27C0AAD52F75E9E3A6687364D5EFEC8F31FE0116E502E847F9B9C2799
71446B581332A84C3D18CE04D2388269B2C1C735F6B5DE8797C2D0050C709C5C
9709900E8E943B88680DB34F5D02D46BE055AF5FF933BCEFE389D9C473E0925B
683DEBEFEA6718CCC099B72B68B37C97E610E2D71CED404B9668D1032FE13571
230CA96EC326434CEF9105A1282D5C9AE201C72F196B897066608B3540972516
E89EF389AAAB403F877D7607C278C647B0BA3564C3C5F741EF59C31B4CA1D142
8FA0E147553296D51D4C8E17C5A19790317DAC4604A96808B053B4D7E4036FEB
D5E3BBD5963C615AAD649073565EAB194767E00C463AEBE2BA17C79C794B65B1
0C4E626CEA49A06A63E61EBA1C66553050398E8C71EE3AEFB793B2A86ECC9A20
CA270D52DAA835C2F5AD4A686AD31C292C7E5990FD5EBF2A369760C80B1EB32D
D065CF7FDEEFC4EB905B0C0BA6C712242A5A340A41D3DCE4433D0887A13336F7
479A0D6E66AEE1EB5B155A10640C7DE47E8F285C141F1375478DBB41624E57F1
F0D63E081F6DD1EEED04351AB04308D8BC9DAF2CC5953F23F384C14341D8A12A
491E774EBF6FC475ABBB15A3322AB1C6EA139168F5E866FE4668EF25C04BC9D2
6913CE55BA9EEBCFBE546755821A036D677AD25547888AA1B9C0C78142B90F31
5333168698A10F2490C398AC518CC7FCE39DB3CA9C1496A8BEA1B723D128121F
CA54ACDCC2FD5D15F53B65770B843C23937159495138E4F025A6152FBF212263
1D967DD0B8B58E8E24D022400C1DCB211E820628D55BE970033F40ED720065E5
C2165334CBF577829A5C77E9661739005F023B08F7D87838F62A6CAA01A20DC7
9BDE52BE277FFCB439E6C980326593693FF54006418EE4AD1570F44595901DE3
454925F21AA58102E1D6D8F4804C18FB39B1F784A5F0BF8C67D2CC7455C4A914
FBEEC22D759AB35870C3DF29F96004362D6B0DC62BF0C8348C55ADE90C0069B6
ED90BA08D8A04B1B655B60D215EBB389CD803DA3064F468695A530380AFADF57
549B55DAB5D7251697C4F0628A7B29520B77AA16B866CC56DF2B09AEF45F075D
926BE357AD910B4226247D45141AD506661CFB72E3EBBD5CA2346C701161CF8F
45162457521F31F8E710D1055A5F8A50C2841B63B9AF7C7859A6D73162A8D8F8
5F0EC04A5ACB7071A60DE4E928523F825DA8B323B01BB50ED46CF009FC101F81
33C3902F0EA39A679D879FCEE3756BC21B5F88E9B87E035EBD28B8F67585A228
1312DE9D49289F9FA56B907D4E496BB4EC03B78E7A8335931A5FA25F03989152
91EEF5D99C4E287BDC2339AF2CA05493E8FE4A623C0FF2C390F40E318DEB7478
8E6C283C6CDDA24A62AC673985CE804E119E30EB552DF630CFB2DC8313F060F5
CC88725F37CD59FAB1B8BA902ABC949F1A048433A91BF56096D56D46F2726A22
4BDBF813124FA95DCB0147DFC3307E856186CF1BA6EB7BB45146848E254DFEBD
7AD2CC21BA8EBA1D4B6247EB1B3C7935C2190728B94C3FDD8C754C60E6063BBA
A8B6AAA751ABFE802349FAAB0EF5E3B17779E029BE748CEF76158231CA2835E4
B89514C3E1A90B40B2337BD16D60007B8D3DD2538395C0E2E2EAB9CE383B7C5F
B13228D480A07DFDE76E95B7DB8AF11CCBF5207C6B088F841B14AC51A6B584E6
F9473CE6962323963F7F0BDECBC4569AAC2507CF2EF1FE6B1B7A5D441AB9220C
EAAE542E4F0B3933234DE31EF63CF58A03F07FBF5A818B467A110AF2B0D9A4E2
DCECFD566DD137FD5141595EC251DF1EDC747C51AF4685422AE2CAB82ACB5BDF
CA3D338D87D5B02C7DDD97B70DF6AE8B509D9652FFD7F2132814EA42C4153336
D5FA95DE25B164F92ECAD1BF6D62F338EE1159162D797B148B8942891228AA70
D2B8217522B96396E29C438F41253D3B0B5645FD12419224B691FB11A6404D8A
5AFE184EBA57748E1243084ECD38A0E1DCF2E781553AD92A7EDEC8B2E936E493
C394D28303614722B9A33EED6077891786683AE3F55E4CF016528A13979E564E
771621EFAFEE782C2E5A23B2CD707A6A4F3549C34E00F97E97D2CB5C49EB6EF8
63A81473636120A36120CDDF47B8158D9E0A1625EAD60A69C1BE7493CB2F491E
D94B4CDB4DC8441C334A0D321CF43B5CE79B3C0A8803E7F82B2819A3942F257E
38E82C359BF2EEDCFE744DD4FB37D6E7761DF73E1809D2949244301A62E47FF0
B741B4B256E229329FBD45F6589A63E31185339D7A5F655AB0968CF669366F9C
EE7DBBB9CCCC90B8843B29AE98D01AABE628A4C9DAF1CFCED2D5582D4347BBE4
DED401A585F7942278DC6ABDA33BBD6A558FA5EAD5E23ACCE673604D21AC61A7
0F5944D260CBC86AB70824B87C47EA53A81AE4FC52C46F80FAF63A6C181536F6
3EE410A0253444804882A2CF152B6949383B5B144F553ED6C4E11F01A8FC1D6F
293EEFA2B2C822BA7A8058A159650D5793750BB5D0D6EF816AFA4869D539242C
2CC6BFCFA8BF4737A8E8AAC9298CABF7E237E04092C68C1EC4A20763CE3826CA
18400E0BF4A1A27246FEEA876A3AAD2947EF117AFA0B61A9B6A7E201923F7D90
3654C4992EA47CC5B2ADE77D79E47029E40C4B5B596817F231D26A087035DE07
E515B341248C5EC3CC2B851F262522B364135420ABC88DB06E31E491B927C026
75A644607478F4AD4A152253AA4339F0697807C7933E921AFC4028F57C8A9EEE
80F870F114FF4010102B4387AB3C13DBB86CBA833176323D1EA2402B20E1C4EE
2A11F42E4327DA0FBA34901D53F6E6B223C3DFFD893585F22CFD765A69F32289
D8824AD5C08B62BE72FCC169B466DAE292D82293077C69F4DC7E03FD7A02F465
D1AD49414FFBC209C1C68063DAB0E8784A5B2BD8E5CCAA7E81E8A25A16DCFD32
5D6FAAC3C5346B3298B970AFCCCFA9B30FAE7F4A952D09659B208D107C8CDC57
CD73B15C52008C68A3F9F233B921509D3B2C09E451C0BED6BC7D991EA721964E
9EBEFCA6F34D79C337161BDC06BC1E7868BE5BC495AA4625A4E44A2447EAC2FE
09AF84225F8E35DAD8E608716F4F5F31B45AB4B5D0A179C0582A7F2C0020ACEB
3610ACB548D6D621705A2CC299B2714EC637724FEBFC2C90381236C47E47A170
6AA817CE3DAB393984BFEE7C64ED51B18E590A132E2CDB9F75B17B2F16E43F5E
21312683BECCA726554EDA0526DBBE8E0D9C58D322D134A37B2888678AFF7388
B5813552E2524F347BC1D76D13A4ECA2771CB14A846D87549A0496F465D00F07
66E196C03DA1A925FA9B64A921EDB0C5C2A27C3398588A7085CE787BBD91239B
9EE730512BB8F5388B9ADF9FFF771F1866ECC50946E35B7F530BDA671EF1A4C5
D9B3898D7ECDC4655F680FCE021616D0DB89C51001090A4A7A4D776E3263AC78
31D24F97A175A93FBB1690F9DD007BD7D484C2E2A39D8B968FCFE0E740DFC2FC
A9D28A6742AF910205C9B6214E0F178FC2E3E8FA94DAA9858019428DC505D953
6D49069FDD216819E3C86A6D4BC3259179DE4347ABB15EC3C23600BC5A557814
3D55A93AA34EE1222DB38552091831DCBE0A1978BA7B868847F2DA25B78AAAFB
57A9F8C432539E4C1D48A1FCAC3511A660FB2091D0B1D86F49F7D780AEE751A7
0A0EAF11FE40255751E95C63B325228398FCDA123F7AA801418D4E3BC350CC68
E261FA07D3BAA1C3E438E8243D6FBBAF50EB8FD8FE953029FD32E5B86FB5A5E3
88A2C04E1AFDFBC386DE740111CC81FC8A4652D4B8FA9FED2284391DD5F0AAD2
DD34D2267EE0682D2FA27B8F4E3D0B78CBD11BD3F3D0D13EE0E045B13EDFF918
FF0F7AB7C22E5610EE5F4E9190871D0A39ABEDE3172FA0A2127751E814E8D199
4446295C170E65142069393597F6195329AB926EFD4C397ACFB134D0A284A607
919D9370A70F3F45CC0E935D28583720CD92390440D0495BD7C6F5A86BD272D2
FC3C68647B83EF5B459D8A3B24AA15B2D364E1FCB1BF17BA63096272B30D4982
435FA42C653EE9D144C706BDE9EEA9F569F1E5963A38B4B75F8B1419E59FD7C5
BAC359A69BE7457657A6A65406015947249332D8E20BB4718FBC25D1459F04EA
286BDE84468C335103F7496ABB9CB1B83C5D94730061218EEA88699B3DBEB852
460380F3F67EF2B915F06401D772001C19E1A63EBE7E645FC515D0A6E842DAA6
61FD9B397A3F26BEA91757A8549EDBD9C4EA4FD7B9B68BE31E7907472DE5DC8C
40FCBB2BB86ACA3D96BE9DF74FF2CF281363B7DFAD216D26ED6F9FFB5ADB331B
5F223E9C743FEA0C3B0F9995EC0F52E956C460FC1EB07918434A847BFC90312C
10655B60D215EBB389CD803DA3064F45DC549E3F55B8371D1660A651C229D309
125837A43863502E8A12727F5D50F3C73B5730D57871885A1A37C55A715742BE
8321491F481D2F9EDF441B67C3B73AA68174819AD85EC878F260DF0DFBD65171
980C9059C71DF4FFF65EED1F71404AE80C589C79ED8D74026ADF1B4E1D88353E
072D4A417B3CB90E4103E0EA7119629C1A5597FF7ED694FC1208C4E1B0036DAD
5C10714EEFDD6ABE847B74CC7C1E0A45451349CF5E62AE2E81175A685D143C64
BD1B19E15B6AD1AB10289FA4867D37096BF267DABF258C39557067088D8C6D22
457B46B3851443856541DAF490B533182C297773FDBD586B2CC0113E27D037EB
41BB5233C56897DCD4A9710281986726529B5D8433B54A0F460D702F65F57371
547EA6C877529E79E1991B94888726133C35A5DAE2CAB0755BC232FF70C18272
3B4FA85DA2C4CB43DA2F3BD3868D6373B736D31841334DA812F8A30ECC3C17A3
39F4D4004A2F587234FAFDA6713CCF3745C58511556D425301771208D55E96A3
30389BB0DED9AED5A91815032D5974DA63859AC97006C0EE30580D1A3C1505B7
F9B611B86171989AC09A6BB14B4E0EC54C5AFACFCA851396A1F2A58387CB9993
2F2182AA3F9CBC2CE3E57E676482AAAEDE3EED07CFE3117875E5A28C5079E178
1A9E1FDAD12E2FE4AC2173B050A05C18F9880E23C480A2CD0B107CB61DB5B347
3627E1BF694F3E9CB9A7414BA06DFD82358F0DB799603233C8322E494B0E1D8A
99D7BB75519C04125C88841BE3D3C6E6AEC948DC1A6586DEB6D302F8913C6BB6
0C0312B24B0BD4ED7C9E63DAA701DAC4FE7928673F7B6A68F73A2AD162CCA498
57A84C7529882081279DE3B25A314DC836B1FFF14EE35D303E3785A358E9C113
50BEEDA282AB62F7B307156ABE19B56BD4F691A1AF2418534761F8C356810994
E46D30A3B72488156382BD35215D8D83A278543F8C919BA0608A9FDCDDCB30D9
8728645A0EF2349E6EF4470C55D811309E1EA8BA06F6300D6B15CA859058287B
BB4525F53D25D77F4026258C426CD1EFF18EBFAC7D28BD9F35A475A361080D21
8B2ABF7405C9E6A7DE351875F1C9B850A692C4B8D758642A39CA1A0516229013
42219AA07500AA5DE6D5E073D10ECBE93C5CC2987D4F4F13362D7ADDC3D3BC78
B0D56AE3131FC9786647D584035A523CAE948EA929B5439EDFDB983C046C1F53
88F7E67E3E0031F0A13AB12A8522138A17ED1A8E560E71D8FB80654CCA0877B2
80AC94BC365FD41CE00D6E6CA78C205758D9EA0B988E0C9B39A425D899B8A8D8
983FCE91203D3F13487F4DA7D3E17AE9BE77FAF74DEED1F46E91232676A161FF
9DB7741FD07F83B8718207CA4BA03C8C2F41E10CFF5C14B05682C1FFE7F3C18A
633F50B41E8B79C0C246A98F6C78D3737C42B28588FB5B0B3CA97EB54F18A97E
944E0498E78FBA671B1E88EF5F1EF4FAAED7C4586AF1E9F97DCE05200A928A53
7B7DAB77D68B9D2F7579FD28BBFA862BFFBB6CC55A89C2529A4F261AD82C4888
BBDF7A40109543A0E33F06DFB8454F8E326A46E607822CA2F168E0E8D95B6A53
8CCFEC343661D7DD0F7DF1959F349B12BB4EC7C1B6E2EA77DD8039527CB16E5C
9371B5DF7053FE08309464F85C3E839DDC16CD46C62EA21C63CE90EE04B3E46F
6E109C8193C6E1CDDC307A88FB00A1BDF0C7786819B817A4E887BDEE616AFF4A
66FCF41D02C7EC97B9773098D7B1DE57557F019DF489FBFCEB05EBD4C3B6EB4A
1F64951B61206C2FACA987832D7946D67A12AA8660868049AFD4BF5FC1DD1425
A15C887DDC3F530456D6A0510A8B28E9859C187CDD6D76FDA492539817A1B296
1B6585C3BC8751B9BE4744063177B0782F58695C70CE086528834BEE3A0A9871
52834C6FCD4B6F4420492F25CD6E18D0DA09A077839FA7EE598772B76C72F09A
7FDFA76332D671153CFDD38D8A182D99BF0AC5732241B78FBD2A36C83DEA5FB0
4E14EAEC100CBE4B30F37CFC7C83E9A00F23BEE2B638CCB3023CA8994808ACC2
B41BED1C40F0D25AD81AC221A5B141769E12657A12F9B2EAA14798980BD38BE3
5C9C0B9336DD693890EE25CFCE43E7F7718BC35C7F5A29976E40D6B935E1CC0F
1D31D3D04EB580E03D161E419770F703322DBD74AABF8FC768239F2A78A73987
79AED87FE9930701583E8872111DDE5DEDA97EE65C2DDECD3D907B80D93732A3
C24D358373DDAE6D768B1765AE644F5EFDE49FAE1826CE1209DD13BB4E9C970C
46EF20FFEBB58FDCF13104AD668CA966A7F0E8E738432BAC9F15C4556EA67EB3
F422BAA00E20AADBAA9C8A4EDB0707BB7BD117C8AF5BEDA5B22C02F0E15DFECF
3C0773338B521DE231B13090255839707BDECC5D8976C11406E630C62B205708
98CE53AB2ACC70782F4AF3144E458AFBEE2418D5AD11C801A4412C38F4949F89
257B8BC3921B476F01836831A6B3AD5675DE5B6C8B53B7D715F2A60FF02EE6FE
14F328AA7F40F94C2881871A160FBD10D2A8CFA1276F9194E6556E8CC6A6255B
BAEF138FE0E4EFDBAE71A36B1ADFF78ECE0BA086B77EBC61E0506013C9797290
60A04C88FD7EE21BE265B06D08430292E7462E2C6D4340DFFD4601D7718859EE
D8487BD80C4444B2D448A840F60EBED68894FBA3D0F5A47CCD4017C15430EC3F
E8D1D848C6ECCC6F2E9D0F7EE557962E97B2611963063E5E4796EB958166DA9D
D39F7FEED01625938C05778D06A527BA855AEAD7AAD5840F3C7B9E21D8CA390C
FD10968212200740D75410AFAC562B21C6D0BCF55D3DFE91A020793E66AAC88E
94BA70268307C6378F3B986DDDA740BEBDBD569AA09107CEFD6EA60B8C5AC1F6
D46AAD79527148126ECC74F1B4C26190D1FAD81AA210A4EF88D706BFFE77E070
862930B2AD398A9EA8F460424CF8C3DB5460394CF197CECA724F82B938BB29CE
3937CC35C3715CFF2AC56E4465B01C9C4626A42DD8620AAD09E1635D0ACFA427
63CBB550451EC80B1DCD77F56DA2F4AA6106FCC27B204D7A67C1F6DBA6FA3E3B
1793A5EF36CE4BA6B7078D6097DB039640333E343C104450F9A59E02997BE85E
091EFA8BB161C5C4C7D441C23B766D1920ABE49CAC93EFF63A93F7EDE373D0E5
436AAEEC1240F71E1D0D7055AD93C362A37CEC3F3A8A800758FED6ED30FB66CB
45E6F6628976C62EE10C5D3529C8D3B74E0CA32D30816D569142C9E718E40576
0DB81F141AE5373A6C53F47F0BD7462AE367580D62A752FDB0B1A8C29D9CA9FC
B788794DAF9F64D5BE41229D0627B0AF182E876B0FD46A5C332DFCD8D9565B65
A253E51D926CC76EB64AC9CA83B7FE6C91E10FA717CCEC0D2F8AE339F1FB3126
57E2BD52AB35B72F30CF7593B3EA70838DE1538890C98AAC895AA48BEE6E1FAC
B5DB6255EB11CF42880ECCB4E9902735A3973F350FBFD52A177BE84F2C556356
F953DAEC243FE25DC85F44E84ED06887B6E0A78E0234EB24527A306A3E2B5F6C
C137F4591D3F63B87490338692E1E8CBCCA149F705C5C4FA63BEEC03A321C96B
32D99CDCE1E087F071104B7BCD7EFC7D827406916905CE562A7F1F31B33FF180
99602C67026495FC2E4426C2B5993333227904D8D3118FA28D55E36F811306D8
B45382F3E6EFE9C794A0FC38F09139ECD44EDC4C4D95F0D0ED33AD94335813E2
F68F0697FB05CC89E2053D3D8FE8475B87C18222102AE6868F9A2351BA6CC5A5
5DE509E49C0F79AAA6140291083972293092C92D8164F8D4B95A3BD6EFE427EE
AF3D3C4B2272F5BAE463184E90C3F43D68281086B9DDB21D604056A7672FF770
558BE133B2C1C7D7E176C468E6313A3CA43B6942EA1ACA42EBA1FC619435B95C
5C7603A80BAFFF3A40A7241CFF20023B40491EB898AD834EC65107E430DE2E62
E16269D6967B5937F585BF8D1F0A66805BE9B173D505CAED4D969C95534CEFD3
1FEF6708C7D0775C9D5B267D4ED3B6FC050C642D4F8AD470257FFD9040AE0091
C79CAAF2B985CA51017885692002CAC58C1BEF5046246A0CEBA481CD267B46A8
47B5E077D703DA799221583EC737215883E3A284AB05224B71597529F45E4DCC
5DF593CED5C386692EA6C88E9327862E9C661AB681AEAA9A670C64AD4C063A41
FD97AC4630D914249FC827E1B35779A961763DB019BDEA41F32B1C74A1469847
F4C89FB45803BDDC598699A43BA00C7A0A5C2851F7708E6619770A190BD48C25
934F6FF32CB40AABBF21AB550DB7FD13D3073A7690664EFF3E68182DCEA45E52
8E0D29235C8F0CEEED40044A8F508D04F905F584A5514FDFA518791F396FC859
8E59109FDF33DB976A55583FDDE9B18DFC86328E211126488BD16311921BFAC5
5C6348CE72916FA355324AAB6D450BF0B3F3342C66E92808B29B09222E86FF1D
890EE2689F2A3BD72BE359B9006A13430F0AA9F267688976C76D1021CD015D97
9E0E011CA35D529484F38F6A4DCAEBA1F1DCB1F6682D0A249F7B020D228F5EB0
2D553CD0A893CCF96BF5D4FF75D9D47BC014ECDED22B528806F4DDE140A4B6BC
65677D3C618177382DFF490224401BD84B1E8F5F267E84DBC86356F059BA30ED
8AF544E782E3F688BFE943C25C094351812E7D0817220FB50C7ADAB8965EFCC9
52FF92B62301FE5950FC46FCD1E5868FC3F79BBE0179E53329E229F8F69A3C74
9DBF25538EF06E332C11D2A9EBFE7949B84EF7CF72977070C63EE4177E3F3D2A
FF3864354515794B7A1BEA96746DF927B1B78AE9D4F50DA7E9AE6CC9EAFFA5DA
E985DE052C9848B696188523202996FA3E70A93D36821BF6DD1ED132230D6C53
9D9956444E02CE12CE51B376C42D7BE6D5B62B597EF22301E8FDAEC825C73F51
8062E8A88A53C47846D2266EC000852A744AADC8BA2C0BDB7674AF47A2607D18
260063013705AB6F7A67D2B847F8933C5FB1577B1231249256E801390FF602FC
FCFF86F100F5F16AE21621F96E0CB4EB817C1090636CEA94745736395AE5FB08
AFD1CC526FACC58746AD3511F899A4CBDEA55DC35DAB60D79EA274B0C86C0D33
985501DC3F0782AF68F8DEE9B0A86139A5BF2386BF6A4CFA4FD5ED37435308E9
91B8D5CFF8176820D3BA3CDDD85018920ED59CC81A15EEAE7EAF60D41AECA65B
60D1AAE43BC14BA35B722F2EE93113FBD3E3C03AAF06F68BDF7D3EDD17C69195
D52981FA047D23595945100C6CE889D66B44A281723CDAACD83143FB6E874B5B
D7116F9166B4007FAA61BC078CF8572241F61F5148791C6FBC4B818F7FA8F2F1
2C63E8CC2FC7C9FCC921E9F5ECD28CEC3ED28FE9AE5B795DCE25425387A17F55
2F930687499925245B8299819734601CF746ADE472781A6A46F5AD81709E4C17
1B08BC9028FB6365221E676C846E1C751809E4A591E34876AB8C52681BAEEF2D
4CBD871CED84D38D33FC2CA559E3D62EE7F0360573AC236E17EE5F7F1A518EAD
D653AA65D5FDDACBF202F68B5E140DE04E29128761B2553DDACB43A101061D84
5166E002F1CDA2F1671CA4665B28B641A6EE6B1D7A954D9FA1DE350AD6C69A79
3520439F2056BFFC8655FFA080FB0559F7F94A744C6E54A007A5B5BBC5E1DB6A
0DCB8D0CF788AAE48B92AFE91C9C2C25409D303F33072AD2E97EF4B309429CE7
7E14FDF25C31FB75437153FEB8B4E235E3DCA09CDE93BCDA243E3423692B4000
866543D6266FF881EF3CF903C0B7C19C20040D6423F521766A4CB15DEF8150CA
A554093C0A40FCFBA03FB3E435FE3276F0250738F3A2D6B50F7F393A62B85C59
2947C92273E55B4AF2A738C2C03D0F7EB3D7E34D4C9132C0AD46595DA14C0C9F
67B91C9D195E2EDD1C60A2AE1CC2C70CE8A4658145B45A717F19085186251B59
C6600D4D0532FFAD1FC4C4C8B8FD51449F12F72E5F943C30764074515B39BCE7
8F8DE27E3661129006A8E8E0EAE98AD6F5BF332EAFBC0449F8A90932CD017D54
E39521E10284FAF9C7314EF032F1FBA346FE9F894A786CE52CDBF36979804DDF
61F36C5BD8BA61B371564ADFD19E24E33905EC5F0911FFE7A6A87C34B9F7BC58
8FD51AEDC2771321F8D4A2B4549725090BFC15BC61EFD959E669CA5970A117A5
F6E8A36B9161FBC7D89A16E52664B84D31D8F36D1A6FC954F67E8941AAF17132
6237A8979519CC9B81E608C0406458C2B4AC2B9591F561256C049219FC0286A5
271A9F9F6F0A57F1BDF8FE05F4BAC0CD62F2AC24764750FB3C48325C552F14CE
B4088D55E131975DC6B05953DD41ACAE124C8AFED17E524C96C5CBF2A8053108
EEA89E328100AD7FA9FA045C41D5986EB0A40B544A74DC7093A2EDAD3B3A1EA3
E9FEA9B22BF2E37E47408D4E49D34625C2311705AC395FA02DA1E7A9FC0025C1
D64E47D199791CB636F68B9FA0B7D6F0FD8C3F73B1E159071E3160F3888F3C82
CCDFF900EA83147A6010DA648760F89336567AD435BA18492B2129862CA58FE3
B24BC2328A8DA492349EF083B9A54388FDB8F030EF94155FAF8FC47B68F1A3F2
14BDDC669A288045AACAD1232D42257BB4BF8EECCDC8122ED12212183A966F19
4269A93913EAD8C4D2DEF0B9F513BA5BDB44B2801C75316AEB9E6A4A7953E4DB
6AADC9BC7DCCA4C8426E631CFEBF8C4F0D045A064ADC629F29929339018D4A16
DAB4B447F655D5091F859380F5BEC8BB84303FC93227AD94319ACD699FE163C6
14C3AD53EAE81EAB9D59CFEA352AB41222ECC757ADF22680DA2784F6A58697E9
AA3009EB6DE9A1AFA37B06B0B33AC405074CB0AC68A2380FB0D632C46159CB8C
CCEFC47EF08F2724FD6BA12B9E6CDB10043E8F34D46C3996D920EC72C2AF3FE1
FA93049C6FB741A9478619D958E77E6235C9439FB8F3DFCB538ADEB75EC63618
86BE37B336D6A6BC8D2FAE7B790C2E27378A94FC40FBF2E9CFCE3B75B77789C2
1C0E21B673D3E3C903E6C0CE2B8E1DC0C42209A8354BC2B327B0F4DC2C257659
6196933BE1A2076237B62133A32C5A8956ABFB5E9BB5570E2AAC19341A964667
19B67170E48A326DA0232AD9F6C0FAD8D4432A87A0BABC65B76059732869E4A1
F3D98DF31EBF1EC8FF0B351A67AB3561722BDA03FE40DA4228AD798D2B4821F7
0DFA40A05AACA4EF00B081E79DA64D6E2161ED82E26639450355B012B63C2DB2
433CFB111BA27353C45F710B6BA402099B046463E90C56D614A7732AA0BDA864
1876CB103B93575FA935F691C825AF35DE0FE473BF6BC9CAFFB5CA5F06824FE9
8205D719FD8D20567321D2B38A2A241A8F6912E929F3EE46586A5F2ABCC68686
1F26D9FF0DC11012FFC5CE3431D70BA71C4C0FC7235CE6B9B1ECBE2FCBEDFCAB
73B87EEF15F0403B0B4C52AEC5D6B00B14D3D56CF55E3C807AF98103E91CF2B4
94BDAAA6B8513441BF6B5C79197471532FB73B8E184807976033648329152B32
31FDDA00E9FF7D67C7D378699F74E83C4CCD55EFA64E8B68D0BBE9E5A03E8598
20C9FE8BE97BE672ECE20497FAC928C3D09F1AE155DD8261A38CFE71B67AB4D2
A45BFAC53D6668CF22A75928CFC8BDD8257973D6FCD5ED814757FB7775AB5C88
32AD632960E68DDF4D87009B29978423330B2D96065A09BF476B3D0DAD9E95F8
14167377F5F4158687F05300E1034AC01BA7DBD5D2D5F00FDD9F8DFB782BECCB
DD39190F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM0600
%!FontType1-1.0: SFRM0600 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm0600, tcrm0600, larm0600, lbrm0600, lcrm0600, rxrm0600.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM0600 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-210 -320 1719 944}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B57DF626EBF7C144CBECBB0B8AC425A
08F38901803917D730AA3A77964447A6FDD9D1D5D6CADAB899C866A153F41D19
22B1F8E853431D34A87708FD95EBAAE0636D632C6CE8C8A24746216DEA10FC2D
C907A32EA036B850F319450C5EEAE2F44F6816A6D06D366C75DD9E360D9B2A18
87A6A24EA1491639E588EE3DAF1357CEE96FDC53B9C5C4428602EC516A115B16
B137347E3ED03B4937869940192CDEF71C0F2AE65E9C3738407DB9F6064DB42D
E38A19BCC21F30DC69ACFC17FB5C81CD536C0E8FA6F05081FB5CD8F85031FA0D
119767F746B580E784CD0928454272AF2B8FB4F5D53F2F011685524517BB6B38
E8B42394EE37942132A010B6CE3CFE2E6CA24D320C12D62B1C9D401A74AFE7E1
D4B2B0968BCD3E63619574B096BD23B59496071FC1536DFE6937146ACDD7CE00
25FCE9918F9F3439D5F9BF4494CC501FBB4894E8C454BF46C615A2407776C621
762E39A14708EFB767E2EBB33C8ADD59B3A589F3220142F98A253A164ABC1AC4
C32C48557C507A9E3021229008ABA8BA85B43B193A537EFE14EE90DE56EDA1A1
CF40CE8C0C510EA30599B1381005621984F2BD4A8B15EC634B26CEFA8B03CF43
612FC97D3C94DBBFAD6F325B3E3C314F0B0AF5DD1BEF045D7E5A054D99EF3E21
91C1D5C91A760D90DE6D62BF425C79A481AB376FD2CA46F949C16FEA1B452840
4AA8B56B201E4E7DDEA75D821FE434B5676522496D357B621059C6E9007CB5D2
190161111309D2476139AFE57269C6361CB6F09E0F463AEBE2BA17C0DF2B676B
EF8AD942A3BD1FB35B44B11FCEFCE048E0A413CA2BBAEB9BC90A5D78E6B1EC67
E8D53B310731AACC60AD7BF22137C721B0B6AD0233FD1DD83AD47EAA9EC9E3E4
45BE2DB9EF5D34E7F747AEF16932B3F3C6D6D3C8C6A90BC4FA26BF967AD9B019
417A876EDE63682A24C06593AB2C0F1D1CE0A1C1B8976C7550F275C4190A3AF1
EC6DF13854712FDB81061A9F5C00FCD0A977AB4B7EDFE86FE9668BD550DBF3F7
DC47B85620B641E77FE5F73E9D14B1D8CB415F20F739EF1B49B6D65C7366A3EF
E4E0275CE8F0D3BF4A2151CD13C45EF003C1492E94840A2977DE53BE29CD7775
3162646B1D7AA69FE0830C05ACADE1E4039D242E7434E22EC93615FA8ECE2D4C
27342EF751F4FC23E314B5E22BF8000FD3DAF9A8B70334512ED37D33598B51D8
1420F45BB03781F64840D49C9FB69442DC88166575049E84F39641519C59CC09
CC78560917B2A7265C39784EC4B319959677CB943985B96CA9D8FA3A7F776916
70F5D42E29A509EFD1D8A9DE08F1FBEB0759F70A51E2136B6E937EAE13534405
28AA547B5EAF4EBEA0BC14C055FF8FA189A4BAACB0B978A58EDB6B8787C84C6A
212F067A28BF6C8D599A656CEB8AF1F0D2B736572A20B8CC7B4C8D58109179B1
5292027209A25CB68EBEE9E67D7AC8C5A90D47F7DA125579AC4CFF4CA716E425
C9109C1E32527227875588480241B347367B30AFDFD12CF23A050D6C1328C340
A6556729C317E60CD87639E1B4F3089932369CB542925FE084E208AE46D117F1
A0394D0BAD6A6D318033C85E12B77DB6B54C920160633B59C2D9285F7363165C
83F1DE2D6CB5FD306F441F1C09E1C5281C859EB777FDA513DFAC697F562AA3AA
092FAA20A211D4684B72AD8BB8A5D1B3144B7822C5431691AB86A1D989C6F6CA
DD3CF01D2D43AD2E836C43E520792075672344DCEE4F9F1687F5E18A1F7F2808
A4CD492A90B1AAE543C2D357586AD16D5DA61C12E13338F52F290C7D1A78D50E
363B81CF19262AF6A41B35C3CE298F8F6B866E05081E15818E964BA26343A1BB
05062BA3BBA2174F6F457B8CEE274AE7842BD8077F90731D9C031B08EF9229C0
4D4C6E222909211E8149E3D6E0956AA272BA4C49335A08E4F946E74BEAC062F8
FE26A02632ECDFD0BF97D135B0FD0EB25D48CE4F478E134BB12CC9AE3A5456E3
64D2117D60BA66CB7B4A5AE95FA40A28D7DEB27B069A47979A1CB7AED352BEF5
8C560E44F27B9FCC33D3F2076382F2E96F2F1C94F11476BD78B3F62DCE3FA965
B44AD9300CB1DBC3E3A03639C338E6A47CBA39AE6DA19468F81907C0F2E2A593
DB7AA7618487B1D3D924DD0CED0B372AF195EED1ADAA95369820F88AB02E7F52
2ACBA51836956E4FC7FA005F9847900918832730A558067D2FC40EB84445E85E
8D8315D0A0E3E26DB60F6F40D6B935E1CC0F1D31D3D04EB580E1EA68C289E7F1
94D9CA3F7B1DB6FF17B5BA27C4E2B5A23995C881B05A205779209177897802F8
08498A2A584787139457A97D7E6068500894304EEDA172A99BDFAD7204FC8E23
23C873222A626FBA2FB12BEE4E016B527EF236E5AF135276C81FCD2A8FA1639D
0D55F3644B802016095E6C99BA46C719578BC48E9065AA87E8BDD5575DA8BB21
01894B0C047DB7EF79B8ED91091CB575ECBB38CBDCF48A1E092152EF822F5380
F0E5CFF5154FD2BB8D1670F027599C8AA6FE85CD867387C82549B44DC9F1318E
794ED89C47409E478B53DBEFB94C0024CE2B31A24FF1964DD143473893F650F8
1E28D0CF231296F67B8634C080131D4DA2FD54B4CF7EB11374C471EFCF1206AA
29EAC385C9DEE25CBB81AFAF6027C908EEE802A295E4248C4A1BFB7A8CB00F44
6D25ECD21B236424453711EC6696146B9904A8B18B8920635C99049CF76B116F
0162BF431ACACED6CCF9124B91389A2FA3AC852DF8F0748C75C19B65D2F728DC
E0876AC20486F7D845BE697229F5F1DC7CFAA7895FE9B3144EC77E3DF61AB8F2
2FD1CFB4E40FF4068BE1111CBCE2EA64C3B05B1B3AC68A0B8A83D298C4D9F570
45BCEC024AFFEC50470EEA2501AA72D34045969BC0B18565C063BE0F3E9F9FB5
BB83FBD4E7B60DC1EC13D3A6E60A62E18CBEC95D4F9B797B26664F9A9BFC33F4
366C494E561534BD33798A933C315BCBD971C5D5627A380A78F81319D84C6274
B75247E7AE6939D00ECF677824D4823CFA87DE5DDA61E2B4C573977F19D9D9A0
B8D58006A2A7E81C50F1CF9F68DBAECE652A8E228796299F7BBC7ECEF86ED1E3
99242AFADB8A19C661F538857EEC8AA2D7010D493631FE0BBB09C8ACC305F5D4
DD4290C95FC176BC039EED99160E3E7290D32036155553AAB657D60E2C36D1BC
7ECBAAADFD0B21040E80F87A53D8F90EA0F63D004DB101D5CFF6CCDB24D778E5
7338E8A6DE3B431A32058344CD094018F9B4B8790F6F59291A879E9B8EA83B9D
69D43746B142E9AAD81311765583564A44AE56F46397C5E1009223C277E6B0E3
E71CBD4239EEA0D2DDECD7BB7D063C152982D388DB7A0B4ABACC60B3D708E521
1033D3425821DAAAB8FE4ABA27990D6B91B3822A520D6F9C1CB12188ABCC309F
EDD4FA497D23E9C78A275F71858BA4CBD359B870D40067F132C3D31CF06DE8CD
DFEAFB8A0CBC0119E6711BA65181B4EA0E9538A6DAF6921C5F3881436FF74C0D
1664229029635C383EBCE1CB7C2B074B5AA05C938E87FBD241FD064DBF03040D
46705A1F6ED7377C7126ACDCFC02B7C16E0A77DD6C9A899394FF19037D8A673A
A442E7311093FF3D0A3AC14F3A7E73E9B60B21C842F26EFC7F16D94F29668DD9
7D27867B2D2FCA8876DBCC1722A7C5127FD3D47DCBC817B3D5859FBE06922B23
2B0AC83BFAF220CD42CF45666E41F368E21319E382F750C4BA3EC3E8F6CDBA3D
110893CF1748613BECBF7549175718FE22328FC3356C5A1D6607986E151EE943
E301D9F0A0B58494405D4DA5606E89BAEDCD9E573A2B023352069DD1BEBD5199
146A70324E3CFF770C9A0815EAE958E6A17B3CBF9B54D5E17000CA4114259479
70F983C721DB246CC8CC072B11B3AFE65E5C942182AB71396E9417455C5DF4EB
DA48A165A439409570DDF9A03CCD80180CB25B803317EC7F3DE1F15EC45B64A1
F4E6C4956DF4F0118B300D1B6D20927C4E0ABC977DC8D49C6355B9CDA3F3A115
780B4AED8F5099AC2362EBC736403D067D95F379CF44F3F87740C01DCC3A870D
125837CA28B754F35C5874A9204432243E66A9837BBD9920A5FF22189B85782E
E6195EF6ED3B6830AAF55514AF1C63E8BE31F1F410B1B4BFC44C3E7405DA63B0
5F451A01A993B6641CE1F15CB85317CFD5AA48A8F8DD351882D808976A265030
337A8DC576F4A165DF6415A5893135ADB098022E7B84D9CE71BFFCE11A66AA20
BCE3049F990744F6BF1261BF5F17C6202574CBBF7165183946BF0855A675432D
0D3BA6137B672141302E0C9A9A82F0FA379DFE60338A73083C4108D9470B9A6A
2D88BEBCC30B850EDB381163192BB5742C3A1EE933CD7D3D2C7AC2D5BDDB2548
C6300FF4A5362BAAB8F50D5EAA8BFE9F953BF0CF63093E310562A68D662F0F8A
E1482310DCA6672C452F9D35CB11D347779A5523F607B504C7A0DF01F728F1A6
85854A512F7B0BB9F40C0A431D263F22D091D0F560ABF27CC28850C4CC8AC536
7B366EBC90C9E374558153AC833F4251F04D159DA667468781C34EBE11B77F7D
00AD989DF67305D3A25280EEB707DD2DF0792DC67F835A307680724ED3CA9815
2A36BF36D2F51784D216CF9950858BA54CA7CC4A17F54D043B5881BEAD0F3FA3
DDE2C62A9EAA7B5CAC4A2E427257D7C2AE685F7131B04C23ABCA88D3E224CC0D
4C47CDFD603270F3CE1806150C2BFFC46A5F71375D722DF6ADBEA3E9F50D35EC
6D1D463D49582982FDE4EBA45699E4BB7660CC8A938AEE2340AA12BB786CDD7F
AF7FDE25222EB7D1B85B203D71DC802866F884E753A2A0FEA464ED04E8C7CF76
43E89D5BE373C48E9327862E9C661AB681AEAA9A670586F9ADED6DE71B653E1B
5F49E9CCC94270E49529011A9EC366AD4A745A6BCBE22DA1E5D4695BD0ED514D
CEC1C0B3C7D589B1CA0D10DA32EA97C42CC132FE55FBECA07BE6F152F1DDAB70
0B6CC69B9A1B63AC5634E056C0F79EEE9D91071D0413F4FCAEE18AF239FA9A43
37A44F0D79447E9C5ED2573FD9DE75A1E4D7B0CF43B5B28255712F2E5C5D0F68
D1B18A4445F192668A0F4AB8C27EF1DED74EE602FA579323C5E59E09A4F10ABA
DCAB7204AE358E7DDFC645A619BC423F77E4C7DB510BDC32FCE3B34EB4DFC3D2
A1790D49EB6412C2618C640AA60E3E1C4057B07496F619A02E659CA508BFB769
7284F9D5F89E5798997FCB661211C72C553CFB252C7EFE330EEF63D68123F899
F1164FAB22A392B1E463EE135D9D9C902B17B51AAC0CB2528AECE9DED5CD7296
08CE8AAF3A48C72C78E9693F6829E3381EDCA87B9DD51F01AFAC344014375F62
BFD0CFBB4C097DE0CF3BF39C25138064E46C5E5A503C8F0D77EBB70150A2C54C
D77EE5F902FFDF896FB2B71F3F05B60DD151712ECD1C0A710040E77E88BCA0EE
694D1BC7F57292ABA161F72C87504E36306E6B4631CCE454AC5F434DFBD7B601
80DAE6860EBDF62FE4F7FE74ACA3475F26B881B3477407C51F4EF185AEFAAE39
BC6BB6BEFF9DECE02DF429857C99EDB3FADC61CDBE7134A84685C012D596CC56
7D03D641C190D9CF2039A003B0D1B9D4A5E9539858CCAF28AD7F03CA78B37667
40C47DFC68C7D18DF5EBBD067E65874AF23CDB0DD546C3D2F3FC1DA14062CF64
4CAEDBE0A0DB2CC5E8A65FBE05F8891932ACA1B50E852E5FD47142F762E107F6
91AF9E945ABFF26CDEA98112C2C8B5CFEBA48FA8766D132335B2A4940D4037B8
1258E54FA714BCEB9D1A3A2268162C687171D0935CE72073D73878ABF61030B5
A9733F6B21D48B4E59D982BF9E06969E6BC5E6D5DB6A310F723F5519F243C73C
44EC877FCA7389A25DC6E9007C357491BFBA0CAB5053A1A14064448BD3E8742F
6F04C3DBD06FA0669CF7775414D07B3F5927ACFA908B12495A477C1D326469AF
678848D0EA70E5E9B6E0D538FE9400C351D86CDB7C52B72879152C794199C3CD
0439A7BC2AA2A2C038FAF787628427381FD3DFAB68A367D1FC762962B0D5A0A7
6151A94704E28798B4BB88F6735E7BE7B26A2E25877E5EE22DF07A30F745BBD5
3201C75DFB142D13285E87CC401FB86062722874CE85E3AA78FC49D68F7F48CA
C29A9681715FA7A75C14B685E2004635A717A7911245A671875350CC81F20A83
DD496C36C24947A1EED27A40109D38DDA5BEF5075B4D37B7850C4B8FD2D3A67F
359E0963E59880303D59BE1D3FDB4BC86873D179D88A0A94D2B63DF18953A8C7
1289CEDA0A84C9DFC6A98895446D46E90D8C93231CCFF8B18526D4B876AD9E08
87E13D0D965AAD25730449352FCC07D4BC5A15613AE032CCE548FAB0C8D1C07B
A89A215C8FC1470D926D6E7D4C105DB43791E82077A55DF592632A3E6730387C
5E7CC9F09E0010533BC14E56C291413C501E0AB5C62A9DF4B29195EA4378CE94
2D14E1E9AC03B9A0085CB9CC1F693ABF03C400DE4379F746778AADA0979B620F
84259EED33AAB9D7B7BAE9CE7EDB09A1387E31A3179211295573B72AC403274C
694E5D0DA0864719499BF534828BD05FA84F2458380F0F83803B5353FBC52704
28C8F57AA1F8DA68D133F004338F3589A99DF60BCF37D594B9283EADA5947913
8F0A4EC6C6AE763CA422D6755320D01602B364C07010B5F178CB8C6F6AECF2B1
D346F644A8126EADC4813F842A5F5EAE1946E75E8AEC58A269D0B4B7D9F78D92
C884BC76BC592152756DB6D6B122B9875063C2DAD8F9A550781DF65AB43D7D05
C5E39FC4876E46195F82494D322DE3779FE9F8714B518561B17A9860DA936CC6
1223A77214FFCF55BA91FBED2B28C6D74015EE6CB698E393EE5B7F4D5357992F
6D8C8B9FDA94874E501104AD024DB575F3504749F70DB717EB72DD4F6B4CB9EB
614E23F7D32B7AAA7361EC25C282B6A0A49B5EDFA8FF2CD410CA5374D1C2D78F
E64DB80B78261A2AA913F4FC32095D22E0E2E8717F0CE7E9B0693C6CF02B469C
E9F2C4C82CE70C176517FE9668030CD7EA9F222E44FE2E6A8B1E5252A9D4BC7A
7CF1A9AE29408762EC9F22D923CA574511A78FD505E6CB052BFF9D02D00F4561
2764D8E27354230BD298EB33D9DD15F881DCD822178A446D8CEC5AC289BB9BEE
6488E3781B1FEC0FA77A4F9D4A077B51B5A149D85E5803C606BECCC8E16ECDAC
540523109C2D67621B6EF21D2DBDE76CEAF0B699C3032C28D3CC3A9DFB4194DD
4AB3AC91A12073495CA295BE6933B1441A825338B3E019174B8F1F6C9F49A088
1C778C74EF4E266DE64CD9FFE20059D241C6709E4871DCDE8EC3694BFBA8862A
330B515EB96D8CB78AD3E99033081FEE7F85E61AEB6C09620FC5F2BBCF76FAE1
ABFBCD46925290932DDE0D4AA0E3CC3C51F181D90992785B8D77F24BF59E3D1A
0EA3A059F6075A69EAD7D2EE94F53C3380BC1F17536E1902E82B66A4511E9E63
F2D7A853486251992EDA8A76508FBD4DC9F1318E794ED89C47409E478B59FA5C
3ED9C725B93755E8315784661CDD3CFC4D87F864F3D952C3C7D1A53A98C95127
837879FBC5344878436F05BE2C5BEF0839BF87DD18912FD7D3646552A788EE6E
DCEEA21BEBDB854D0657819F4A6D5799A8B95D1CAF5760DF13030605F7BED34B
F377544C4FE0D9E2CB94C90D217AF778A53161CB156A7F8DCCE5CB3C0197B92B
1E413DDEC857FD28ED582E646B346E4D93FE54694EEB77F329BC4A761605889F
AF87884BB606362C9871E1A4D4F3A0DD97C43EAC87B96A7173DAA892D93832BF
7DAA190CF4FCFB72DD0DCFC91E50358753C897AC2A47FB4AC5E9B50E73D9AE90
3E6613562221FA90085DDE5D7DA6EFF4CB716748BF93CCC7C6A83E5EA7CC8E1E
C71AD88E87889F47C668325DD037F853AC9428E88173DBEA327228CF763A6954
B432891B8F2DD3428DD96AB93E3A62FF73647DD1FC0623F8517213544E8CA05E
5E6111ED239F4E4499CED87A0501A4A39A2EFB470DFCA7C766EF8114F3027275
2554A64A69B0857BFC16F30531FFC2D3463B820335ED408C1F2374FEDCA87687
CC113B93086450749F59CC549FA14AC44E77FA872027C1041723FC113A457DB1
B4C0B5DDF3DD248B8BC462230A005D972B219739022860C06E72D4F82D7D8BED
7A557276FF2374E36EA9667E9C4D83910926C7B1AF5D9210483ED3DF45731C69
CC6EC9CD8DD59FD1C7F22A266FE7BCD92563CBCA6C2C6B50905C92286EC71D79
EB1292E6BD02BB5C388195E8035A55BA3C769132EE95EF6A8A8FE7596CF501FC
00C265873C923DA723401541055834F51807453C7253F0DA055DBF8A0A732BBA
A284751FBB466964587B2F57EB8D5467C1ED2932DDD7D974F59A929CEE826F64
08B56A3E970F0BA4F7A4C566C61F054D8C429F0A7AEC6F42E3C7976EDA674C57
434FCEE9AA048B59AD93EE9AAA8BE98438C6183E0B94ED8252991A78663B92C2
D4B4ED1204D2B50EB843420ADC081057601DAAD9BDC21AA65005CCD1220CBB38
6098BA3ED1AA95C72B7D9B52E1643116E662CAC5F8B14B952493BEDC9B67EA93
48596347A81D5448A78AE0722AE99AE00B384F2E8D9F9ACDC867171F0BF2934D
7D66CF8B3099B051B7D6BAF4F76C41856986C1341AB0F1FC68DCCF67E1AB4EE2
8F46D77A2E3C5970FF60F5A8EA6428A753A30883AD0E478802D0CC5BB2D00665
5BBA3AF2BF9C0EA3CCB2B7DC11D6579DA37AB425A5E3124AF58E8D7BD54BE090
8444365AF1CDBAD2238164B0F1D3366F83D997A4F7DC268533FF505FCF55D409
355C829CF9D4AC5B27073C16AA8B80A61DF255239C0BD691BC7D052022E889CB
DB888C84AC7DA666954D63F5634D4D446F83297FAA9A51C82D6FEEB1F8D584F4
345DFABAC4C2122EA43F24F738F371A77BB00E9A42DF896CEFEE3439663090AC
624D90ABE51EBC2D7D69260FA5632C0FFEF90A864DFC8050FA52A4328ECC575F
3DE18E174F6D518807D02D3EA7E77D79E47029E40C4B5B596817F2378876BF4D
2C305337055B9FCF4542133E0F21105715814EFCCE88F9BDB696284A5BD9C7B8
019222FE508BA4BAFE39A5A2B5ECB118586FB381AA8928962F64F44664D1AC53
7D31DA7E3F61477095D537A796741EFB75E1F6A834A508614C4541CE81A539F8
903A760C8780542A78C7156878591C85D37B4526321909E34176F3E042860C6A
FF44BB54E99F6CAD5255E12F68DF8FB77A6480E97748EC9E09B9CD239F61DB4F
FDD73F1821C85C6847C4C503F5AD6807F29A6109796D1854C1EB1A0510505B5B
72BF158E72300A2CA19B8BD40D61E46A153C3C25D0C7DC1256F76599ED41F71E
CFE3BF1A71DFECA66E04F30CC7FF04822E9AE3FFFBB92A8ECB72DF7B32D9007D
52EDC516EB48845ED9EC42BA3DC260B1E0CBECC7898D6AC135BFA75A9EF43251
1E003BD366409F00A683B123A0576FF34E102563C5798C446D447342C7736BA5
6BBA80EA8BB281F750744608EE366E30C5CB623702C787D6FC4EA8E472DF545D
24A3DF3E216F728D89D06EA5960EEAFFA4BC41DDB56D3D5FB07B3C626523F230
0BE6193B8B8B70BFADD6913C261A9054DC56953E9A8C9C7D8E3B9949E46F7FAC
4CA92840DBD9A852FCD1D06764E93EC2A6373F36A725F5D7D3DB29675C6C0221
4E81FFC726E6F7382AF4433EC880CEA71A4BA7830362372A0202BF126C35FB52
3B345EC97AB5684F3269A8FDEFB9466A4066E81C54781C05A71B623B6F8091FB
9D94210F34C1056BF638CF863B0B463D06B0D39916C2BFA9548D54E24C86F131
44CC616FA04BAF43DA1C74EFA205D43BF3207E2C3063E6500BE5FA0703E25105
A09E79B0AA18A1C345F153C67290B290324EB8365B1A4507D9F708B799C5966E
0BACFF824A275DDB6A89D89F5081F1FE0DCA40F04BB802417BBEF56E3EFDC21C
AA28C35982D81CE2A83171CF2BD29C23074544C9F4CE9F86205CB05F370A1F20
1B5741C02CA87E5862A9B1F1A1E4230C4A0A0099D280AFB05C2ED4A5F7BD5CAF
A9135CC1969E474F2C2E0CC3933A1F5C39BFC5CCB48C3928DF8EC5EEE1780A78
C587F31B62E3BE1991CA0BE1D908E4C512E1AAE11085D68EB9A7078FE42912D6
658BF3ACCF715E63468D6F77BF18AC181025AF9377005A6B6FCFBFF04C73D9D5
5F145963B6D0C6B27F94965C62BDDA15586DAB0F3D90947C94C9D4473D5A9C49
0EB3B6FEC5A91F1F266609281D84C24AFF9C656CE8765F7A44066BD4350EEB84
71691D2638935F2489E87EBB5D3F92FC7CB45520B129C5612B04ADA368E75CCC
7A54048E3F48D4314FD9EFABBB7D77A8828768D6F4822CF05153D3E5A4A71219
C38592C86237B17D6A6026A1F39941061598C84237011B4DCC72AC6BF31E280A
AD4A686AD314AE577FE9448CCCC17BFFEBB66F78E2C6F07B071AB9186B9BBF59
48C2C694137ADB9AFD39033A42F990426339FD6A95C3F46780518D34CBE784BF
7D6FA959014F0E9A6E8758CBD9F6CBE68F5CC53D80BF9FEF50C6C974CFC51ADB
D60B4CC365B29EA2F459498BB8DD44A5DD3F3FF43551384B8E746F870E68F4EA
8F994E54FB3169DA2D3A10A636DE6B8427381FD3DFAB68A367D1FC7629642E70
3FACFED58772BDD4978BC0A27D0FD32FCA51B070DAFC00C67B49D501CAA5B861
344413F1F255717EFDE079EDD6F3AFA7705CC40EF32CAB3866965D9BB5DA96D0
7E2CDDC0C6A9B7E683199CAD092D5611A19657FC7C982519BC3A09A9D795F030
7C776C25071D0B0354CD853222F53920BE2B47FA5F9B2204FA846CCB1904421D
A3242DF909297315D82F74BF79F47CFCCFDA431712371A143FFDC83A9D7A88A1
4159B3A436BDE5E19967A80B304325E3CF06E9B2468083435CEC83A6F629B801
453ED2F28B1B9EDBF53AF1626D75983A6C3B383A6FB3025DA828E12158E4A9C2
44845DAE8BEF77E829EB5FF3C2A88A4117E0DC93A95C4D46B4105E30246C55F3
4047D3E05B101DDC75509F64E99855336EA75E82BA9E34D4C3B896C593F85AEA
9FA0EACA669BDCD4F0E2AA3438FAC6FC62FFF85796B81569886EB1C9C20C6CE3
5264953AA806F512E976E351613F23E810E145B329EBD2EE9D8723A6E28DF047
68CC0AD74EFF6DA4523F8298CE381D567C22A1B58098554491340EEC6BEB2AB1
AB21AC051340F5C24A518AA4D57F35D454521E715BE967990071BCCD21A8206C
5C40608203A5C662F178E9F0671D80ADFE316D582C7A94DFE656954A7E9E5ABB
1154009E0C18A6CDDA3DDFDDD88F70564DCD8D03F8905BAA1B6C6A386B924491
D64E03185A78C61F7393E000AA41F04375839EF5540A30BECCA0318EECFED17F
D37779E82F47ECCAE0749E97B0D9E4573F7B6BE316D8AF143BD93111D717FEA0
C56A0C86CB2804718E1124A0C6E82A0FFA58FD013D9EAD2D88B01654F4C983F8
1A3F877C027FFB0F440498A023876736CEC917E68548A8CED2095BFA7DF83AA8
9AF9949188A90AB9C87E6AEA45F9C3D2D7DD49A5121D995CFC630B9E1360A784
AF0AFBC5982F003CFFF22CB3EE03841E657F3716353FC1A8564DBF7145BC5F59
B4395881CCB81211038A6D38763047D0180064377806909AE2A524884E52445A
E7F45857949472A9005CBB14F32F1C3D39BA8D1243BF046098D499D17920056C
56795EDCE10321CFA3B1CFA4BA5DCE1627CB5B3D175E88ADD1EDDFE83055D809
6D73F650F14CFEF80336C985DD66CD26DD6475231521FB620C2C1C392677CB07
502BD623E63F673C4922CC21BD97066F37B3B40C4C9DF8D4DB0AEBF35A2AE606
51A930E97F6E2FF49AAB53CEACC4610098E8E203760F07F84BC5DD2F2CD98801
4662E46950E002DD1EF770BA4778296D06C85FF4ECB3E8711A7D96A669411066
9CADA14CC5D48364F8273880ED40DACA3BC49CAA5BAFE5F553D5507EF1B5711C
32E17928D26633B242128B907F82CA9CA946E84E8396F18FB4D1C9F2D3A6D13B
C6B93AE8DD633ECD288DD69057F351AAB2D25E6D9A09EB37455E03454CF93DC2
E85BFD19567EA7C79A95C907872F5603C27A5F76D534722FF10FCB40EDB69502
8A8E84998F5E1689C4D585728A94E426B23B8103DAD5CAE80C6547ED846947C7
CB0D5BF28CFC6DCC07D024B7569AB27C1A79399593D71AEEEEABC20A0709B11F
311CE63E0D94A75D85AE1BEA97194A2B62D7F5A3AF54BCCC1ED05DDAB14D19C0
7C64F7E34AECAB27A1A571B1D127B4AE78A4E9D77BC70743C30BF59EDA5E6206
FB74DD581040F921CCAF47EA535BEBEEDC09E5F9CE40F7F845B1EBDC5B1136FA
BC9898C5721FA9A64D8959043EA55562933CBC859DEB55EF822F5380F0E5CFF5
154FD2BB8D15422F5AF9372D3AD61B2D6CB66CD6BF4C733FA0CF3832B8A12016
A5AF5A64DEE8D4BA6042FA195ECE203D69FD06AAF8C72659580928F44039EC6C
77923C16E69883362F840A947FB0D690D6005BFEAFCECEDDA1F3DB1A0C2DFFAA
11B149ED60FFD0C08B8C765679FF0FFA221A10977BBF4ABBEE79E19BFA83DA58
B7E0B86AE371F88916F7CE9C3787474FA99D22AD65B7BF32BD714A8F491E2808
B6A9369B642D5FB4378B048A811626E0C0CBF9A367930A8015C023B5538245F2
C015FCF5F235343A90F7EC9BDEC0E8B841FB5BF2DF389AF363A8D67761C0F2A1
DD706C88E65030E021D4DEFD6F871F7EF9D23EC242624851D8A184C40A73B179
2DA8AA5429637130FA6B1435B35CFFE1EADBC6A675A7CE095341582702DCE4EF
EF3A673DDC442F02A39B1C2274D5C4E09D5EF58E253DC0F8D3DDAF5AF7F4AAD4
51781E12C156A0C13989BD4CEDB7186444F1649D8A4E15591C09734249B37BEC
07959F1920EB0B6ADF80F97B2DEBBFDD58DA9D4689E5D207751DE0B86F7251D8
0BE818D61E6740F1523F30B48365C2A8588440F9DF56D327DA01637CEEE0B707
F36EFC28E1B3A46318DB4A058B98CB92367AFCC84723B22E05955082E1FB3C5D
A2997D960DBCE77385E78500879B375DFE6258B3610AC8145BFAEF69CF8C1849
94DEF49D77D9F3C98E953BFCCF3D7166BB4BEFF24F60924D537A4B2E5568C871
A39B3C32BDF8A354C9CEC1281F96770C9A13B0C2720DEBB9432F01A550980BF0
1404E87440A3E6197D5DFE27452051462E2F3A2E1728C6C32537B33DCE4EBE81
5CDEA4631EE275B83B62D4195BD05545B04A521EF4AD03B558F4AC437E82947F
58A30DC4C3823185A18F10F21A04C3CE364DD00222E3135715814EFCCE88F9BD
B696284A5BDFFB2108B29B09222E86FF1D890EE2689F27AC0DBB5659EB4FC9BE
78A90A8BC6988EC021106493CAA0667D6EA67095F7E64231E9D8A5F942BA9513
5C08ED14956234C19F7580C2B003661EF1F2729556E93802297CF25F0ACE1D65
44668A511FEE990DA3A112221FD4161E90B8C7D900193CED0B6E1698F966B4F1
C15961D374DE25A7B0EDE87EF9DE8BF75DC41C003B05ED038B66C6CE38A97957
AFB653B04F2614CD81E64F1C330C0EA23FFB44437311BC55643D5AB23257F948
4534F38C37D19152F9B99F98DD697B9DD91E41C8DFF89925CFC5D85A28B616B9
EDA1ADCC3616A5D11228209CEE30FA83953E0F95D11C201018FE91AFD0B44644
1E0D4C268B79B86A81A3041A6EA24E085EFD18962E446D65DF0F65EF55031CD3
8EFC48EBD2582C723C32D368C2080CA8069C6B0CDE19AC94E0BDF9F7704DCAA7
8FDB914A7DF0884F7E2BF3CAC51DBB388102E674C972E3A3DDEAA67148875B3F
A6DB4D7266AA1D574E595671D73A3499EBDC256E313A5A19233DAE151C63CF7E
54B43BD28AAC792C2E450B9BF1EE715F65BC146CF13E9FC00E316AD709E0CF9E
BBA3AC28F42EE409EBE71CA5DE4E232A37F459D0EF18D8272A518D7380386793
5EF9F82706631264A3631413D94E02A669BC69A711612F51064C1375A60F63CB
797D3F2267A66FC82706705826819B52AAAD0F72ECE9DC7CD4DE6CEA6D5E8BD5
EC5A3633B36E531A430598881E5E00F9762A049FB15DC548DD9B6C71BE4FC366
2B61C59F2CAF8ECF54E132FB78F6843DA0B2594EE9642FDF96DEA84CAA9A6FE0
F9EE7E854D53B85936B31C808693E66B33D3D4FC762880B589A038A5102ECCDB
8736CDCEC853DD25DE15C6F86294CF38E4AA678BA8A08F81174FFF1FA12D73E7
AA25EB57451DACFEE99AFB89850C6243CBBAD33F74A53E3F70FB08ACC8E0D151
442175A1B1EF865445EDBA2C9F4E71A972E63B498CD052FC87931B81EA6500C2
268DD643900B9DE5B6FD103D2DE1F3B7875616349EC7A6B72D81C1624D48749B
7F8796D2855C1D366F07CFF3950EE828851B409827688B0DC75E790B8C3BF5FA
A2C6D758DB6B0F7DF64C81DA33E9A68B9B834875D96749FD58506FFBC9507DDD
77014C2924CB223E405F48F339DE67B23AA4C8B47CA0DE5E713A988B0833D77D
22C6A4E93F0E0210F030C09354A99608ABBEC8F6ABDCB403F0E9B9F002E0E963
A85D37889376D26BE35ECEFC05C265F81067183ABF373060EEE77393A53270FD
8E621120116AB4C81C19328CD271B372032A0A3229790B7831A2EE223AA7588C
68111E3120000834F31E53D51A3D12A141F41BF0471E32989755B7D83FF58464
7B807D752C9F0598CE0B324996DD0DBA1D8074DC6D874CB2247B8358B43FB427
0DB6395806EBC72923899A0FB79F8113DF87DE9D4BAD3A8729BE2E79F4AC51BA
4EFA0965A11DE5D53C5A66EFC05539C901B03E68FCB40F57F3C85743260BDD24
1E10AD256DEED77B14571B11FB879018812A646471E9F0C1819320B766793F24
9827D7B0C791FB75399AEC03FDDCE6A420A6556B0473D8CE242D56D62EEF6079
504A5809102BA714C1D454282A55B106FCA0EA4DA15F0FE86B4060A052979EE7
9B616B0E85A05CB8C603B43394DF2A4E2C4B1EE23DDFE63DA3C7C8710FD5B93F
2775696BD36C6DE515EFCB9F1EE295C55CB1C2F4E43E67F00029F54AC2D89675
1FC8A196672FAF4F23F9D40B1956EF5BE0EA84B15E6A8F1FD76BC306585A1225
8CF5584E8048A95BDB54CDEC59A4699BD9568E2E9A1BF9D2E5842CDDBF74140C
3E06CF36C34709E5223CEEA0A86C9C89D9BD6F7434E9462CA6CE1CC41034FF9D
DD7C0B479B82352E0497AF024C1D02D39B4380965AE8EA3789FB48CC5E29C2A8
6767D2874B817EB8E064F4DFDEF28601CA4F43E13DB57C81054245EB54984558
81367B21D4B71CF5A14A3269EC5DB4A9580916DE799F5F09D3C6656B3F87A0CE
1D458591A88B2F51962CBD6085B3E530D4DEB4429D777D6C653BF3C326945F5E
C60809A9F78E45BE3409822E5A52593C997CF959E00469F192A288CEA5E41229
3FA1D62FCBA2BF778FE68559CDDADD31F2F3BE22AD097C23E3D43BC2A5698E1C
EB0B5AE3BF68F02A192428D4C5BDF2944DF4D3FA880DC7C73D37186DF6A9B62A
73482C427DC7C43DFEA873FA4F3241FE1CB13D5E4D777BA1B20B2DC5E7492FC4
475FA531D5F9AD0026521621F41AA3D7E7FF53A0F7161618E2AAB51A9609808E
57CB966FB9721A3FCCBF9B37AD7801A32386E6AA48764C909B0F3E3DBD53B7CA
9E411AD23929B0BE66C44F3F80627CDFFCF8CE1B870927191490DA5181474BCF
AF08E92C9966C19F581EC026DA1E7C55340CCAA2C29EECB5A9AF76FE1B769B87
37C7F50A6787EDDB73669DD6039FE44C7A035FD97C16DA743F7E26BB7BA94965
74DDBDE48F2840FDA10178E44CDC08B36FE5FE6655DFB53011C2D95C3D384864
AF4B530AFD8A10A4479EB1B7ABF80D8F869340B27ED5A068F6A42402BA3967B1
0B0CCD4C5E6631A06E36F445CBD959E396C85116AD2917EBBA9FF678F3E43F4B
AD30363C396D95993B850D16B50260C9C30CFA7DD1FF2737F1D3E5D466E8226C
7EC9B0B2C42BBE5DAC75C41889A7105C0D9DA0422B3C323AFC75F0E514166139
84A2C4DF565F70BFFB8311B01ED6871B8522B7E67A25B2CF0F8748370AFC4FCA
791350BAE805F3499A0E63F4D9C388E4A864AC9AFDC0AF5FF81AE00D6E6C276C
775DAEA6F594E6B091FDC72862F98823E348C2416FBA3F5D07B10ED47D8BC757
705EC1D9682EB14264FB488AF7C5087563E054817CD2D5845BEE7A690DAAE1C8
0ADCDE2D28414B71D626BBD5A0CC58E599F5422BAD83C62B6A88BD186E5AB380
3CE32E51EC4DBB64BF440ABF0803D53F4DC632CF1CDA60BEA3D4E10D331ABE30
8DD1D17BC1BD3FC40EB7229605912F59749AAC9EE1D540B4402277A83331201B
AEE10CB788CD74EA72279194A4FCC106D640693701C4FD583C8CD5840B169FF2
6E442B113385123FBD0EAF3788648BF5BEBC551BD6B17FF0E88C7F528859DE04
DA7417C94E261489D18806C15321387A388E68FFBD027B81248E7B2F40234C6B
C28D01A91B6E7757180CDE35C1C2D5B7F7EBE4C9A81AC6ABA40773EECE5FEEC5
400C687E2003D74A23F300C66F259F69A60D949549315DD15877886D253D759F
30E37534743210743F02A130634E70D438E2B5220360DDCFA34384A5D2F6D633
6534F49E4FB3BA34DD2E646B60E780EFFE49485038FF95FB8515B2935E77F83F
F9D12D9D37137311D23479A3581C9A980A0C82AA88CC9139B4943E3FD64FB216
4EC709DCC9B4B09A6995CB7015A19980A8E6DF27ABED7158F2F1BDCB9AB9A407
87C6339647F631DE208615D577871CC667445CE0472E8066B36AD6C9F9229FCB
F7E3025AAC04905CFB5CF07EC1426ADACA3982045B5F62B55B98937CB108CB3B
E19DD38D460BBEFC59A82B9AD41A17D04F0B91E76C71786366E62FCE43489AA7
B679DBABC7B488C8543B0D9D238DE29D0145D69D007DAD4F16DB8FBB2072C9C2
FB1B1CE70134B5060A112BC4E9B6307028009BDC6E13E0A69094392620048680
F6B72A2F1AC1DBD29E0C12E680AC09E96BDBAE63B6EF0F36F698BD630E7C47D6
27F49D1C2F0FFAB33B01181E4291857EC077BB6E64C24E8B2C66241489D18806
C15321387A388E68FFBD009E86F16E00DC0454841956E4938C6DF8A81DB5F93D
6D1F58B7CC0CEC0118A77698E4173745E1899670DC72EB5AF530BBACF55114FD
831AA662D47F36BFBAC09CA9962794C022A83DCDF832A5CCB67E898219842965
140389B64B2C49D680F8AC65FE25D9CA933C917FA7EE6FD539C8535C495E6CDA
6F9299BA48F35738BBD9C2B73BBA20C72A9553B6C6FB49DAF4913E9C608A8317
85480847BCF17CA512A8AF0B7CD120CE0FA2FCB4923FF39CBA5B4156D8DB312A
C8AA4208BDAA3A241789F4BFD3CE966F93ECB9D742027BBF737546E24AE249AB
4C865B2AF89C0B31AACBC857592EDCF0D2AC772C1BA775A40817DDC66C9BE91A
9EAF866C3EFEBAACF27D4C56B2A41CB83147D06B580C3A67A90DCE5A82087F4E
69B7BCAFCC13B34B86F0669792189AA35753AA44C58100851CC85FB60E7DF968
B801465E27FF42A412CD417BCCF201947FA513293C407CB9D6E4CAABF844D2DD
5A87A7CCAD1EE54F8669DF366D3E164137DAAFD26C70760A96A3116812A14B21
C2A3FC572A939790B6FFB65BFBA2453F9DC9A01A397596E2381CDB6388F15CC4
8DFF74875D80D9691027D825A35B712E0861FF3869CC1DEC25FF0F565E56B1C9
2DC39AF0CC1B3D61D95D83750A4B70F20DE86D4B7FCEDB081808AB8A493F1792
3521CF1C39BE0F545435FE0BCFC55B3C9D56A57E96CA67691F8A0335F31F3939
94D3E3966C8CDA3FD999D4E170B78093F1586A76B47201AE534FA1039BA22A2D
2F31B0B75F8C6348AE5E701A0CF7D2AC62176D954F261AB5EAC44985F2B8E409
E73E4618A74B78419E955F4BEA245DF58F1E998F6B1BE325075D5C4B4D9AC223
B4AA42ED70CBBDB25B84EF56B9B4251460F072235E955B9F4ABD8628321493E8
4927F7CFF7EBC4A80DA2D1DC2D2E96E1CACAE3C922AA636F3954FB1AD748CFAF
54A7303A09B79E1F1932E328C03A1B36011AD17150D9DDFC74A5119C22F6CA9A
30105D2AB931D1BEDFF8AD90A00AFE3BDDD6EF014CD23A9857A7055B3CCFD009
A39C5DB4E4B6E0601C7C9192184562EBB0CCADFD5D029F6EE7B2B8526C7811B7
A83DA6754B94AF98FA27E9A59BE3A6C7AB8C3D5256F99F539DFCC8F48B5F2327
FA27B0E3F70A0F3598CB191084019D6563849F7F5ABC08FD5599DC53BAD6B4E4
C137B6CD00389398C23FE50CEA0EE57EEF28DADEA0A2942FB177AAE57C0D5665
B86FAC61030402D5A81D91A826F15CCAB2283A4545F149B1A0C077C4160BC025
4AA0548D4E93583E83EBCE09C5F74C458E671C6792B034BFE4925886554A8018
9B909DDFFBFE4A96F1F836DC23DAC07CEA9151BB3A89B4FDB05BDC8BA3B16C09
168F1E372A89695E72235EF555E3762DA45902274124FAB7160E15C7403D5400
2FDDEEED609165F636393BD95BD73C692267E19016053FCBB22AC8F22E350BA7
5870C64F62644BB102A7B16CCA35D3B4BE9636F89A3BFBB16A5645560883B5A3
B6B11DE5773AE5AF9A06AA792DD7293D1D3C7B0D2ED774FF080795B23B4E2DB9
9DAE981DE43ACA2E51B9B33866AB214C10818B35E2ACD622CEEBD235DAAEE75F
7CB4982A8304C83207070D98DA81698D5B45CE0008CDB87BBCBBC1DC9B1A82A5
2BB1AA4C389131FB17A2BD7F04CEEC32B78372E74A8C3085D65857A285B091EE
0534588D0E32EFC30419CA94A24089B4F6F95DD7C5940AC43AA37C26F368BCC5
9222F7B3A97AF495A7F2B527240A3BF51F3FF9B72ECFEB8047907EE46804F69E
3C31C1FF0C7C204212EF567A0490163FDB3DD89008385759C978FCA80A786854
9A64ED2CBD1B1B450B5BB2B16BBCB0714F91A9DC1CDEFD3BA07154D1F65C5981
4CBCD9272A5654316F01749580078271E4AE65007DAFCD7C871BC80E630AAE94
119750DD97A3577F89331CC55DB78F779C07EA23F8F3B53469585A683D1BF0E0
7FD71F593A04445480204C51273A2243EB9E2B58B9201807CB287B9B6110958F
8AE79CC20CCF19272BA104711EEF8708DB4091F5CF994DEAF0039BFD962B3C0C
732D54356D07AB78A6EE9E11B1C87BFD898670D940E38742A92AB81B01B9092C
8DC53490864DDC9A3B24E4E4CD547C9540420A91749AFAFFB185D5177C13CD3F
C2D54EFA893D48EBE1DFC39A277186B4536CB77E73602F55EE3D3ECFFA56DB16
21DCD543F52EA2C8DEC9A46BDE038E272914A6E9E2AC5CEF9F939A79327515A3
1DD77976265F613554ECBFF3A058CF327A7A4D88441297B981B5CD5FAACB5821
8CFA0192AE3BBA0B49EE279E7BBA235CE8DF21D4438F8F467D17348728927339
58AC9CFD389C5D516518398B98EF97F1E7B59703CCC558075404D13E49920C8B
EC099EDE4DCE4030B697E79922AEB32958BE1E8A677A7DCEFD80233D6B9BECE2
64D19009D10788A7AADDBDCFB559A3228C582BC4ACD9224F0ADF955FDE1B54F2
7E41E1FE35FDFE0770F1CBC596B8D5CFB8948C94F867FA620D00411E591DB3F6
4930049606F6E6DAD81E3B829D10037D4F250022AC169CFCCAF7B4E9DAD17FE3
3D6254A09349DF9D70DB7987C808BF08FEA787E3865E639AF21CB3E47DCB4E86
757060CF7EE1DC4DE736760F5CF3B47F7BA589A58E1F7DADF05F7019285A4349
F7CC8A12B57CEB986AA1C9FA2BA8C45C94919234359AD9416D67F68ECAB1355C
50F246011AB1DC9ED26FD0F1E4E4E31CA5239A449B6B060BA06BFB17FFFE25DF
4FADC7E1A2C37534ADE0DCDCE6AD1454DFF1C8B4AAE9F22396E6B95A1698FA15
4975C15A9386F0E3B1814CB27138B926635F6E7845B1B28D923E4C1628DAC087
5DAB05D7CB2A1E10C8A197CED9A180E2035E5D03B4798CF3A66A20FF26D2C156
C2755A08FA58A8917CA80C31C2E768A4FC6A36A451D0FD937886D7ED3F22DB92
088B5D6A6385747AE505FC9C5EC7467FCB039418845780ED20697C67C54DC089
7106DD631F6D650BCD6278AE4F45B4060DBABB4E5006349233EDE98FA51EEF53
2681031683761268FFAA3FF8A637E2DA191CC184FA02FD7D73610AA31BDE0EFF
A823A8EB8466413582E5DBCC686AD466BEBF2DFEBC813AF8E349888884BECF69
1191D88E336682FDE5B7A92A72DC9A379962BE6C8DE6366CE387A01273C71907
C59CFEE3C5642BD3B55A4218F156B80B091A806C68007CD2B124386835BAC144
1F2396FEE1CB05A36BD05CDC236656E7B7FBA305BD8D2C6FF35AD0FD32735F78
38C98060E4D9BD6BFA8A80D3843CE08C8FD14D52B22037060D77D0347FBCBCA6
564FE7B35105CFF16DCC8B88C78700CBB47D6ADB79D5639E1A751300AB9F95C6
BEABDA4AE41B665A2F7C931826A17BE14BEC32034C44024D87A445DDB654DD3B
83A831B2F2D8814677F046710E0E051ACBDE41773B033815C699B778AC96D967
F64D7E479288A7D2747C4551F5907B66ED0334DEA8F545BC0573225EEA3028E7
69109A3CEE51F00DA5643091D574027B84BD1667C274B85B66759C0D690C59A7
647D79F8509C5B6CDE8F6F89B5AAA8A8B89114540A1F3ED06185C94C8455D111
E0F5AA4EAF9537010DE525BF5DCBB68BC537FC3F1E7D04513F0E678EB012D08B
4F134EB3D953FEF3F84D70A279F715E41D18E51E16EA251C49EBE85303DD54F7
112E2D44B3F8CC8AAFE98B384F6B1F48CEC02F77F2C4AE2F15084F5C57B3A6F7
E3C3741C19C039FEB26A248413954CC28AA28999D6E4A21FBA90BFBBE07EFFE9
F8C7429B47905B91184D0E9B0CC9A0E2044B8FBB0F056412B5FFA260C837D76B
2BAACDBC9A84A934BD0AE37DBC2067EC814CC5575B88EA6E19FCAF5097D67BF3
0E87D523F12491C796E4038B9DAB42E32C9BC5941E09362CC34E1E8D6734E707
6E8D21939325BE9C8F951DE2FA1CB50DF0B0179FF1123A80AFB57470A50E6AB2
6F3CFB3CFE695C779075C33C505CA64CE82103B2AF2E61D4824993C0BEA63E78
B26E677BF9804BD0F19FDA1B876623088B4B8B19C78C1A0A48D97B4B9616E003
69D49D47FD0DAC92EEBB236BCC3446278AB770D7B1754E091F0E4F77D052E4D2
F778F54C835E1D22C34592289E8892B64B224A00DB9F8F9A1FA8B971AF90F58B
3ACE2BCC1011EE5E71D8D8ADAB1CCF6F6E87B938BB29CE3937CC35C3715CFF2A
CA5380ADE4745599F8041F4CC83A330497355B028DC36AAF162BB34333C807DD
C7F0ADA3EA0C04098B8EC04303657821DA8DD739E66C23178AD80CB3B7858FF1
783DC42D7D3A63CDF4835B961DF1C0D7FA6E43AB242F7B60722FE97562B7BAF5
1E4AF0629A2692808EAAD09C9FB700EE88230A116296B888C3C9FCD41E7BA921
D367B0F308A0BA8592BDC410C942D166098545A7D7970E1AB753D26023178AD8
0CB3B7858FF1783DC42D7D39B98B1E0BCD9C642E2FDFB5303979CE2298D74418
F03F2D9F06194229D2F9F2FC8211B2866DE57AA7A11C37C60965C54F38ADC875
63A8F6FDBBAF7DD40307F715DB714DBFA7D0B310503BCC4A4FBC8E5424456609
84603E1E872F836797DDB8450C2484D2F2E15EDEEBB357ABCCC9EAD49833AD1F
C0B96D9E9CC14EAC1987147A55594F1CA1463E1D05649DC650A35B6D9C4CE0E4
69761CEDFC984331B8950D60E0108AA71FC346A142BCFF0D75224F58BD5971D9
3162554D7F593F5F01DE84D93E218ED142B1A2B451142F689632F5AB8111BA12
D6ED54BBA43B13660C7308A5679355542890EE54BAC37AF9D64846C95E27C447
0E3024A309D0EB598A9E5EFD32E68F2E04EEB8C0ECE1688BBCADE6762E190CDE
E6AC380DBCB7C2B6B0B8E51D4C76C8D291C80031EE6CCB9DEF18F9A178576061
231B3A48868E5ED36E933E21F0FB9C5B1040F921CCAF47EA535BEBEEDC09E933
82BEA0A587D1619E1DB68005C7965750BE080654E87AA569458C45E48DAFAA56
9A947435C3486D00A5847693E14B94978647F8FF9403DA9D33AC81EAE0B0AA4C
E5F703CB2DE745D8C964BC672573139F173E270CA900CB1AFB0520A73B3E622C
C4BB97B9209BE1EFB0E12C32182FC67947EE4C5B2F917191C8360CC8DAA8BA59
FF936230894C92B121299EFF96F2E1B0E6477059BBB61BC7EFF81AA34A79CEC1
1CA7D422CB58C8E2125F46288473740C94A6DC104D71240B5162C43048A8050E
065A3505E7CFB3977916ACD6F7B941CD70C1389B735CE10FDD9D151FA106CE48
DF79DEE5663A8E8C8394AB7ADE0483B15069C85C98CA8D537F2D0956C520A7FA
4645A5AF9515E57AE70AC9A1348DC7B8A64AEE828413009BD7E36DAD065A6869
DD702A4AC28011D57280EB679FBC0566E2F25E69367951BCCE1C4576837DEDD0
ED2C921586B433146DC9A135C88DB3618D77B66A18415AC71F3BF6043D308AD8
9E7C5BFEBE1592CEA0938753571EA4ECFA81043CED8B0431DF6EA11EBFD274DD
A3FCAE379FBADD0A8ECC1B3FBE79BDB97D80CF1EF32324EF601DF0E030A838BB
8BF6BC66B370C7BFE81EA4D8B0B8EB8769DF99B45D8AF3A2138E2755392BE818
95323E2ACFE54AC457D222ECC1A449DBA42FE411EBE8A741D28561050EEFC38C
2CA5031ADE35C2E6BBCE3B73DA68CB05A06FB720B88BF5483E74C30C6B87CECB
4603E3A2EE6A02894A286B557000AEEC4E80699AFDAB9839261F94F3172250DC
E3593DD46B778C2D617B049F082D159051412F27E412DF0177A3862D93DB9BE5
8DD240B05FDD2038AEA57D121A331862C85C6EC34F753E03E99D426F6A4E26D4
98EF8B3A97D5FDCC48B96119C72AC2375E52CAB31F85DDF9A0A0EDBDD0F02D7F
CE8672A37BD8FFF0DDFE3F0B55FE5E4D0A0A6587B52BDA2CC4E44D6F1EAC284A
FD4B493044E28E299A27846387E83301CB58B9424C83D0AD28BC5AEE3FE1BA07
54F9E8EEB1966924F1246DB8889B1EA68E9439216F085AB9484989DD86BA437B
955E06F03D1EBEF2C076AB62399A458B194C91D92AE743B4607BC14EDA36C8E2
D52454F7C7425B6901476738B002F698E49234C804FA9043E442A214481C40CB
784A68E3005BC07CB77432733C8DC1EFDA44C2811255FFF3F927B774C765D517
677A7520234104BECC6740C87A1ADA31A35BC1EB01570629C317E60CD87D8D84
FAA3CC1C0778BBBD42893DA20DE38CADA7489AE32DD945DDAE805E654F06F4A9
02B60120714842A8A0CB54194E0F2EABE9F5DFDCA6F8025862FA3D6C18C78144
CA2843E2DF1B6551E3A9D6E2DC28017AF15D5EDE9A962E66D3EFE7E08FA47504
1541569F6782E7213A06FA4330A10EF35F587D31401158AD976CDF6BA18E8F24
5580AC74F95466CE8802F92D3368E0F408F298D63938587EDE6F09B2E225461E
594C598BC8FF5827A4CCD48F63E5020E43FB210957EC8B19C6C4A9154D37B3FC
B40B23B69DC177F28C2D2F3475CA883A55C7F25DCF82FF89D52EFF0F32029CC9
221280B81878B585704A80FA1F954971BCC322215B5DEDA6F039085BD9EE5805
2F7B4441CDF49B178118120591E82194B40046A8E2CF64EAF31F65FDA3A16EEA
20D8054F8C539076D1C54FF5CD4CEC1E823E74EEB274873A0327497CFD1BE933
9B3166C8832BC4A13F9E53AC3DC48AD699AB26500FC832CC58FA19BAFDB53739
009344CB03DA3278400F44D28ECAD128934E9BD8E09E2FC76EF1B94EFC2C6619
67FF60444A2C9478719F8B36B921ACFAAA1CE03A13F6D150889878AC5CE6F427
AB43C4EB2CA396AA4E618EC54656A9F11DB651A68E4532B21346451FEDF97BA6
4E9CC1FF66E653626807AEA7DF4332CD7EDBF68ACBC1C50C9328CEFEAF70DB97
373580D4A793B13FC3DD0BEB764D458998F76AEF8AD6ABA312EB54ADAC99FC15
EFF0C199BE17CB50398F14A97E025CDF45E646559E88D6CE5EAF88D5EA218CFA
1341516B4CE569E4D08A4CC0028DEFC042C09DD456D7DFAEC39A350641E2E8E8
EDC0308EB82C33457F9CFBA56A4ED76A5D9546CEDEADA207FF420DE757E5A1E5
1F297D8A2D86BAF190DE23F9815259B9F367267185CFA693AB69DB7354099D06
9CBD36858549C3B9143E50C14C14D1D758DD8DD1C0CB6836E4F598C97ED28843
67E6BAACCC65E3B23D30E618E827E5258B80D65E5EEEB53BCE3626B2D5F85724
79BC77F713B504BB4030B6EA13E4F2FED181B4EFF7A58F9C73BD46F116711CF0
678ADA87200AB4D36144BC11DCF2E44D782BD43AD1DAD969368DC8AA494DC70C
E1D6683BC171CB4FFEB87F2752AE3F175E48D0D5AD9C485E8C3B62EEEF57CF7A
5B984E4BCCEDF6B32C91B4495E4F86B23803857946ECD28DF5A948716208797F
8425E5700178C1CF6EE7604B4055A0D4909B62620F6BAE983E1437E5597968FF
A2AADE238B32980427B19544D9BB4F95B059158280C5C8F5CD8278AACDCD7415
56F9704D8CE820D72374D4E815DF11353AD1468D53AB5F7A0C6DE4743D1AB8B9
D7C6C3AD4938CD18365825A40A8BFF47EDE915F181330A574529ACF9461119B6
E66B11DD7A01508E0E2A6193953338FC5B902B9ACB6D9F1FFDE70482D1A24EF8
2D057267160E477B4AD16BEFA44E34D8D988831958BA676DB0DE0162B37A8F62
486464B046653F90A3BDFFF569FE8138E2DAD70EEC20924559C820C014696709
2CC5374ED2D4340F8B17B12316B4B467ACB48DD2558405232EB5B6FAA250AA3C
9838BDDB670CCEE1673222ABC9E532C31C0F7AD51A36781A8B9797ED9BB0F913
1F5CB18780D7CD08AC17F9328462C2517151E43E4E35F4D4EE98A9CDF95C6715
BB5CEF03953B1F67F840D7562DB98A035DC07F968D6984A493D586ECB0D0B2D0
1C0EF8606B7B45B354AABD3E503D878B1B86D6BA10437B7277684AD055341463
F1168A364D3FA2D3E716F1BD1D0477B53BFAC582D33F5395638291EEE5167393
E16B6DD9FB39205C86EE4DCD4EDF45D3271E27D15BCA55F0B52C2F1B576E88A0
B4827BBC5FB86A2879AF2B898590B0A3CD872EE1BD9E8E51B6B99D2FA47C417B
F51D6D644E6E5E1F5D74625B89CE843EE4BDCA42E7910CAFBACADD1F7D4FAD91
6D7A26F4611836088D2ABA0FDC2DD8DA36B3DCAE684D5E2E054572103954789B
315C4C78CB7BBFE9F7BEDBCDBA3F5CBF20964057F342A6E88BE905143A807947
ECEE27ED42C2794C515206A03DDB89BDD8B0DF39622FC47D8FFAA4EFEE602BBA
FFB06E640AA6163070002BAAC18E6128C7C1C82874099E199867F4FB32A31A3B
472D6EB7C832197D10562BE9292492BD2ABB12D94F30BA0072DB4A3731DE9190
25F47B8E9155B40F46589EC4A181178E09B79434A956F34071825BDEE615E9E7
F3380357CCE9386F02ED14A873D2D2F53C664605601EC2C9EB152166B4274118
332E4B10A12646362393144BC3DBCC3E64A58BF8D14EFBBC11E641B21D0737C9
62C953BA3CC579F489859F1282D65E083F313DB1FD984A6955AFF8216FF3E055
99D34F07A9D8DAB7EB6CDEABC20FAD45AFADB0A5668F91360F242F8B0154A8F5
7BD61032836B027B44B0D3D01612292A4947816F8373441445E9563A5AC21594
A41AC57F969632537F525D8ED2C6137FCEE726B7F5537AB35595C5750D11F05B
4A6BCC4ADDFA4E74760A493156C707C39D0C277AEAEC98E6C31C89DF221A0A69
5FAF7E2C8F133ADA5D53FA46B4C205BFEA174650CEEE93992826CC3590B32D8F
2BC655A3B8BCB0C40E0F332CA85AE9CBA9B3AB4E87C4E663A7D595EB87A0BD96
A1B88FF77C489D68B1E19B78C5FCEDC446FA55760A8C3045E78CAFDB8E10E9DC
2A4C658DBE68413532C192CB1DFE172FF37D5B70A5AC38968B7141BD6B000AE8
C00F69E38F4D9CF52003350618F8456981640B0CC056EF6735D050EBAEA077D5
81A8D93A3BB6F913924B2C6E77AC0185099398DF37AC2C6174CC6A9F902F8A80
A80ED788ABEBDA025D81FBE22BB6539DEB0487EBFB3E41A906E701CF299C1B2A
53C3CD4059BFF6AC337E49586FA38CF4EAD2BB2A5D7EF3924C25FAE699892726
C0E1A557D828F7BC549B6EA8D6CDF71A9800E2EB79405168B2F25F82B3CD636E
F6F679D03DDD0634E1810C4E144825E7AA2EBF69D95221E4F8E12DA7D57FDDA9
0FFBB2949C9AC6ED5AFC00CF18767F0AE2FB05E4D361E82C7FF35708547E4486
AF7CD8CA09762A4540E588978358A0E13DC442B2DA16255581C6292A898E046E
6EDAD6BE1FF5D44670F74E090C52B2347DB622BA3D2DD9E668915A2E811BD877
73A6EBCCDA5B5CDD43FFC6402A60DF1300DD29D7ED03A7F32E96A85EA7FE08A6
E4597289D016176E9603C918FCD0A70EE18ADF916861F08D619A44B246AB6CBB
DCD3FAAD7AEDC9FCCF1CD388D8D3DBA9B0A59F945299DBCCF42729861451508E
E284575CC5C4F5CAFFA57436A32858B93AC58694A6BFDDF91D4A00BCDD827197
91BA1FD2B37EBE3666A228EBED53CFCFF5D16CF00CCB3B9A6A2BA9ECDBB43544
B1F036DE7460A2244C15EF835ABAFF4660DCA63098458F31E90D4E282E6239D5
F47A93FF95EA600FA327779B5FA01138DA37D9C0799EDEBDDBE4416034C34804
D6447C36C3C6FDF1780CF7A0D392D2FE54799572091CDB7749A04E3617F347FF
5A23A4CAA8A8FE98F8A8565A7DF611B8959146D286F2A43668E68A02702D3041
0D5FD6C685518965BABF8C725995D8366308F3CA2597DF80411D5812A5B0EE50
67B4B82DEA6C13F5B80E3F6917B628F2B8992BCA2073DAD1FA758F6FBD90DFBF
203B02B0147B9BB089AEF4A13F6E7DA357F2A78D03526B9751BE6F9CE0E28B86
2EBE107FA11267FA203F8FD3350FC1E216212B65248AEC2778076DA55046A0A1
6278B755DBBF39C9BB6DD23ED71ACC4792E91D5DB0570AB09957C9BF233EAE03
20CC4E274D3933C10B962A229716C546684D867F4E37A86DB01633D8608252CC
9E37C099224FAEB9AF2738E73C61B781A4DCF9BF7784A028FEA2FFB33C2AE454
BD20987278D08574D2D42309236D71128AD3E4ED61B29363115D2A221A81DAEA
9EFA24EAD82346C3D7D5987C33101D87EFD1DDA8142AF76EF2C228A1B6D0F264
7194BA88BF78A428DCFAF09DC79915C8D4305B7845C8063A03A98B2698554BE9
889E0AA44A4DE9A18002EE1D74991625BDF11FA63B5F2B08D89C2876DA7A16E4
983953AD982BC6A37AC09E81B1A91D474245BC0FC1204E4345BF28E4F8713089
D97F1CB5F706AA3668EE11F60EFC8920F75391886EBDA51C5E30762F88207317
E3D99A2995C11498A905D3A9A1F679F43648AA057329EB964A0503D2A7081080
D2BBB96DCA39477FB423281CFC8416D1AB9272AF121A6DBEFB4C4CCEB195D849
70084E3E3B3401042F690632BB5E93765D591F0FE4E341B4E10C31C991735BF3
1CF6351F31504E448D75BB1F1EA20F357E11B70EEC5CA9D9B9268E7C8B32CAD8
BA29B8B897B10CA038E76576F96A61E88D3F0DAF1115ACD938138FD8B912C639
394E275EC58DE958CFFE37BD095A54132D5063D6521091246DE1BAA3F2B0940F
D63D9C390B2D8024D97F19FB6917A07A42E58CA96E7B478228CCA1F725C7756C
A7FA573AA21727C37D548D27830C8E56E4740FB21391B4A4275F6F71717D851C
596D0A393D65AD8615A822DC65720B370A206E2B47F004B89AFFF02031F830BF
E917D3C3FD938E6548E383535A03B25E10DCBCFC292EFF7B8E1EE42A857535FE
68EE57E25F85AD5437BB16FA5233902FA9B8FDF122B3B9FDE61A2CBBB3365A5F
F85D59720A052561E61A88CE28D088F51B455AF47FB92964DF81520FCDC3AAB8
ABBDD10778D4246F4B245B3EB682D871A2C9F4F31A53B6B4B5766C11BC943709
453479BF1068972190E5CF81E99BFF52CBD457A38513DA8306F8935B24AA7B91
46D5770BDFE1176C752268AB8B160C5AE8735162632052D3F1DA33BC86C18084
8F8C17008B4B46B5D37ABBF52286947075C3347F10D335B78CA254029A4712A5
29DDDBFC80BB9DFFB2D5524CB23186F687375EFC32A39ED51CE0924DB9AE1FEE
C08E3F97A94BB46CA7B334E136A1B8FC332EE2700C9B241658AF8A29A8B765B9
CE48B39D2FF96BBA81510BF8E27DB0A7C82602B613684AE84CD230E1C0F6304B
556A87D7960CD27B00D2A799862DF7F611BD2E14BC8B70FEC6726FE366DE063A
E69478D299485E3D76BD8A90AE21D4632093047BC159CD52C4FAE6CDCCAD091A
4BA2EBEC446C999B5CB73C1DBB1C9D629E8636A3C6BA437694B8F166C61BDA36
319FF2856F2F41F2C1A70C8D2754581C5656B28E16397C88DC27982E5EF2C42C
7E546E9F53FF8511EE7C300877926F7C3A02DA03533A0F948D4314F387281407
5B33BDCD80D9D29698BF9FAFC660DF15CE38CF886853018E26B769C902F3B708
7D5A815D7DDE5810292E8A96D06FBF58EA7454675EF039BFB4AED6A95B52908E
33528E2F097A5051B71B654B9FAA310301758011D020765D2E9EC9F93D7F4408
95897E46191D6D40CC6D8231ADA63EDBFA2CFC431D5C494D74B00642C66BA4F0
960A4E5CA09EE3854B1A260480512E22CBB158CE0F33111AD8F93171E7C1B5A1
92E4CF48A637CF5835D431928A51D6DEE6B166CD867C47CDD1E475DE3C62DEEB
0E5279A3CAAC51B57E44A0D5236DD39679C332A86A2FE5FF623A9864D6305E3C
4A83D81E141BB817927731CDA6CB0B240EBF3CAB57289DD3F59C8919F298733A
DD1E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1DA7F2F631C34FD0E7EE6B3735317429D111049B6639DA160DDA2555235
3E6ED578ECFA6389BB0B585FCA9CC4C7F42B47686D65D04513C2B16E59080C9D
E13A7159DAA0C794959B8C85BB556F6E6C38D7BEB652FC09E7BA5B02E9DA17AD
5FC6F6D8BC377B5230721CA8D0530E30033B8FD7FABEB6B8E5C1B76C85EC7170
64CD9D6404562237BA9546DC2E501FD7E99D5BB7ECE52105C0F4DFC5FAB429FD
9CE11F78B19A967034933E40705B5F6DADEB6A20ACE2A5228456151AA19F0B71
13FD5061C2BC81F3C17E4212327092C718CD06F6EF731A9E1441884DC934D001
3F254D7162B7E6668CC3D8150760453FB8315C50116DB1311B2DEA78695527A8
BAA53FCFA6614EF2670AF910EFF7430FABDFB74A36D5DC3A2B2EDAD41CA3B80D
F40B0F542457CDCB3DECB360868C9C2999CB48B453F87BFF1FE9294689308D56
3DCA8C91380EC4EACCA0FB3F03348873E714039DABF128FE25117326BEA76FAE
AED726CCB2A29804911B15F9022DDE46649113F47BABCE1282C8476EF29C377C
67FF8C64EE00B705C75A8A54E1FDF6D1FC46A393241CE914B607F68D1F286059
0DB1053D7E731D2C2FA15A0413C4C91DE878EF7707D955CF0354371AF1D0D986
3BF9720F2987E5F2B173EE84080A18722EACF13022C8B766EB71A62EE47E4FE7
FDBF631B4C790D1C83573631A0507B3790CE4B7083954C4DEDAA36E34188B1B9
29C62378EAA5DC0B4586C3992FC59D0DD536C37D967857A731C4BF124510F064
1E54933DDDA76D44D1C4ED1BDBD31D1EA556E0F7B2644750870933A7FED92622
4A907C3005E8DEFEC4087F521F1ABA4FA5505B04C9E5903D7468FED5298440A8
14821435ABEA05C3600CD1FCAE1457F2DB7E35AE8845343E9F940914D8CF8878
34EF3140DD0B45B1C0E9C918BDB039E3F934319FB46B439F48EBD4D3A8551095
1883B78DA7080842F969BC6C159F56F2ECB89290AACA027AAFF04474AA552AD7
A859557206DCAAA1691BEF73A1B982ED71CE78180BDDA15DF4AB278E8FDD6078
33B48F2ADF13CFE558A3FF319B40D4A51FAC76B1068E6ED69326AAFC99FF524C
66B6082B5993843354848D89514A9F6241B69B3A23D218C14EC42406AA210C92
628D818FA775B68C317F655C33DA81D4A06F339258C79F4E56387DF612B75F7A
F2C67F87BA3D0CFB3BF293648F9C4F5EA7897413EFB32CE30F7DD8BDDB604E6B
8B2292DB6088C0111E5591FA1D91D04CD20CDA1C9FA2FE4F84BD8747D44EE338
340868B69B3D530774E8B16B2B7ACA00984FD65CE15A086C69C051DC1360515A
EC3ADFCF0B9174808940CB5D62801CF50C0C4AC4B3DF7C050E62D29DA3447440
1468FEB32480DB6B9D19714FD7E49E0C897759CCC251A89CFAF38AABBD13F774
F37EB7A91C190BE5E8B0EA0AEF73682C8ECFD1CB469F1B14F299C3AEC2C2C6B2
0A375349E6BEBC2590D1E89031D9FEE6DD44EB2CC6356F4D4BD1CB785477FB77
42B60888767B5B33A97D2AC583E6BEAAA3FB6FCA7B5170B0B45A710450983F79
015FCF94D443692AB08018DA8F22C6CC9584D82B5E95417C4D8107965069C237
9BA08FC80CBDD4F1D8799D111DA0A882C69078B48574AD10276B06F936AF258F
5791036B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.0: CMR6 003.002
%%Title: CMR6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR6 known{/CMR6 findfont dup/UniqueID known{dup
/UniqueID get 5000789 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR6 def
/FontBBox {-20 -250 1193 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR6.) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE339BA29C1C6F656
1DEF13780383DAE38A868377CC7D396B2A05F341AEE0F8BD0A0191F51AD11A4D
2E927B848A1EF2BA15CFBE57A51E3AF07598275195C9613041F71C1AF39E61F9
EFD5F6512FBDA76E29DE6B508F62F5CF9F73F5288DF1C7B0B82C92D3B6358BAD
EC3CA20BDE55DAA7CC58004AA86B6CBF8C410D8287E88BF20588A39309C2B703
CED322F030AA6069869064486CA651DA054FF3F5E56534CA358B0829A6B954D8
9103436E6B06DAD1658BD4A95AB41343B01F5866FC87C4EDFC71F1477C98F8E1
1DCF27EF743FF90BF918AB8C4E5AC35841E2F745480E5EDE1C1DEAFAD8D0018D
2C1F1CFCAD9F6609859DEDFD1648A6CD23D8ABB80747F94899F17C8F3E6CA55A
E176F19CDFDAA0D7C920B3A72051A4745560AC81978C92459EEE5AFE85AB247A
32981139CBE352B248F4BE5F73503A084A3E91F05328EE521D9669E44E202584
5407E7846F9FEE3D54EA18FFB144BF2D6803BF65AE402034B3CDBB40DD24217A
3CE0E95E2717CACD603A958187C42B3558AA38D6B6390EEEDD396F96E6041FCF
6F8888221AFA87EAD79F46E0E32CAED91E6C8500879AB6E580C581E8C8CE9B68
2BB5EFE2604E8DCB2432D39D75EE556969F1B2FBDF6A4BC72D106AA7CF22C268
464027898B311613E06E1584707F262F71D9F49D2149306A88E02BC60BBD6BDB
EF41D90F19197BA9AEF32B5E63D5B9FF41B5602F9F786E76621DA54D574981AB
87A72081EA05D6C6BA940EFEBD0904EA4E77BBCE17E20B42E1722617E0F6EF32
F1ACDE9D758594E9C81049CCC10605A27C2A06872FBA9F159CB155609B496ADA
4886F478E44029B5E620DE8319E257697E93E1CDFD27D560E2E4D34507020E2C
D9FF06BFA14E056D81DF701FAC3ACE4BE6C098AE116E079F0044391EC1661F6E
7A93B9320BD7F91E8FD2E8EB3F5CAE997D5CDD35107A1D35302260D1499B8B65
39625B7925F97D917B66BAFEEA992873F07220714F192839948CEA080BDB9A03
77B9DD032273DDB5629CB28B5D8797EDEFDBC601823E038384C90C79012A7D96
8F27784DA15BACE21501C26E3AFA5DCCE81B52B0ABAF71A35D33103EA86F2415
A39A830D559C5C6CA7423945BD3DFA942B20A06D7A8D8671F9831DBB52907AB4
4E54776D29C6085CD9970B6DD21DD3EA8EB09C49CBEC6CDCEEB0BBB1B8827109
3BDE64DDA024D67F098D6C1998506DDFF7907ABAADA1C39C759C850E0C6F8E89
A392D1C9329ACFFA92D361218D75E115F70A47C53B73B356D703E9C499AAD098
AA9C8119EE9E9708A9EA3049E976FA19AD04210D5F6092C7903FD155113F3A3F
269B746560F70970AC9F8D09956E0E84DACE4112C4E7C7F6B3F0B63D26EFF95E
2B2E9699D16BC8AFC4AD9113AA3A974C9E82E877288CF71E9169D2DCC61AAAA6
C536E5604EF0716F6487292BBB677518504B52C63822BED3BD5FD14EB41EE6A8
AD4B6CF90D39F98E12A765B645CBA3E8552FB9A986390212CE119E7C3DD675AC
17BD006144BEC534DA2A860188619F17589008409C5A309CB83FBA70F6446B6E
2B56991B6A03B1DE10C621591CEE45BECA27C54BC8B4F1754A9E8F660812710E
117850E1BB6FD89BB13F8CE391C43DA89EA67E9C3E7A4697790EA26B0E4E2E80
DCA508873A7AFFC11B8C02EF86C2316E8D8B6BCEA37F81A3A87546705F070C3B
9D4D28C366CEBC1EE485B8E2357DBE46E86C87B9939DADA60888AA9F1B92FECC
CC1C198DDB594BB70A8FE690ECAC21A414BAC89BF019F34D2A130F485EAE35B7
2A10C67EA3A48A4D9734759CC93AD85C6A570500AE5AC9973FC76EFA06BF5DDC
26E20E28D16B50957EE01AF2653F8D860817967AA5A9BF9BF7ABCDA710E9F34F
4F0EBCC32B3C9C2971F6225D2DAA6A451366B83F32B2ACB83E746D365B2DE38D
C1AB7447FE7B37F9630E410E5D8F0ECE74DF46C538947B3A167AD9F3E4A7EB3D
60F5425AE75AC3A27D39311DA35696C3DC7282AF1532E7AECE63D13DDA0296A2
01487185FDF1875AEF55A36C17D6A8DD329279D229259463A2F05CB7A874374B
E2320E1F6CFECB9C1CE62FF468C29751ACD9754AF1EABE8E7696C2888914416E
235B6766F20FFBEFF285277B639A51EA2F2E30D207BC891B00F0436008F980E0
9EEE7FB375BB069B9E0BA11DA951A99D8E60B4F920A0495C247FA7DE904765AB
DB5C3B2D634757E43EDD6FAA4DB3C67F82D6853E1170F0B2D8CE496DD4E72B0D
28277BEF172F1402959F64527F9B640619F04416DDB9D05FB2ACD019CB9C119E
E544D24EA6DAC5C69785394EA50E6EC9AAA9E14B904EAF29A733C6D7942B63F4
85729686742F26DEF78DF0DA1CA7CEFBB684F4CAD99021A3B3D1FE03B9C5A4B1
BD04CAC89BB91B11952A2B17A61789BEE0C54B46C03FE9A1AE73D17CF94BA30A
237C29D414C3BCE8E3E2DDF83C0BD59DCB66C4D2C3DE73DA8378F3C6C8035D28
7464399857E57651A53E9C4AA68DFCA91B2376CF98AC5290FDB9BDAD9EF1604E
9B0A70EDDA1E564B6D2456E7BC722454ACA8C4950FDD44B6EB9AD01169A9F845
B06A0DDB7897C847A5B1F42258AECF3807AE936C8F52C3A7A0A85D68160AE442
FE81543DA6702D76AB6E8701F80DFC1D87C961E350D0E52AB2A298B9E5908600
7E14D2A87309043CBF13F69AEAAB1BC239DEA88EB5176624F6046664B1D2691F
FBB2071D3706F97DCCA355A6DCC4D09FD35DC078FBAAF672FFDECEC61050A120
10B5A96629041303FD01ACCC7686165DED6AA712FF8E5E85DE33C4E7D877C49C
6C469A90410BAF60BE65ECD91CDC2EE7AC0CA8BA7B53865F26092BFCAA0BCA77
B80DC51DAD09C93C8DD8E43502B4B68F3D5918C3492196292447732BA90F5AB4
9F5E1D634ADE1CCAAD028DE5EBA9535F6FC5908DBD2D643E0A7E059C8C386FDC
E72659C0033F535C0D7F6B98D0335552D0BF3C6E302B672A5EAADFCEF81912E3
8F54E6FB7EC2B325125159713D0AC50DEE3673B9B148643727E94C80971A2E73
5E1E13237BE69C84FC039DCE02ECE2668AFD047F21A61BB94A9F498C9FE5CDEA
B274B40728B6F6CA9B6C15BAAF92F465B0D7311B46545CBA90D874839443CCB9
3110F052EB247B24B45A3D2FA6FBC7EB2A4BEC2A5892914B3C5EA3F4F9B9DCBF
6F932D95700E045B49E4B1F2C9D2A42CF39CA2F5A2654E6E8E6E92473D28AACD
5E35C6705EA728F704F5996D286BED433F976AB7E018621A577AED7C0AC0A84E
A032FE1869F603E6F20386E3A190A30A21EA886249ECF8CDDE2C33D73BA8647A
3DCA7A8DD9E8EC8D9A415D126BA38B6771C489DFC419303EE9C1B83FBFB3A0B8
97D64F30E4BCBEC24DF603FF3BF541E00D5804B6B6543D3D2B661CC551D497A9
9DFFF535AF424B2F3150BB39AAE8CDB306AAD37767BA10BADB031DC2FAB16955
EE78342CCC0E8B5976BF98F215461A8C6F63EBE6E2F1A1104662DDE53388CB51
8B44F3534853B8095F3B746A2459C2EF800FB1EF7F235EBAA9731E3AB3BE4369
1D3636E3ADD5BDF0C34FA80E90D8A1DDE770943FD196E0A7C5F1FAF6970B34C6
4673AACA6B2B5C12B9608521AE736C1F4B97209B063D991300ED5AF3D7F27E76
68E0B858FD8BFF86581E2B9548C691E3E5D9EC4D39C9715CDE86C7D22223CCEB
8A38C776A30AF14912390A7546DBECECD7A687D4F08646E57A12C80DCA022B7A
33399761A50B8E0ABEFA1163EDEC3DFB5DA3248792EEEDD894872D4E6814B4C3
548BAFCDE0CABBCDB97EC6D1BA47F2E77CC1389BF19D73661749AC33F46A618E
A665A85776545BF9662F2179D7BFD604FA8EF4700591AF3AEC647E27B24B76F3
133F9198DC15C1AED830E737909E43EB91C334C44BA35810007A3888E33F5DA5
B3B2C35481C648AFE630CC3E08F77744E401B2934E407D1EC17ECE737606B076
F8DE8EF3344F57495EF49D11580D6FB28AE0B1422521B320843B13467501CAE2
3DB93D7BB779F73B6AA30050DA74BDBC3F8DBB30F32EAFD07734A151BB2BAED5
C9B1F790059339B64BB4146470F30928C9A49AE88906BD6FDB7431A4B50809CE
0F67ABA01CDCC2320B0B097187B9299E3D80CDD7BB5DD5BFA7B28D924C5633C5
45A23CCEE097C41C3759C1FA8DBA0DD95034BCA89BD23FAC18C70093F40FF2F8
0FAC5DD4835F2DFD40540E9A9E9FD951A8AF2CB766597DE00147B163BACFB7E6
EFDA4DED594F1C746D8B46A1145E0E4058F5917B3F21E9BEBDE745EE72CDCA64
FB31EF7A2E55265F32559480E2B6726D3DE26FFC97EB4E3160F117E890C4B2E5
8DF310E6A728ABA85540F571C024F8DD58E1D7827FE97CED5EB31547EBC36415
02B8C0E10B7E37D816F01D56A364B8552CBFAAA95BC4BDDCFDE91CE0EF005B4B
7AB56FFB47A093AEDF0DE1EA48FC8103CA3CA1470864D2693E360006D05668A8
AA422CCCED20DCEEBEA5CE0DA1EFB00FB93E922B18124FA11A88D0F6E0F719DA
57603DD5DA42E1C56C2FD9E5415AA199D4F334C151C1157E75C107FBBFCEB706
5F4EA47A29B54ED8CAEB8DDA2F53D2A703B95487619780A52DA1270011648A28
AA64338E04AA5B92C1EDF3D8DA34FA6D227A0325EA6F22E9B38B6338C657BB21
CD4C582DC04010330F62923F817E4EDC6E5C0E6500F2A975A8A95BAA30C4A134
BB31B5AC45A2E7F6E9CDFC810D41344C4F606049445F8E93D74271C1E29DF7CB
5459593BA28AECF64D903D3E4D77CF5C04B06DE44A41EE4D9FC769854503AC85
69E4A5106E84016DE3D59865D4AB30BD6C9E45C45DCB5408421CC50CD6179C85
34E55CC70FBD8FEFE9F1D5160664981716E3BC7F24B6F54E0323D9BC4B692971
24419EE62D8B0BA726E2B4294A9A76F328B8101DA29E78BD5C4AC383350FE196
4D42DB1653637D19530124858950C22F1E9CF5BC07D46B7A58CDE19CC88DCD2E
7FE4EEFD8AA6047E919823C8CAB2EF5274F45E861E6508CC11A8AA90AED2403A
B2BF1315C2157B3B50A3685205D93E40906EEE9DE5985405974BCE0B84BB37DB
080A45C5237B269B93C0A7CF294A18B45464A41F604C494CBEF829A381155CFD
71CEEA54CC39EEDB6DF58A9896246B09F95DC6BC40BA6916AAB5ED3D24F66154
3662F8978FC63DA9280FF7ADB09EA5BA79D3B66E0C88BEC1EDD78DA93839073A
A4D7B0E627000C4ABA76C47CCFEE92E319315333A5584A951E34C55412049C4A
A5569FE65A006F77B416E0530AB6A8E7AD6C72340AD4CE25937158FABB2153EA
281E1D840206F5DA38E00815E9081F81DAB9FAA8F4DAB305867AC84735DB4F52
A36129929BD2084A8EA37BB6889695204BF7290B68D5E722540BF8A276F8BB6D
451D582EE59D2FF03F6B97DDE05FA00C3D375D2D0AAC8FE298F85CC067B15481
48D70B6A0354C705715B891915FE8EA45244677B9FCE81E72D66177E309F3F83
F744B9EA9E55C3B30DEC6E5E03B3988FD526A82A5E8E1DC79127FC62B2FA7949
B3AD3148868DE22BD4B5708E32CEAAE6ADEED1F463EAB9692411E18F8D6BF391
126B2700B4CF3B59D02E3F8795130C96285A63FCD1E0F647ACB1D35E9C58BD01
1DD06BABA00CA4343BEBEDBE677E053E9732B33A7495DF51782A07DA07F5646C
770C957AD915CC70BA8E08BE7A1F4E6BA5BB9C603E38F6FB0A2578471C4D02F4
283069856D926B9076EC73AA39CEB0A061AFF1575C7093FDAC9F89C3DC06EA45
06F3C2A3BC9FF21128B10CB758DF0F099B459A5264A8C24C098110D2BA1A8532
8FAE146A91BA7D033F591AB1A94B8A6FE0FFB610F698D216D58B4EF6C87B1524
8037CBB7E23D8550A620341C6625A1A2ECE7CEE2598D66277F857231A36155E3
984F147783E9B93975AC38A29F2FBCF704C8A04AD84C3E04A12D2321FA56811A
5B6744813CCC187968C5C26BB8D3E6615A912FA5369C01CCF8C0DB790593B190
1A90CFB5339B8771F325C5FC448D36C7312B11A15A8635BAB59CF3CAD176131E
026F6E141B2619EF7F3048750CC9291397F141591EEC8B612D6656DD34DB54D6
DBDD303CED74BE76664E7DC86FCFEEF2001C9DBA56418FB61F589566A47AF36E
C94671C5E8939AF9F4D53C0DE7142B7B63C86AAFA65877EBBB48C64589AFB2CB
1280AC099FC48058855CBDEB6C2D2A0D092267996591DC3B5EC8252984E9B27D
2E9EDE8CD8303F0905DBFCAE497DE1B755B924452CDE11CF4F20893DD6FF7251
427F520FE00580DAF1703FD968E0F8ECCDE618E1EA5820EE6CFED97C78864EF6
26FAFEEE194A268F24249D44829AA360D731C34DC285501E966A959180718F72
6330E4CC060588A2F65AE64A720DCAA818D49D4440F5D0B6C1F6C3A107E12445
F1BED2D3FCBB87A9597F01C7332AA79143564056219BF87D4B907A04F77621AD
054935E883B2B137D3D1C4BC792E8335CA08B6D83227F35736C41312A0BB077A
60FC6488C5E02FD51A10AC113D4EF70038C649C1677B2204A77F2ECBE9B3C341
F4126BECBCA61E3F3801F9188A3775924A62D30FB096B440286FA655EBA00A74
9A4162904BEA07CE68EE76018346DEEE20839C9A2FF71179B58E1D4AB30856B5
F5D97295A097174467010B15D733AAC5813CAA633746B430B1AAF9F997FDAAFD
436844D1A56B8E25A89D2CC4BA6EE7ABD167818FD4F6C747E07B262C99EE2C35
323F0B471586CA50F54C6381B052B15B0C58C19DEA82C0CA29F00400B727419B
2379979CDCBFA966AD513FA903160C571C3BF1BA239540B11EF2371A3880837C
6D6CA2F374280CFA1586427AE975A2AEC34244874E4D441DBAC6CD1828841C91
069AA87FAE849C5DC7C9EC1B9876E59F3CCDF8BB23D939F5348D7486934BFB02
CC5A22541ED352616830A510DE7732E5D8F7E785BBD31C2BC9D348CE5632654D
2C1740F89D57FB2AA1FD8FA3304EA03F757BB8F498ED98E48485722E78D97B12
A05F3A28438084D1CF90AC4C3FFCD7B3365941C45E1E02CB13CA1E99F7FA1D00
1C9D489D5C95F019AB4CE89FA3B6604473DBD2CE8E278969E0A0FCBCE68C23F6
9381882443D3FC16966555FC222F3FC4B1207522201AB7A15A7A6F22CDC9D392
360BF4C95DAD35770E0AC7E5EFF015F2C74ED7391F40EC94B8D1C163B5DEE5B3
911A20C2625AD3B24BD94D2A42405E655DA47D3F94F882CA2F479437B4E0BE71
8AFA4482C6FB270F8D05B4599A01403DAAA90C01DF3AA7C2BC7E66AB6AA833AD
FB6E5EE13E45CC7CE7E200FBFE639F9CFFF5D08512C02764997FD28368969BFB
0876F236EF6189BE73AD827332DF1B2EADEAC0ED3B939CE5BC3CEC78975FC636
44FCBC2CCF4396AC7343EC62E0E4F3DFFA2B880BF31D93ADFE201BE9CCEC8BA5
0B9B919E05B851E0909968DA259EECC6AA0743F25247978CC09C28C4F878E29A
5070E4023BCE95FE0ACCCC01D0EE219FA8344E8F6D7D4347563BF8AC030B9097
41F24D4BC9494915A82EE9FD37FBB6A46BF077B728FB569B1258CEA5F51F36BE
4F4D0F890D782E44748CA3FE8C8A515998371D9C7D2311F192B4B7E7C68FC6EE
3F7136714C282A2570FE591F247A08319CE9EF1E43274E4E57166E31A2ECA506
85350DA31AA4C33C9687F5210BA225EA1007C444FBFA2126769767E47A967884
9F68589E4BAA9ED32A7A466DE35554C132810C68ABDAE536D9D884352F28EA02
8A555D2CE11F30598F44A65E2D86B43ECCBDEED9E4E5B5B7DCDA20EAA09D9FF7
422FC91F2201431A9E8FC624FF44D26C0100183D77BC7E6B1A6CFBD3FA8BABC1
AE4CB0FD382E26BE0A83169B46D91429DCB746A0326243E212F802AF6A56C709
6E70C6C7CE7014AE937686E11622D5EDA1906A9BBFA359FFD53199E2E99D6A32
FF6D53076BCA828F8F0F312F9E68D51F64C2D9355174AC7B29EDDFD33475FBC1
4140531F5272D645DD03CE9A7BA88674E0C531579494BC12F1E952ADBCFD8450
318099A104353C8F2C45186B8B4FE789C953D788099A872B16D6D8F774BE3F43
FA6BA70F4ED9AD065C03A51CD354FD0261200EFB1AC5FC2FF76E6C081BC24E38
C36CAE9349D58311F7EABD5BF9BDD6F709533C9706D9ECFAE28C5A3BAE16A82F
64A29C7CE76BED0B3DC8F374BF49EC60822D054B83A068D7CAEDD3B800BA9158
394678023119A22726BA1024180F40C68BDA8A1DEF6290E36B489BE25B6A5E58
8BDA343FEDC153CA0A7EE03B1466E05A138AA671A035A21517C00A0CA33EFF02
CF147958C3C5ADEF34843F640817AB8145B175532F06C0BE488BE836608F32FF
24CFA9DE22E984FCBE141347D1B6768B5E358855EE7025836FAA01D50CBB9BD3
0BB97B930EA9140FD4697BD9FA55C5109637D7DB9B862CA0A17D488922479EFA
F39A2C002F7D6D9702EBFC7E53E1784FEB625180D1C33A9B08C37F32CEF1916D
6DDCF6804641A21D12593E9A645F2923B4C6560B5CB7CDF32335E8164AEC6BFB
674DC6747B6E8AC222D3124D0F30C79537399D9DCC8C962BACC2A78072A4EDF3
A5B1215C080739E84022D99CBE102580EA04E567C51772A9CEF2F78B9B4D7D7F
5965D4BF63EE484598B1553421BC2B49D9735EDA41DBE14E0C10896B5FFFD5E9
A3CE0DCD36CED44CF03E18326635501375791F59865D71FED61A19CF83C78A1C
284CBD767EB5551B26B6B056991EE56105B86286CDC7DFFFCB0BC5C9826DD85A
6B380481BA3AEAF84F5DA006172D96782AB12046C7B2D3C055011B0EDF6EE9D0
0BAB36318585C0A0F22C4B5B60C423D632AAAC93FB16CAD2731FE048E28C2E75
BAAAFEC6D53DF682BD7DF37C040266C95E789382461E841C0BC31C51D4C9F5DD
FC0170B4E46646974AB7E37E82D3827D7EE4C8B6E63A5A21D10D089F8A5E33EB
56957346200BE141650A17A79613B65505D9E8D18CD42104525A43F38E7EEDBC
8CB8E9CF21DA5A2F723FC56B90803319AE0BBEC082E65F4E8DEBBC5EB251443F
48E74DE626B8FC474E80A4B971D94040416BB8E3B437172F6C4A1BC84483E679
7CB5127CB12B79662D1D196D9FFB84AC484B16BE9C560F334A31F07C50F223EF
D1816886CE184C93FBBE3749614F022E7E8C5C44299E2E4B78CCCD78D9628BA0
01D58BC0D7438E8ED22A50482324C67557BB15B86AFF6C58D6FA1DB517D15E6E
C27DA3ED29FFCFAE0F1B8EFF85A83B63645851D187CC96B428501C83901284B4
B03D82A2AE0B7F46CDDB6493E908
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.0: CMSY9 003.002
%%Title: CMSY9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY9 known{/CMSY9 findfont dup/UniqueID known{dup
/UniqueID get 5096650 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY9 def
/FontBBox {-29 -958 1146 777 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY9.) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 68 /D put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A580F0834F28818EBF
F29D3B2C7C9AFD969BA6D3B7429E222AF78F6DE00CE2C8008A5966422936DC5A
DE549B458EB41026E123FE75E703E046F665B7DC78298A145548DEF8D579E008
39279A5208EAF898A357DF3FD9CE4450811F20B454D86B2947BEBB11EABFC62B
187B12458E022CDBAA6EDF4A89D79300F635D8CD973E35FA8D9B1240B3D30D72
4F30444BDF0B51ABA15A181A3196A6CDF9CD1D38D64C83E745A767446641991E
23EAE067609DC2E84B44D923CC98407812813D5AEF0EA21E560B31BD77D735BD
E35EAA564A570DD3294C703E16BB9F251D54407269C8B23DEAD063018D6EB748
4204A415AAC8384025FA922E7074FA7B8A6C31FD3761E7B2737D4D9C9992B7B6
DBD0CFDBD87D42E1A451FC5C7EFAAEC65D10D278470DDF42DFABC836CF15D042
6900E0DCDD36E7153BA186B8358E74F91A1D43D62EB0B821C0E97FE63F1586D0
98F01E8F6B6F2A435343A25CDD80D3AEB42DC8E5AE02F8837B84EE5EB508B02B
6980D2349984FE1A0D3ED12355D556BA483CA078B7921FB336EDAFC22AE05C1C
5614F5025B890009272DA8C838B81913C872A54F7E932237FB1BC2CE5D64CD04
2D320C8E2E610E9EE36EAC7C28C833F8A14048E751B61D0CEB342CBAAB34D104
311B421B8CE4D903D2E2518BA8B734E2637E2CA55426C4A87EEBCE637F8D71F1
54626C52083262A5A9A3B49142948BC1AC0B7698811AE81FC3D3B1C14E6C274E
CFD6C480514F3649D7725A0A14C82C9D537B1C5A9ADC816340B8B4E484AF55AA
905EA936A83FE2BE788D084469008F407447E0077417096333F163CE94CD3098
4B9712EE23120829AE2695EA63975492DB2615214B11C87ED0ADB776ED4BA0B1
40D09D1A617D4F57EE1A9B05C8D5F42AECB9C6AE67757DE6307B1A9C467123DA
773239976AB0EA052B23F263031ACABEC9EEC7A43ACD0DC2D7AD66664FB0D937
6A0F463A173E8B90B2596DD323D2350435D9D31B638112D70492F44769FC0C6B
40A291FE78AA598CAFC19E5AD195BE7264F0EC29305D36C7AB8F2A733797D75D
94C8F7AAFC49C13C108F514745A394F460294C6F3F44162BBFA878F773A5115F
062E934253B786DA2B9A6E8E843E06B97075BE99F21B330D6684998C5C340B72
09D69B655097354CB682D42120ABF5109E5522ABEC94D05E7211DACE8737A1A9
0BD3EC16F48798E67C7C85560D79366504BBFE5F7F5EC1B05B9F68F98149A02E
E53F321C213456D802C01871E9024F965258F71215F40EA71057C15E349F06A3
A016BF1B7E44DC4766FC92EE500EBF7C47D36B1EA34981EE6FE38FF4903466A8
C9020B91CFC731642003AAEB145EC0F13D6281B0838BB4236C220F6F467F7DCB
C79BB9CD5B6A180DD2ED7F94DA6B5CB833E62E898BE832DF601BFBC8148F9430
C8AC459F23EA2536E301C9DFD3FFBAF4D01E7853B60A69B5D012DCC0054C0BA2
1293D3B4EEDF7C5C78118138544A60FB1A500F72BA39E63EF5D97D68369850E6
9B6336DA577128DE68FEB71877360D97204B5F3C06E808BF95AA6D6013524BCC
85CBA9FD2CFEF383645E7E960E7AD471A6A3B8B8C3A0A0B8464836499309D82F
52004FCDB68997BAD9E4B5B881634FE1213283B6B19308BB67F2364F7ECD5534
467EF07CBE71989FFCBC6224417C0710EB3EF2676B9DE846E7FFB1AA6608EC9A
76C31724A19ABB2AD08CC102F5DE8E4E513F90A53F06D440A66B000CCAF6AD12
6F4B161B56FA5FAED65A24FA183B84F4B45407AA69624068EE0E3E47BBE973CA
C72137823F1D676131C8CD5070092CD73FC2A93E0480310E21CFB14C031206AB
411694AFE7B639ACF35C28705A115E98BC69C66F6C58E9E79902453798D76267
29B780AFB6B895B34CBEA51530E8300569EE4D500527BA294282FED81F730A46
6ED19AA5AD45852739882216EE937FC45D75116BBDBA6FF4B4423B398E383CCD
A7D705B8BA85076133E823300C3EFC9EB9399575F5F6BBF868265304B299AD77
B6B4EEA04C83E163E8CE2BFACA65F9DAAE3AD2B0F8DA1F986E6A12DDB2AFACD2
217E37B093F46FF3E20E587A9490401C2833F5844763FE2C528E151214E8CA95
018E1D8D47C9EB5FB4F0EA2A6D064680DEFD2C5489298F83B58EA7FA8CB019E0
671028C59C3E007DD86CD247889ECFA6AD6DA2433B02180DCE6ECF9E495D0976
D063A61B007233DED5E3F351D790F26D4011582735A69F37E7CCBB0AF254B925
B378522B748BD9BF152E2187DEA12BB168C42AD8D67D18567393B35DB2AD8403
5A7093EB59FC276525B8796FE81944F7F03349BB077110E182A61754ADECECD8
A5255DBADB523F3DC251A7D97F17DC76281CC632FAEB382A972D60A15FDDA57E
2F42AA338D889B47F6A3C1FADAFA8D11D63EF8D0C8C0FCE61FBD8AD34EB8DB3B
722BD86CE5B1268F704ACE82A39466DC2D96C9849B9422567FA5E728B17FAF61
59A77E9B3289DB807DF54D076139E3DFE176C3131FA4540C1542AE5AD6200FCD
B92D5DAA77DD4D3022049B6EA2A037FE96E0CEBB1608C663F1373246FA74D70A
BAE7BD37F3AC23E003204FA8270B4514DE1FDC5401B69CBC98A67A5CAB5505F2
87C242B6ECC86E88EEF44B9C79DA5F88CFADAE8B4CF437A7CBD5E0C01A9BC479
E92EA48C808820C567E74D62ED7597FCEC53DE9A0B3EBB9A3FB50AEACAB82BF9
2AA56D029357AAE016582592972ED01C0ADE565E87607F17BCF4983E3321F606
ED664B9516D404B277C2C1B0F873D469D64A9744D9C1897125FD471E71BE060B
A3A617DC8D812E184664BD83EC74EEB5197611380F2D859E1A61A14404493D04
B5537C04541E557CB5039905F37E72B762EBD2321633E12C38C409338AD5AAD3
1A507BB2B8F5235F0614D0CEC2BE44CAD504C9B2CD3E45437A493A33B9BF8A1C
3FE66B1E673449A54E8E3C3470688E94EE4404C888583F7C96B43A592D586D25
8AC1F206EE5FBF3AFF7EDF9BA91EEC6BABD573D455E0AD6802E7E23A662D4F12
FDDA00EA054CD331DF86C099C4BE8AB4EAF5D8EC1BFEFCF50302BE61E6FF26D8
1E88C544570E8D6F7D875466C70AA91D6CCD4DF4BBA34FC67191D1692D3FB76A
66F114152956A5E38345E7495BEB1A389B7D0A59624ABA784F77C1BF7728E556
F9D97D71858D61624C22C6914A3A995BD75922A2C37EF2CA91F923A4561CD3D5
2DCEACD9C3A65A9FAFFFA4822E79D6D89D6366DA6362DB16FF061840582DA35D
E4EE8308040C2DA5F298944EED470D6E4E1FF58DFDDA96C20C85E2DF2652E12B
2EFB8F890D301E8CE777678FA786E552A62A60DFC369AF4BDC069F5457FC86F5
1FB1A38A2222EEE86FE1AC9A8227663AE33217C1F381115CCD04D2F381A27E97
36D356DC64615AD63E1952B37AD4F967317D76A6DEF039CE8446AA634086BFB7
7B0B34F595B61ACEB346F51ED10ADDB7B852B5B2BCFE416D0435A7CAA4C9D9A6
152D9AD938F39E9756AC752F1604D884992BAD768C720C45479F5AD8E53A4832
1B44D6109DE4460A662DA6081465E2BE02ACBEB52259E046767DA24E1416FF44
D5AA1D303CC4249510D703CC6CD0FD7DDB078A91089FD86ACE1721F875F019B9
82D7C5B2530567F2306F47DE90EADDCD12AA1C693B1982827DC36A74C86474B7
0A8A2E084CA403AF654E2F8488806B943E38ABF544ECD45FECDC441DD970B180
FF3FFF1A50D5E22216B240A527F95DA1E43770A3867F225DD2A8AF01A965E06E
A063997C4CDC0B16B52F9B9C8B0DBA94F88F26A7A01E596DCF8F33DA3DA5B02D
2ACF771F25A1372F521A80B93DB0337886FCAC0A2E8FAE0D7E1E0C31EB43AE3D
B4C2020F322A9857A9EADFA7782CA70DE7421B9A83DE1873EED8D096701370B7
7EC33B9C104E9CC16DF8C80ED24D1F91677E355DF037621ABBB75E09ACDBEB82
30F1AFB82FAEC4D9E2DA93303F72C1078679EDDA35ABF2AB38DFF091AEB273CC
5A7B29C0164977160CA75F62BC20474C7C1F127AE7E4DE865FBCEF852698AB80
B61340CAB6F86017FEF570104E46B6FB3320E78D387CC58DF1C4FAD8570C0126
B6F54AB5BCD47904A9255366AC9C88576456D3CF605822269CC65979EC3CC740
AE3D09257BA3AC7A364A7F5EECA3E658AA20B53423553C416D98FD8100D80A30
A1B19F029B7473070D7C60CDE51BBEEFD2B45B1C82F4FE32A5BB6BB5BC32BBB8
F600ABE893B83B806A5435AE2B40E5CEA9068C6ABBCE73C9B3533520439F28F5
E171DB1DD90B2EC04A1F36767B2B97D4EC0FBF217D4E80ADA5383BADCD7E066F
5F4B23738A14F19AC7D765119AAC9AB6CD0A8AD4EAF8955CB9F5BDB0156CACFF
236D24E8A12AEBA549FAA9D7053D10AB7094B5D9B86FC7375E245EA8D7FC64B9
859A1A37C006E0449AA8DB8B89730348C71C7E014A2EF8D871AAA856407C33C9
392720173DA60850938D0537564455C3957631AC8F8C0B3B29BF6163828796E6
0944C3000B990715188203B32BC4E3FCDF173A4A9C78753AB7D76BB9A4C2DA4E
3EC638753D6FF6356EBB07D0A9E8D3F50EA5451FB6C836B9E5EBB8F1331C8CA0
B0CD271AF316502CBE87F652B5ACCD43176AAA32C6530C69E77E3C85DA496F3C
06980ACA739DECB5D986622AD81F204579218660EA791774C2D11878DE23F858
BBC4ABC7EBA01B7FEBB32BC914FEA8E5720731FD43F8A5CC53954D13455827EE
9C7BADAE8322E77EE7413D6C86E6D378FF8044F50F529E765A1CAC29E8B1D91E
CD40F70F2D4890E0FD04502933212D5AB176DB143831958605C1667B8841E770
CB4D513DF0C3182C23CA653A7A714B2A8DE29D6B203F5A9481E0CF3FF073FC6F
476B0B205136DA43650A940035A970584DD7D06B7CDA8E960186158B75FE3917
9B1D0FFE45EE1606C875DF635B80F5A9E5B67A6ED748F52A53A710A45AC20BCF
FC96755E685A3B0712D5E09D860986C61C631A8D2A505C57D57C1D4AE78C552C
DC5C9EE15B82A4C3020331B78FDEFDE53974C391F375E8118EB7B2D23DFA3F15
389043EB6F33842C82B896073760197B13D3DAC172D77779DF517AE31BAC43BF
5BD6F75B59AAA59C7EB81B776FADB720282DC06BBC9C33AF5AC0BC59F6A0044E
3898A4B5868EF32BC4F980DD863E8EDF6DE3E753A7B3E39F8E8BCB3D3BF14EDE
3395E73BD07440FCE88FB28A96878E823C1E5519650F2054EC2CF733EB8AEB0D
510E5659A3179C3FA8E31EED621BE0EA648D76C370C3CBD8043BE206F28699D7
5871DA483AA5D3580CD55902C85DB9EF5CF5D3191738FE64DB42410F5AB8ACFC
CE07E524BECA5633B082F4793002A4A7215AD1BA31159A30D72AC60EDD0B2BAF
73C9934C85C5372B47BCD3ECEE463CADC05CE8352EC1399ABE2465AA53E5965E
79400336B1F5D1401EE2DA5807F9701D1086DE505F6AD4E64DD4F3E5E90CD64D
FDD25E6FA03B679597CFB8C5C1F03641CEB7B9B40787E70BC6B063621382E3D5
1287365426E44A2EA208C26155CDF782F404CA7B3C6D379103EF4A51CA3F1343
22B04A0B55CE5A7633175838B9E50480E9B80446CD3B541362E7A10BB3C58A42
88C0FF580B4A0296073F5B6505E4FCCA5D4BA2F7E8D59BB04EC9ED4E664BC2BB
8754777594DB26DA0985663D321CCD13FB261BE8A771470DDDA783493E452A87
D0AD01AFF8EDCB7BB159F1408FBCC52F126C46234CE6BEF241B49472102598D6
91FF2DCBA2CD0E6658A61DB3591EA02E4DF202954B655C5A3C34B14CB60CF9C9
2A6683AB282DFD79B33FF3A6AA524582F174F11A5568159083496B242ACD2770
0ACE8473D363AC11250E5DCDCD3CB2281B71FCEB8AAC1367D0714796AF3BF01E
80BD4B05A0A45E6CFA6C672850B9DF113F5EB15923ED885A0E4488D4914B62A2
FAFB6A63F8AF0CF0DA498E1BA68C4150B6E59CBA80BD17026FA09920006D2075
BC6F1010D0A10648A20D8ABF8137BFCD6A5DB3606F6B3CA51E8A4645D32E5966
6DFF7537F65DA4268A86BCA5791C21F5FA9F4C2F1F6C1AFC4D4BADFA63609C4F
5F5158608E6FFD9C5BF00646C3AAB983DDA5E37A9C2EA81796B161A06201FB6F
8EACE87008EE7A008BFBA69AAC04D73A8C0447FADA0249D8861ED405537E23E7
BE68C4349FD64A14E3A53D6C6484E704BE4AD5FA0269F56D3B752A070D9872FD
A5CEE543B413F13CC4CFABCE885BA4533EA0969FDADC14DE6846B330552CFD60
A75BC8C9DDA76102E48DB6B81975A1F3FBE182CEF410841CC6164AFA0CE51FD6
8E8E6F0971277052E21126909B5EE51508306B886E945C11DFFE1C91BD0D79E4
554CC7D6A774C9B98610A1E49C3326D62F157CA9D89B56699F32DBB9D49C716D
CBDEC052133F8E18E8F3D7A59008398AF3E4E1192CFFE4D0B7D2ECC8DE2ABC1D
4DF7F2EA5EC0DD756CB2FF9F95FF10E506463D3037BABD221C08506FA603DE1C
DC45A5998921C4023E501DBA494C1F41C0955A761AC3D5B13A88EC4F0BF40756
BAE8645EA76027B8AF74726521DC129B9AED4BAE67A511EA56EE9D0D8D30C7F6
FA8BB890375A263A0BC4E9CBBBB8F8F8613A43B10E964F8CBD6BAA2B0BAA70C4
4CFAF6EBF4882B610AE13689823D37B046FD26DA85BD96B896CBDAB6662573D0
2CB87D45A86A016146513441BF7A748F1E9C2AC7172460EA628BFB22F9797905
F6DF6749F13C7F234A2CE4829D41E0F53EF3C5F52165297AAC4B5AF4747A9F53
60370B4C0110DBB42C25308F489A856B6664371FC2126BAF4710790021255653
CACDE1B9ED6AF5C696C3D8BEA4698DD9045B3004A5C4C03EA994A5445C9D4EB9
865266850047E28F2D82A08617E9283FE637CFAE4F7F261CC2D616A8C746EF23
7360553A6B434201944C04B1522533C61F615A20BA3678AF8D4BAD1FB548D82C
72D41699FB96EF40ABBABDEE633F05B4445BFC4E6E661DCBC8EC473BD2BBAF7F
75F7FC86CC7B1F3A2343EDEDF6B5F7E98A0BC4443E21611F4D807FE7F597A37A
A4DAF8A8E6D04FEFB320E0E25C61E156A72A3E4A69EDA04B0E3B72B69FC19E63
AA33A682663A8F37F4FFC1533CCA2A80DAA675DD723A7E13D9DAE3BB0F5F3E07
99BAB9B9BCFB29B73FC76EFA02F4F632690651DAAEC2B3688B636F0FCB156047
F8EF7239716BE5D3DB2FD1DAEEC11DC2D65CFBEDC1C950CA737A04FCCCA509C4
7E47664E160322366F70CCC641B9B49192AB839E0AC609AB2FDD3783095293C3
11C56740FB50D23AE9FEAF66DB13F35367B562F15161AA270EE44713881B2387
7889FD10198AD4D750390811714DAE7A8DC6F5770224E93408F8CCD4F8712A9B
3C583C983D98CCA7FF9DDDEF8AFA292781B1D7089336CA631413EA0728353E8B
3650EDED7ABB6E5DB5B85014A3A9C4C76EBB664A5B3E0F3CB2ECFBB6294F5C4F
69EA3AC8C071B122B129A28E04FE989DA9670EB6246806A516517DDBC52DC001
4C027D51EF1F98506F21E63D57FEF267B913F1ED4770D892239222F3A9035C35
FFA38D1AF3ED9A8C02235D7422695D30A2F801389DADF34CDC489EEB38089B6B
026D884EE1C24FE5785C383B988FFFEB5459A1644CA44D353503AE117E87F956
393DEF6C47D4E1C5B1A33835C9B8E1B98809DFEE43C4D6DBEF1C2B1ADE4B8F13
3B5D224C25927433D5738B0FE019CB88B1F373E4AC2BDB5BD86887FCFC50FA1F
3E01CC550BE5FA0703E1B89486C67E8A16C560DBC051028078BEF85B349D3058
55D633040BF5853FE9E50A671CA0A088959B2AACA1B614DBDBD906FBCB6A6B13
7ED6C5BF448F92E9EB110ECAEADA36CADF4B6D79703CA2EA9BBCC810A6E3532F
63C155FB86CBF6A6049D730B4729C613BD759AF3742399C6B118C1D2B38FBC4A
22154122B3E325ACA78A9D418FB443FB334F67F8BD2D33A8491FB2E85BA2BB40
F538F5DCA031BB3A7E6FB3A473B863E3B13D94C82A96520B003296468D85D585
470B65B3D6C119D741FB8910C79B0B30C6D45AAA719070F4B394A441289A0AD8
306AC3594476EBB665D245AE69C48E8A9B3A851A225EA35DD65CBE432C918A0F
6E623CEEDECC3A4FC705D78C0FF6138080F27549DFC4F1A6EACE8AA46409DF8E
0979EFE9CE7CD6EC89FB456E92DFE55D1AC59D0EA349DCE8DA9D1BFFE2D91824
48D4340CCF802D6B594534F29E16C0D79458E1131B3DC36205924D56BCBFB062
A755A53672EDB994BFE31B4247D0C16E1F00B6AD0727E8298F53182688AE0918
5C44E2F6F3ABDC95B8D4254F98841EF129CAB6174179077A7E573704AE8B4D06
41
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFRM0900
%!FontType1-1.0: SFRM0900 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm0900, tcrm0900, larm0900, lbrm0900, lcrm0900, rxrm0900.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM0900 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-196 -322 1502 937}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B57DF626EBF73D2779A4A6B462AE6E5
19E5878939A488F2FE1094A76925CD24DAD4573AD3CF34E426708CF06E7EBFFC
BEF5595408106E2189F418D17AD510ED5B6A528E8902AA3A5F0FF52AE3DEAB07
32F06B63E28BB88229E046F4FF8A356BBDDE82DF2A197F2E26CA00D5594725A1
83A89A36487EAAE1AC312C929CDCE50722FA6C596C261E4D78D6C6ABF77F5CCE
0E410ED74287A0F201140F8D9674A7AC585D3CBC72CCB824F9E1CEBD08AEDB3A
A4015CADF471F7ABD9B0F0AF73A8274FD441BC1988A61799856E4770155341D6
516CD0E25BFA59B67AB7E0571DF3F5BA70A82798D4CE6D9F23F52CF97CA370D5
FFD6359959DB68E52196D89FFB84700E1CCF3E2E6A52CCB43303FEB31F296C29
34B019803C53D8D5DCFDE72099BFBA29C176DA3AA9F20106D6AE6D530A490578
AA65868A24DD5024A28C6E372C33EA2F6573A6592AE985F03A99884CCF7CA096
043D8D33EC0550084F5D85656F821D8E06996DB3E47A7C4E20CB4FA8F9A1FDBA
8A8D5E42F16B4FE307D36B86A652C196C9968BB436C9CB66C9CA27658DDBDFD5
28224AA3A9BDE394CE703771433B4BD8B2867327DCED10CD89FDAAA5663DD04C
0F4EDA21B96627D495493471C6F0A2BFEBFC2951896E3A52824E1B82EC39B16B
F11A8545D54E1C5AF4BC701B47E1D8D4D073272FC1D51635571A371ECA95C12E
E1C25D2B992EEC97DFBD6FF62F64C001793DBD8BEC957386CF5BDEF6C38A4DBD
F39E9464426805353EB6B50E527BEA12C147153B2080AC1F7C1C713AF14688A8
62D83B9557A4A5B851441290AF825C4C92C6C50EF812CEEC88EC5847D3E6B82E
9EFC37F08E99ED48352198C1DABC02F158FC5E78E55629228EC140AFB4086200
E77BEB9D615DB1A4373E7169AEE1391C89B1E6960B0587E8F372149E7FC4AA23
6A54765B98564787AE6D5F7213976AEC2AEAC2A11C2149FCE3D586030CD43125
DC82E9FD230281E2EE9B068092FC5DA01140478958D7CAEED313A06333463A35
0C18C4C0BC997193BEC3DA9D4670667BD1A0D9674D2A5B3E6608D9508A43843C
45AC8006EEA335B5BDE077D6617AB838822EA1B465CDBD6441A8B9E9E7E910C5
DF47B5ABF9E15825F57B4779BDDC764DB68A47C9100D2A9BA91688E21F9597D1
BCB6F12D5926B94F3EE771F02A94D59AEC23193941E27EEB978C7E907A6B3FB5
9E36D639D56AA2AD38410B9889E72C81E3B4A0AB917247805FBE1CAA6EE29875
F2898237ED7F32F9EF2BDC823E1B348495B77B58A847723B6156E44FD7566182
64F76C76DAFA8F7470FD9384ED7686663594976F9208C6B3C19D9B3853489351
4F17F2EDA0E5BE179E3E34339F2D6419C881CFCB2EE057ECFDEFC6BA0DCE0449
EE9D1F7DCD406098F095BD409911662C426AE79AB13426007826D5ECDDFCA409
57850E313AFF4BF6EE7F96CB6B7DCF5B364EADCE957B001530E3BD2F26923CE8
6522C401271713B28F986B2C54E0F2E5C5A13DEA2D839B35D992832099E14BCF
76530FD861E3A8381E4B481AF8566A58B62F7740A9F04D7B3A39EA77F70B3DF2
19A0415894E427C5F588A0614B44268DC40E2FDC1551966A7BC3D0FF1A110EE8
BE32A4C1A5DD5659A0360FB1272CD354E43706244A8CF09712165DE31F47CC67
1E0CEEFDD2C398A2780209DA6C29EBC9AA2FDA1DD2C0383F393899260C1B5420
6E16BBC9223EA5D9B7118C938AEE2340AA12BB786CDD7FAF7FDB93D536AAD6FA
BD7F73EEE63BB1BCEFB778A1E19C7A52272B3A0D6983DF61299B43730B6F59DD
7AB109AFD722EC2C91256ED9CA78B4F29F970967AC551A3C5BC2D722DDBC456C
101B385B2E66F4D60ECFE4F467B74DAC6AD6BC184C2882FDE2F2BD5AA57B369A
A2D5077ED01A318468C9DFF780A58041164E64CC4490D44F9C16BFABDCCE4DEF
92F7EBB72D912D0075417670BBEA6C15A31507C02811B93E04BCDF5449CF2CD2
F277D1A76BDD781F8149B2ED03211749560EAF0090E349863E8EE1B62C5AE53F
29A49EFD77E43BD16803965F1032B0C786713F2E8F1BEEEF87F841D02CCE5FC6
093564301431AC809D401C6B6D2521BAC3FEEAC930222CC6CC2A36CE5856080F
B347E8D6C1E69C54CBB72DF9C83D7CAD2A46E131BA4EB5063894975DC194CE15
31F2DF116AB4C81C1931D8B1611A44C7C56BF3B19308C7344ECF74CFC51ADBD6
0B4CC365B29EA2F4594B6E4135758AAEC999AA5917A5F51E22F31A3020528B25
A251FBA395E4760547CA4A07EC8D03B6C0594E348CD00372D5F1F4D4AC5B2707
3C16AA8B80A61DF25527D9F730B1855DAB77A983118E236AF7253968647B83EF
5B459D8A3B24AA15B2D2BAB2A93F481037964BBCDE241983B0D4BF3EAE36ACDF
1C7D5C65ED6EFCBB887D8F999D41E547585243A37E9C40B98C30AC73912F0958
C2F689B13DF2D7F68297CD6EDB5C10DE964A8E6F94424263E5C7C571EC7CB0FA
0CA4525083C52DDB8358F0575278475713BC9C8F5865B057F758EE67196B86C7
70AE6A6FC053205C111BF2C07680D1A9AD9007EB369B2A6B80A28E14C4038677
7DD756390D2674F352482FA1437902FFA06E1A60A26CED51F1B8AAC17D417532
8E0E6E8E605095672AFE32D091CD034AC704BB734038E34C9DB624F3980B753C
BE7EF196BA3201D6F2499F8F92A52E6AAF677B6E0088B5786E70D3D1377BB5BC
C8DB8FD1FA6DB83CBE37DE8B956090BFCEAA4DD7CBC20E23477F8E98A231D3A4
4BC29751CB1B2D860517532C245D9611D6A9B976ED0551894933FE78095AFD28
A078885043E4F830DFDDD582F3F53A695FE9FC44EE3FBBBB321F4A61F5BC2918
441A86FAD317D469F44BA6B44D40B1CB8CB60C0DB64F4CCBE09A67722DB25014
F7C0EF51C36B43FAFDBBA1969703CE9582D9B19235B8B288FAC45368F6BBB505
3ACC459A90321E1A1C91324E0DAD8726BBD7C4D33C1151214C2610D3993603E6
EA87D6BFF3DBC93516338CB117EB72DD4F6B4CB9EB614E23F7D328D3A38636E1
FAC744DE320B8B122D39F100C99D95A2324A3AE672290E29A1B1EED0B300A47C
041B52A0FAED2A6CB461A9D43E99481B90A4BA405AA0188959D96F399FCB8E78
17649012946227CEE29ECE62D3E940621D84F130C37820BAB43D4BFF0291CEBB
DDFB529780EFE743521D1CA9F09FDEEC439495E6B92C58BCCF98F8D73B69B5A2
50033CEDF8DF389AF363A8D67761C0F2A1DD706974D2A948E52227F67980C92F
C469CC030BC1A6ABA95172DBEF053374D01E8E6D964A6CD0D6EE00630EAD7137
A71E9FC635A97C5A2C93EB5B54B5FD26EF7D426640589F5C11B330B4C94657C5
279043B23AEF6DB43045823E30DAB29449B42D35388C5D8C2635D00206373CBF
3A088C74C194CB2CA47D3D2D1E1FEDA48B197B121CFA00032C1C46029EB7F000
DA9CB220AAE72FD4653F41FCC2EA5E79E1781A9E1FDAD12E2FE4AC2173B73E7D
30F6AF4BDF1543BBB1D0D9F5CE5A949CE42A6AC05B250302BE7CC4FD908EF361
9736ADAC8B11FFFDCE7F3FE6F3845521A115ED36DF0CF09FC6260E5651091536
FFAC43F0D3E5D466E8226C7EC9B0B2C42BBE5A01A4D014B8466A8D22219481E6
454A486BE1097AB91FD2CB5FD50817B81EEDEF8A11C702EC301368FE4EAFF1CE
03839C340D8C02C98B7E760A3DD64BBCF437DB53D1C47CA3105049D278C4CC00
FBB14C0DCAA264E9448988C136653A30D77F9FB4962E06D983C01825CD9C9559
0F26B6935D4D9781A60766DE10AB158618CFB2FC62B16BF9349B86F3CB13A98F
648FF65FA074AD2500BD03763F5608ACAB6A001374FE99A300E041D441ADF5FA
C106B67E74C28D0283D1FAF55AA924AAD955C7526A993B0F3C82BA6D5F35AB1C
D114682C44276B76C91E92E6AC20CAF799D2402A16B2DA0059097ED2E47A9725
EC763E32D2E74E99A08C36AF8E5864D8C886E7B8BB1D5FD15C159B840A418074
615F73776D77912CFC2812EB5A14D3D81053D9DDDB18821F92375622B3967CDD
77B44844915EE2EF025FDAEE59C1C033E1FB1F743CA205A0CC56AEF7091E907F
5615DF52524F9CF3375637C440436D22B11B8DB01F63F4F257409816311DB5E3
BB4BB0A4C81748D360EEF28D140EF9AF38DC6618C5B2CE27AEFD1FE7AAA64CA5
048460E12E194490A4C13B5AD027226931620828B99F77305B3AAA579592AED5
D6F05FF164B01B822780D96A595E5189A650690EC1802D41AC83BDF394274671
B6DA35508E5CF0EBB0DA86B3581FEDB1128B50C1A0C60F7542550BB439428906
E368EEDB75C1B29DDA38C6BFABD3FCFF378663D66AA743F9DE2A18520919F961
24E666A4614F00F3428FCE6C7D2E3451EF0E7D1E0F1D3091B37F4FB223E2BA5B
B0E57C04BDFEC15103EA47597FCC2A7AD2D7F9612ED8DEB0B4E237F919152F8D
9E86229BFCBB784DB2DCBC4AB72831F3CDE6728C071FC3FCD30E5811F3E5B8FD
5E0B08AD851A31D9BFD710DA64BE553250AF41749C9790693C74A698EFC6A015
BB3CDCF576A0689E9EA289FFAB96AD0636739049F78BE5C0AEEC0C4BAE249BD5
295A90F331BFB96FE305B9AAE7ACB3F0543813828CEB7BC0E850A95333418619
419AD0275CA05E1EC09B97FD98014544491E52865C4E88203D4EFE0E85508446
D21DD84AE75C05893B870D4D6E8DE5D7DAF5518E3E835894E9BC6AB4D041902F
EF9DEE29AFAD535876DD15C315886DFB61E135B4FA038CFACCA0CD98EB6581A5
0B6A672503A45DC4A1907826D98FCBA579EE2A7FCB0C9F24465DD39A710BE21E
E92FA7DDBEBB2AEBED9AE61AFC1AF1B664E9BBAB13EEEB40C3FED31E06372CDA
1C65BDD9097F2C8D8C39EB6D342EA9E3EDD2C9C644CC5BF05C0F7D1CFD7389D2
67E9B5AE090C2E12AD5CE8840CEC82A0CB7D46F90924B9FD409909E8708B0E28
1843FD50709F615EC830A4325072F4E38FA4D9C8D4305C56B6562A13A5D8FA62
77DE9A3DECD483E00BB9D0279C92C3926F8802E58D0AB34760F8D136DB14CE10
E042B26C218BCB42366A781D86A0C3D19919429E44EED60C9350FFDEDD5CD677
139D6416B5E4B5848BD7FE5D3F3E547AB07E9424690EC9A5EDB254704F9165B1
EF14DA7FC108ECD290F44490DB9C708B0954CABAB9BFDDE8067A3F294DF8E979
2F2984F532F14E139DAAD1AC10B7349186CDC274F5CFB30CF083545173C9C9FE
F135A9CC96695DFEB7BCC8D0C7369D870BB9976CC897466D51A72D727146623E
1DDB6DD45C1F88BBB4234F335AEF967585E6A22648D8CEFB6B76FA1AA1135714
F97B739EF23FAF2766D72A304BDA21FF1D072E782BA21CC042E621E0F6927D22
3D5752B69C930053655C34FC46979446834D001BFCAB1CFA961EE73F57EB591B
D155181FED2B7B34262CD2F43A07B88EADB32E7C099833E00DE4CCF34293019A
B7EF59606354AD4A6B726C02176DF5B9AD483E7405DA63B05F451A01A993B664
1F7044AAF6997A01D7335A08B8BE47F16C096125C661DF1282BA2644E1BD70C1
E35DA773D287D6941BAA470563F476A14CEBEB857C068DC5EFCAC44C25A3D185
E483A0A0BF7A7EEBC0694A7AAFC80506B00336285F6FCEA2C3B2713CC34AAE72
411A05FDB24365FB0DDBFBE137FA7565C8DEFB1D9F40700240BC165BB7461970
24694C64C8DDA0974D7B8A9104DFABE61F4165003FE0BF9544154C218854BF1E
7E171BE67C38AAC6952E4040761A8FB358F5D55533651D791F5D8482F794D6F0
B4A3207812AB6A1C609C8D47E2B2CD348F0DCAA1E650E4EFD80AD24605A9B6C4
9348FBDF8DAEB6555918C71679658620C86641448175F7A30868B467BF7DF146
42421265F2D5E1C843F00D43F849713BF55D7609511EAC7B9273A0137ADA6FDF
D1CA44E6155688F1F20901EC87FB8A49B81F8829EA3845E0A4133DD0378110B4
21AB29DC563808EBD6533C709098035AEDBBAEA7CA9443040F8C180C6D51ED5B
06D03E9679987C5917FE4B01A623E7943D26FE078F52AB6129770274B0A54583
3BD6986DDF098E443802AA6D9F56CBD6D1C649691C3E5A6DD38ACE1E53ED53EC
EAEB89B7792E8CF7A0413B9AF2F3B948EAAE22DD8340656D93D61EF3F8DAD463
E4C9A8E628FB695AE74DFBB08AE5A4C9FA9D30CC55384267425303B80674F8F3
BEFB647BD3E977AC97BDCA201089E8394F95F17AFA309E0CBC1070A024D69B78
CC1D73F8BC5F26AD901614682E0D743143A3D98557752B889A8010DE1F1D17CA
FDE159E0EA76812390EF7DBEA50DFACCBF9BBB924D7F3DE5AE713CC37BD96277
0F37D4A5F465A92845A304A65AD994C2B31CC6F6C40675808D37510FF1A39A95
49E7E411C1E1EADA0EE7FB44147531E5A25555EF5E6ED7D95728286CA4F69060
C9BF7BB9A75976AEC88F893A69874A3F0293D687F8117DA25C0DE65C3C4ED6D9
DB299B9AA3BDBC5FEA372EC5A385C6E286A9F17DF31FBBF267514344C1AD8402
E71211788A1BCB560C5ADED027701ADC14FCACB1A666A5BBEC4DF7F4D2D22039
CE379BBDCF532F13010889FE59E50E677BDCDD131B92433771D0BF879D16EC15
34FC5FFAE11212F993C8962C812057FACE8E609FFDC2C3F2CD8681B8E7BDFAA9
14620593130C72963B10D5C4B19B9AD0AB4EA03DB12CE38B87580F899959A300
0F649575455415B05E6963A4FA2E41842C07B475C7BE7DD6D130248E8235BA1E
EC1B49E608C5EE2A22D2872009F8FC63B1BB851608EBE7BF82DE680F6924BBB9
4027FDCE0822FF30241DBDDD37DD43FB4027DD39AA60F8479B7CBDD92563CBCA
6C2C6B50905C922918000352B2CB4C6D8BA140B2CA30F4D80D72E195C7935B39
2722566FD5D4D7FDDDF1CEACFE7702897152EDCDD9C72073F273A4F4C9B5586F
FE8A1B0A3766E92A79516C2AC37C1805286596FDE8EB0520FFFABB84BCE97471
6428D00EE57AE742531892BB3AAC186940A677701401EB4D647A9FAD8D2C76FB
F6826DE88764FE7439BE4FBFBBD4E18794B570C7B462C654AF5FB352854792C3
AFBACD886D57BBC95995799B528EB0A09D409CA87549CA07417E5EF3C41E23B7
70F5B44F5533E04FB4EB99E3FFA8668A139C73544288AEDF853C4B6AF02851DF
4D7C827327345EE1C478C774561911BC1D3FE44C2EDA6D7B9B5610E99EE29707
EBE512A28BF6C0756F62EB9030C7EDE9848FF6156B914FC6D51A36351CFA99DB
19267CE6484AF6EECDD46D9150B09D4EE490149A800CB4C0EA9427CC91DEF8E6
1760E4CC4A71CE34FB84E69A7D4A0B787924720290F7E375E2D3B8A0473D9EDB
DABBF0AACA0ADC2FF2328F7D5C7BC28B9F1C3F5C60FD2930A58B99CBD648D8B7
FDE346285FA3BEA661D6922E038507878C9029DA8413018598F79D4DE96F37F1
8BC1D6B638D132A8C4562DEAC3EFF381B4801B46FB63EF56AC2F8B119123E213
615F5C3DB5232036BC9F876A7730D984FBAF9B1536E72BA8FD823AB6D9C24CA4
B282C8E264AF16F66285778C3E2CD4BB631D9C72CF854E7E85B8B2BB5EDBFF69
B57A6554BD70E5361848DF8FE8E50DF6856F1D10C8EE6ECFC681CC39BF34CC4B
D0C53F5B9CC9E1F2EFA0D6574E8217A7D2BBE4184493FC6CD54BDA8F3EB84C32
883A8035B81C6191E2BF8CAE319A3E8EB67B33BBC7FF58AE1CD0F2D132F6DF9F
824EE4C20B1642B77D12836425FA0B8C5E4C3B13B5A0A44911F452C3383BF819
478D7050113804083192B9041EEB8A19A3607C34D2FBE4393FDB13FC3B396EFA
687DA046B496D11987929C4B694FC682088F5C1CB471D9B9B6F3F51341308ED6
D4AAAEADE13A6077CB637F617DA8ED1557A30E9B207BB438598265DFE3111E1D
1826E11DE8CDDDB17DB2FE123382320756156ACD8F427E3687B32BE3388478CC
DD5814AD3DF79F7A39427A74D7B5E4C981DB49C5EB8D4636B3EEDFEC7B4BF051
591E0626BAED7D93D1E7538098DE0F035EF43360E849EC81C6D1E20D257BB664
302EF23086E3B533A0D740FC3F5A418D2643A9DB38681252FCA4A6443E7579E2
F0B5F37758FBFA88369D09B166752B2BCD5508C5F4C9EDF99DDC605997681B03
EF8E7DC70BF2F2C0047602E7D57FA4588C68111E3120000834F31E53D51C9628
465C8B54A63AE2EE076A49A29126CEE6645833073C205DCD9B96AD58B0946C6E
11EADC5E33E20D6995D97B207AAADF134DE881A7D3E38598A1AFFD9ACC653471
3814A67AB0699250AD3E136F1FDEAA3482339446715B76EEBF53FF8F503A7EAD
CF5EA73EABB9D59049B95DA04FFEA2884D315F5655C91B961AED9382E1314AF8
EFEA168F36C2CC4C41866B0093A78475FA18A11C8FE5D6E3F7826B636922E4F6
848A23864E553A210819F660022F0BF9A7C2610B4149A5E0985E565F367C2DD3
1C0A36823DC364060DB336139D0743ABC7BD6923A2E2D8B405DC61C25B903313
697FDA85250BDDE99E7767093513F333BAC3131DDAD2C761F444122610FC4127
A96D834A2D0670AB8068A9224DBBDABC8BB3E6F5817FEFB6A9645CCA04C286B8
47E53DCCBECF96B048A43173A8BA72A620D25A3A3C6F9533E2007432A6D79718
261DEEFFFDD234A21FD81C60A2DFD883DC496EB267545DAE84A4B76A65DD7F4C
2FC1BCDB7D890CE92270059D2267FE20CD51190F2FE3D0BC8AEB38935B314504
3EBD3CCF93B8F4DF389AF363A8D67761C0F2A1DD706BD12210CF75DA4C7AC443
7381828655204767EC0675264154B2337B319BD148F82797630867AC626BEAF7
21C36FA673DDEF25457C95F1630BB899B09DF1E30215BCA408293AD141E65721
F384CA12B6D41E8CE89D32138E26792C220BA49C853CBFC1C16428A20A42A63E
A253B964356B262080394DE1A4E8C260E59EF4B244CA58056E53F69B1CFDCB72
3D56BFC9D8253D20088D1BEFA38DFC7C83AB7E808487A9993A4BFDD5B3BA6931
437804B891084DF61B766E07A2FD92799E39C03FB8219D823716FB5F2A2D6D8E
C2BB56A69FD69DE4513ADB9FE0041E7E81C909A13BBF238C0C4549DFB0AC519D
E36B7F9F0870F38AA4DD3F4DC44F3F4D9B7F37A36A44180D879EF97B5705BED3
10DD87E3187C0BE1A64CA337B7D1E585108972A98F61AA416CEF86EB937CA56D
494F7D403806BCDD516465FE355B1BA190E9598324D4264B32555423B5E0C970
E31077A543DE555534E1BC46F7B947784E7034070E228B1095657EA880C4956B
F9F76F93CF20C262235138ED58A63EC8A7D32EA287FCBD67994D589C290AABAD
111D866EF25BE7AA909FFDD31DB19CDB1CFFBC4EFFAFE0660FF19267358C0384
B0294B7788E5075A2B39321A1CE74E8CB2D9CD77EB6DE0154777DC8C1356CE76
9555E6AFF35CA1B3967EFA01C4A6A78E59C56CE37E144582777946A8F4EF5ACD
55D679AEF5FE9DE77B27D19B1A06180CE092968D293B7F333F1891915EBA24B1
A968EB32F4C709E562DF10BA6196EDA348639FC3A0B479A3E6D1D9E3E1A66B8F
999268F0EAE6D3A03547EEBE6FBC51D8DFC71FC9E98661DFC41060D7440B63D0
B37CF366B627B992C9E33775946819F8F8E6F082C7DDAE3704E8ECC9A548E89D
8D50A3776F221A2E8AB1C9294E225FB10538F5EB74033ACFE7CCBD4142233A58
F86E367B195713C9511A3AD6CE4C20E2ADCC38E6E23E362A2B10C44A60DDC565
EBAC382B6E657A807F670D51D7F882167197CB4ECD37751466B0F02A6373CD7C
1227AF18C40FCCBA3D5E4D403B9C00A983BA989EF86D5C5A1043CBF3E4C8BBE2
482E8F141F1CF8AAC8943C973FA5264B6277B4D401A2D66F80014EA3861089AC
8F16222481F720351205AFFE1EAB195E947D18B6626BF640562AA3AA092FAA20
A211D4684B7532789CFC29BC48F0A621C3052E53560BB36A3C4D1025B630C12D
4DFED870186012B6030FC6853E7D2E69911E9F039C1267B2FDFB9E871D0A39AB
EDE3172FA0A2127751ED17700D5CCD3353433F531420EAB8A5D4782F884661F8
162C27FE5EB94E154DD58C609E719D0C01F608F4FD1AE5538A2F895747F70497
910F4A826B53F06A75CBD7ABF2B3A9F0E2E73B3A0286B45B18D71DABD43C43A6
5A6B264F2F3C07D7961AD86A0F83CD942BF94384E6CA7738C88B3673D31EAA8A
EE575FAF70C64C19D13699569928B4DA7785BA87450549EAD86CEBA123444AEC
233ED2B260068BEB96FF244F95637897D9F07AC761672DB00F9D6C6A22C1A0F1
767915D357EF2454B9673FB763DACE83E44F3CAC5975A71116AA904F21408C40
29DBB607CF1A0157472DBB8D45174D5852CA247669F6392CB3D359C1240C807E
9727DDD03F574982E348725A1EED4392F8D780F9CB2509B655194B6C33F47679
259B1445DA68BD3AE4E605931EDB2CBAD9EAE38BDB414649B9442625FDAB68B7
413B676C717E25102703F4773775DB4AF929B84C1867C57F83EF6400CDE498D8
C76B8D7AAFD08B7CFACAB3BCD6697A9EC2EC72F981FF88F93D3BC37315BF6F90
2399473AE2DDCD849C7BC2624C540143A430471B06294C66DCC4D12B83677F88
664105F62E8DDA1B8D66DD0728FD0D8236E1A66D5EBC706311191E6640318704
32822FDE4A2B60D6C3B7B7EAB61134C09C8CB07D8072E499327EAAF56E76BAC0
94CBD224C3534462F29A4363A0E9F7F4231EB78C7DC42F256D8A354EA042C8FC
32A36A296F42C631BA46897E7872E31F12A3970976CEB7DDB6C649E2F3ABD7C5
C1196C1D94586DD11A043622DE877E5D7DF711C33391EBC607F7034F17F42CC8
1FE186A8707443A8F0900488CE42393F166F8CA876786A5E434C7ADE8EE15141
81ADF543EF1A076EF1B7856738055848D63CE9D0CBEE4623AF724518CA938E5F
E97D88F3CB969B58A84F719C44432BDC745592EADB2562EF83C9B918E4B808DA
F8C383C0DA0E4E787A65B89CD7C7210B02519E52EF536E91DC86782E3170FCC2
1D8660740B81F171E0DBBBF9E07B66994CD71004640A1080DAFABA017A1AB8B5
6EACA7043B9A09AFD5887F20BCFD5B5FF7FA2EC08BA2A8046244826B7BD440D8
F34690D6064094E4A6C89A4DD039AE68F9C29A73D7DCF7716339A5E2509EFC96
87BDC044FBFE435F9EB9DACCEA986AF342C5B273961C7CCB8ED6A0E0444FA7F8
BA03820EE1FC038A7C57FA622621B52E62982CF5AB72D9D04A7D6DEF03FB39B6
EED2970CC423D0477175D396375A554ADE9D5B8D92455CC5B3962B4FBFB4A849
808E11780F77B1599FCC348AC52F48B70AFF0E2DE650DE6BFB38017C2E5851A7
CA5F66C1D47F5A594122C6A164A4716C56D64FE777FF8E114F44201DB4CF753D
ACDFCC1D028BDFE3A7237A21DC226BAB2DF5F9DFB14F50FB8A88FDA1C6C2F6C5
FD0BD5CE7DA7B0F915B2E40DF1363CE1072871DE3AFE23B9131C1D25A0626175
05A081632544650F926F91B7B84E2280E4DC037DED0B93FA18F0D1AC01C613D9
92B1981176955842C06B035E156903B461E81974CAF841ACC7CE180934171169
D86699CCCCF9A7968BBFC419DD438BD36DBA3096A1B5AEEE22BDC60E1E74F651
F4A3453C903671C33E8761BE75212BEA10D50E8F3FB08B407CFE3E242D32E730
CECE906E4CB48C4AA24B4069A33F6BA97E0F0E584DE6D4A4003B704B9FADD1FE
48300A6DFBE6AD8D4F8D70EB70754F96C4AFDD54CFEFF5DDAB968B1FC9C858F0
876B506DEBABD9B75D39903033B2F31AE56B115B1E54D2DFA6A5852186FC6BA0
6CA2CCAAA219C07FA4B4D308C575C9E8A41699FE952F8E074F0F034A26964661
0693BD95F7E93B09B7EB900C07CC5670C00076E486ADADA8AF511EC5FE344C48
3D1B4EDF0DDEC217336872019CDDD33B63BB2F0FA2C76AD93B70DAF8B686861C
ECF6C6B4A64ABE2EA5CF61A612CF18EC2539341D73F8BC5F26AD901614682E0D
7437717858925834C8148DA0FD1AAFA482B4AB1383AA053C88A17B2E392E8330
F91062E363386EC7C2F74649D8BE471C0DDB423728FA7B3BD4D95045FCBBE0E0
0449643C295885630B73EC73E764D05C45D77C3D74397543B72F5859E980CB06
6DF9F12B4487AF43E5D5337BCD4720D28048010F60A9D44BFDB89473CC7111BD
FEB0EC523EFBF17115FEAA4F8A88BC75765B90ED9D0C3779A1D306E5FC641D29
9B57DDB9533E239DF389F768B7A8E6EFB0A718CB204D4D372D68B5C888BB498E
140D945D140C023948BE122F618836987B1344BBD5BF86326F013011F770927E
0521A83D0334EC40669855A59E666DBD2B8D804D9F1F4531915F1130BB1E4DE5
673F0D2921654FF33BE61CA7707EDED071FE9CADC868D32B2305E4133AB26922
3DAD30956155804435A1F74DBFF679BAB5DBE07C35D8D22CCD243CF55BE52DA2
AEE2F85AA39E258ADBCF533994B3BFE2854107F555F5FC5DEF55A5BB22AAA4B6
6880A36CD4F92828758FB56853C6F4557D4A4C5D0355F8B8F564B677288CF528
1793FDD870CF36728B971993BA974EF69653BF510F589FB14A52DA8AFCFA1CE7
710407FB030F6793A4C188E740583BBE8949650E5EAB97E34E14CAE617AC1955
82C6DC9892AB406FF368ABDC45EB3E38B7708A5F319BD19A1535E56121B03F33
2FA5AC2EB8DFA076D412A4C16A689A2ACE6C85D0F7EA299FDF3233222F1F99A1
E5B20553327B08DEC34AC1A2F3FDF20CF592A33C257AF4D24E0D40015D3BE601
C0B431966CC308FC26DFF0D0E5F89F88C9ECEC538A36EBBC23504901193D09B3
9281A3A122E930AF1A5256F5F263055CF70CB228FF68917970F983C721DB246C
C8CC072B11B7E5F53B3A8B27F14E7BA5E52E1B0CC8FA765F78D4F72A9F9E491B
F693CE0781919E03181016AA438839388A1FD12F97E36F3B4A82CFD85D40DEEF
C4EB905B0C0BA6C71225D249D02A4AF6F20A2E7578F783FE3E4B337CCF1E9ECD
A7F4C45E7C12E493A476511EDB220A3BF51F3FF9B72ECFEB8047907EE6C73DB3
BE9D2BE3EA57460159C7BA143BDD5FEFE810586CDFEF3BA63BEC6582059C0419
71C33F08F563F95D5C1FED40BE32D14D6080908B71FCC1E68EC73EAFD059468E
3998D8A52FF8061DC9A3A2C7E7BA4D5421A59F06BE881F3D9BD11EB7E577EC66
869BDB4F6D0C9A053B23A0D909A764837C4A9601C7EEBE755F29D0B9412526CB
84936F109CE97CDE441750DBF4EEAFBAB0550FD7BCCBD89872BE23C90B01825D
38901FDEB3C6B2B5AFDF9628E94D932F2FD86DD6D8E3EE9F104DC1AB3F499130
4CFCD9CAEA8BD4F3E91D10DDC66C9BE91A9EAF866C3EFEBAACF149DA7CC86295
86EAA470CE3ADE6D0B92044E3CCCA373DF16A91A2BA41C2C25CFF2F35A51B333
0D7C06EEB941600716E17F6836FC46FB7215C5ACF1A2D87D54CFD05032DE4A02
1E2C25B3B563D8CC05EA6F8251D4565ECBAB5B7B2B537B530B4AE329D5452E0F
2D8995DEA8966574F8F779FBFEC09764D66D23B181BECE6EB1AE24186EBBB899
F1F429B0FDE0403E2EFA6AD3BE983B25B8B8CD5FCDFA9D3606AC1CDCD9B9B129
35EB59B237926A5D07CC1DF0CA666C704C0F8A68CD97C1BB9CFB2DAA866AC440
D058A0C86C7D9ECC7F94D414AE3D84196A9726917A19D04423380042961BBDB5
6F40FF07C2DC0FF1642BACB8EED0C80E4D42118BAE4628F7B51992DC801879DE
9FFFC5AF799C43F169DDB1D20D7D0C2FAA782FBCFF0ABF10AADB6323935A7AAA
48461C8D0DFF8BB01B2C6F43F9773BA08D495F874C2CC4D846DAE64D91ACD582
20D2AE0F9715C9437C02C8ED058C79218E97E2E2D57EDDC2B5A69AB490C07ED7
BC6D33E5BBB73999BC37332C718B1731326C225BA8C86597828D6D6DE4318230
66AAA96C7314E0DE18B061FBDFF9AEFEF7B85C751D5035DABF8BF4C7CA56235F
280A1DF95B8EFDC17112CE224DFC4765BC793759EAF0887D83D37702FCA39575
2A982E8E455B1CB9B6D41977104AF92A6EE7938A36C1517557B9D7F9B92860C2
1F0C4FEA515F652FA5A5977F1DEE184B2832ECD425FF9CDFB6087B9914C16545
494650D4F94ECCFA758C35DF178C57EE7176B8F9194B302D289E9E0B0A43B6D0
89A231DDDF6EFD601220D6C0E0BEA7667EC576ED14C836DC4ACE2F1C707C5ED4
3A7599022FFC8D8E90172263A3ACBE95D03E4ED5B0D1E727646A2FC08C8723BF
8C7FAA4912BC5B27F64ED0C81666778ABD4486DDF4F5E7F4BFC45820A8AD3482
CE1F50489E352D4EBF8F885AD2998C692759527C4251D4853AAB7075B86FE284
2D87B0BA7783451E38A01350BEB1F8CDE6ED0A4C06624787478FAC3C7358FE96
69F35AAFBE876AF66DED2E34292EF5DC1A32DA0DBBD3925A7FE71C5274F606E1
4399F08141D0ED40B6CA1729EE03CDB4E4BBCF1FC0273DE0E941E9106CF5C5B6
CB7B8BCF2CA6C2E221A933D0B0A422C06FFE9E76E342F2443366867B4FFAA807
6657FD69CB12B025976390626CE7CE24430DDB38C7DAB1EA2DE9F081F94EFE58
57AC7133CF9073F795F8C1C4EDB4092E12CC710ED052F618A72D101383042612
0405C43C3ECFB9C229EB4E627939D3B1C707E588656B193C9E323849E5A872C6
7DA725FBFF87CD4F8B0D9C63DAFFFF82DB012341DA33F15A5D79B165C2C163CD
6812FFE391AD501757248DE1175D665E6916F57C6155224B10366A907C2216EE
842B18EA3493B09B5E557C739CFA3A3C33B647F6E7C75100F73620FC4EEF2476
D0BC4F0044802DDE25752F4592DD874EC368E357E57C6F108E85402079DF3CF0
6FAAAE42D0F64B2F411A2FE0E8E9B58E03F4CCF42255F337EBE9B4A7BA32957E
9B9A247BB46DF52186626886C87B17D669E4B95D3A5D180673D94F96207EEF71
69C9BB3DA061221FE03178805C1D20F2A3B515A6F567EA83F0986EA79739631C
A9683A312E20ACD00A2049924DDC7C1FD2085874DC9EF3593C9425390388AF84
F9E683FD79627FFFDE9B1DB2FA316423AA7D7FE2205A7DC9B65C1CD41798C760
C7A51171D67C102BBC2A346F2650B1FAC559C0351BE00F3685CA11D23B413805
A02CD785933882E8A20C99D5DC6EFF38D24489BD2C71728FFFE6765BBE196A47
E901AD5E2B6BB1FC88D6424727F622FD72228AC15AEABA9BE0D909655248B07A
F818BD729B794CF6B2668B0F8E29E3873EE192C2AFB9280630471F62EA8EB5A0
A609729AC7B539B32C228A78446A6B358A61B0405AAD6A8F5815BE83588CBA3E
B0B7883A396253CDCB992FB9A2984447AA56BF7D865C0FEAFE4829A75E2CF384
CCF5E3FE41FAB734278171E8404BAEB32D18EE14FA03E3C5F6FDA37368A236BA
DF232AFB3788ABE75D0752DD37CE52D7B7D57626E991D425FB6CF525A8998743
81BEA0A587D1619E1DB68005C796575EE463E4708771CD53855E211376B04486
A35DB4E558330DA51C6F72AD03F99E12BDC84D4443DF635B06A21BFE1A3F1E05
B58EB863F09AF535E6A6C0865F0519E0607A6ABD34B226E81B759421CFB49B1F
A698571B144DD64B07BCAC04889E2E7ED8891C13C10935DE965824B7FDEA8F45
079AC8DF24B4F72960E3141798F93902D24DCC7E03513CAFF8AF70CEF7279297
9F188F76F0F2299762C167EF6B84EE652129951610FA663E1F7497909D6DEEC7
494154404751ACE37A02D11527B0750288F0C66140E10C8D9673FE21A84D791C
C03B89AAF4C334B9858787014436FB4EFFD95E989F4BAF465B5F2C28A991B457
D0F23D6E1B51551C93E9882F3847AD1EA83A0EEBBF4D835ED072AF971AE2D8AA
70A35DD5BC40A418A237D81F33C4446DBB7C53643BAFFC5724C4BF2116006762
D5151C58939215759069ACC78BA513A6C11F558519A1FDEE455D3F225EF6B72A
2F1AC1DBD6DFDF5FB2BCC60DF226D68D5B171B8A69112A08E4A25E17EBBD3FBE
FEAB15171D2547C22E4DAC83D8658FB00EF2B90F91C1508D67FB0D7AA72A6F61
5ED59D4A8A3DEAE5C52A462E80B555E19708CEC7C501CF19FA7A5AA7FB656BE8
73B8962C3AFC9EC243CA47973DBD1FD04EADE6259B99859A65C140A1BE805609
459E7002DF03B3835475F09D2E1457144D0A379E1EF5FFB4E64A8D0B2BEEDDBB
7C57171F5C72D1A178EC12E8AA4A7A9625459497D298FD1509B8BD6276ADAA40
7A1D9C97E6CA75C64849832AEC7925737D2501E86333DB434B4A957DD9D881E5
0D822215E63776442B8387AE96D8827B8E9CCBD198C79220B7B304F5F744EAF5
DB260A6578CFDE66E5498C93424C7C6ECA114DD5C7ED267DE71E19FF4F6F0733
3E5E409CFEBE9A5E898A3890232B1AA75A485CA34CDE718D8340E1A7A5C09D6C
C25FA70652F0B9E933AD82BA09D427408744C680D75E773695BE55B646A6F7B9
2B24F1AE4D3A3F9265A56D9D698D21A020F6254C627A1E6B013A5CB4E4B6E0E4
3249CF8C2EB97FD3730AF119F04DF26E064FCDC6E29156E044A09FC19B609406
CC7B8D79D689BD0F79BAA503B3C12B50EF4A48C2839AB4BB367E93124C407C27
196B29B0C12535CF9BF81ED243CE280A961E771176B5999AAD06E09E58B4EBF0
7BA2C3CF0A80073C87D22EC91EC386CF640A5225E4C0FFBB2D4F3A686D4B7433
DD3732A3C24D358373DDAE6D768B1764F903172177FB118F2EFE54CBAB25E38A
42E3FC0A9548076425F5FCFB08B2B900F04C52B2FF365FBB1EF36BE6029B7074
53F8EDFE4F811BD74E8BF98E601DF93CFF3D70DF2D172042DFDE0CC1F2CD3BBD
FA87FDE55EAA3FE05B3C9EC6C206CD2B812AE22E1710F1EDD242755E76A2994C
4DFB98D39D081415A35918FA239B603CA9EAFFEE039CDB8643940F568CB5A871
C290AD24A80BBF26C6A6E1BAEB532CF9118C2171EF7197954D8C835BD320995D
0873F607C5FC4459744014197877727ED9A508D258B7685B89D4019AF15E21CD
9E1071814146A6CBDD4537C9865F9485943010A8FE1E1E71AA78A1F37F4AD0F9
5E8FDDAA1BFB8CA91D07EA60C6A28A3D94100304AEF8CD3CE3B89875A1A86329
D3BC6CD7E211F0363C070B8712C34ACFA22AECC8F5078E0B95CF5C9AAE4290A0
05FC92121069AFCA8204DACA38136E381F2ECE826FF6525A1C6B2BF91F08FF47
0A62E38C1C5E9CB70941A1BC17C4151BBA9910455BE9CF0423A3666BE5F5029D
C6FC0878C3663FE2902CA192CFEBDBD60B71725A7E2D8C73D105E3A177478C9F
ACD4DDFADD039C044E94911A3E50E363B67CF0C6B7AB68072DDB878563EAAFEC
E69A764BB9E25C7CFA3EA8F5C76315BC3528BBF43BA55B66ADF5E79D8030A8E7
D0C5B2B29683252C2D470BEDE66C14E7C6BF4438FD851F400B499E55A72C199E
7E43A3301702D774DE3F53F1CEA418A76F0635653B0B2DF457BFFE8DBF1186BC
A87E57AC8EEB3811BE2BC948A926FBBC5222F4433EC880CEA71A4BA783036237
2F059A0F290269D5F9D08DA856287492A547CF8D1EC3EB57EAB91891E0B859F8
A683E7ACF289893E2D3E408A7A7DC7D39682CE267F9575B0B75974DCC906EBFA
D646EC17D7A24BD02CCE5FC6093564301431AC809D401592B5C12A395D7A98F4
3D3A8B67E6AE0F923A8E9661FB1F7B1128990701A7A98C545136BDBE3C35BF41
C9666C27C1582963738571C5C42D49E82AF42A1E444FCCE7159A26AD880D6B9A
697C461ABB556C0ACD8EA5E9051B4B48EAD9483257AFF9B04D08E9FB7B2F4865
B3882A75A1BB9233B1C86B31E522DCE3626D69771EA7238BBC09F3067A7F97C3
21B0F221C9D45C221D32E00EEEF6FA17D90E55D6282BC2E65D19A15803A6C7CC
AB40B08DF2E44B0F8C22559B2B17B64D34D46399EB0A2DDCE32768188A668101
70ABE3711BE9EB5EF8B280D751708592EDA8C34E0D21AA82D5F08B34C8F05A82
9DB662C1509559D08F4F225C770E404A4B2D5FA12D8CB305502D1EFE35444A39
56AEB8E16DC833CBF3AEDDFD05F9A15168DD086A8EB0B95862FA122A09081B22
18A078EDF6C26509BB8CCF2CCFA3B394366A43938D178311533BA01AE5306318
5C7352159E3814C8F187D05B814D9E3AC26BC06BE808E4078768CD0EF295AAAA
002172D37C39F5FA2C09BA5F38BDB994926B1E9E144441169F15B92FB0A943DC
91B8B94FF94A43F0C273143E753BE0F82781384DD5C0256CAD073EBCBB438016
281C026DA33DE7933B3351451DD607A95C88B3F7C78D7B4883382BE76889E53B
CE6D4203E26EABCC4C8BA58B87F82D8BDC10960A400315A0FC71084BEA3778C1
315F63CD8ADEC2FD8D26CFE7882696273B951CE5157DB54FB7E9CFE74A2967FA
ECFA026BF2196EF013FFC7ECB706F5F7963748164DA4A77BDA5BFA578E5E399C
17EE0FA0BBE12D44BCB8BBC469917A6F2A9039BB1AF6C0BDDBA6B4EB5790AC4E
D0FE24D29C2307454085B1D1A5A701A394932F679444C284E4295C1CBDC1987C
832F8E6EB7F51726A76F65C30D4588A17FD6BF54EE3C1294ECE75FFDDB8C4036
7868948819AE7B5162A3C0F4953B550BDCECB475EB9F63DAF08C1C16A1EEBA00
344AA22D695644AC890E05A8E6A0F89D30DE3AD2F96A0FFA53807B39632F0D40
CB2C47B83B63BE731868D984D303709EDA52DD05E0E80846A3B434D86E2F7340
7614E3D0AE31D9A9CF7BCA386974F0F0515712E3DF2CDCE722264D2DD1679352
5C3596E8E917655D5713D742FED25DF8E63B22CBA489D270287637C40F6BCCC8
DEF11001EEC25254EEA777735D537130031EED670768E3E493F47662E2FF2F77
417386EDFFDAB7E09B573F665DF41E1D781E4DD4FD3514C7061C6A47C3C1EC2C
AE0587DB3C71DC1C0D16162473FD4EE364B2D6232D6EE266358CD4A6686CB6FD
FF86A4454A39A3E3ED3802626DF1A839E2DF940F9A074440DBA437589069E12C
A1F3AEC0B4C5813BAAE9AA5E1BE71FA09CDB6995D419D86008FE63A6960D7C25
DBE12FB42C91CF67EB7C2523BC0229286271B09AD889D6387F5DF8FBA51E499C
421AD702B3602546EA6208DAFEADE6308DAA43D59872A0240E51B650320EB2BF
DCA8675619F38129A1DC670070A48A4B67731DC55C9B6A2908A9BA7C5CF316D8
688325E8CB562D259166D219A2ED688710B6F9F83C5D19BAB1B026F79285453F
D4015CEB70012898FC8AB4EABF4E9F025EFB9B17F2D3ABC14C2A8211676F3757
92F2C5775A927F2EE369B4DF7CB79E980C2A6B24F8EB5CC90E31C5C42385048A
73875792AE42C7566FBFFDDDBCB5A8BC8CC6A8B767BAAAD0453AA97D32D4F3A9
ABB5AD0567AC878EC44A72154B65AB4B2AB42E0E557263DC24DFF733D398C8E1
6E0635B8A6004A5EEF634BCEBC021B8EC9734366C08DFFC212B970A75CB813B1
B6DCD213B49CD30634323B17A771A7A61A952109918C89EE934DCBEDB8BBE363
15E1F68598D3F49F5D18C84235FDDAD7999D4D1D1E25C9203E539817CB0472CB
805AA9A32D27656E79F8CF023F9B7DFAE541F3A3FFDFCA36C43E4249170BBAEB
B2B7A6A708FCC6145BD3464DBC09C628F8CEF09B0ED0FB870716C7F9CF2C65D4
178CD686041177AA371A14F2A7137A0BD1D5C647DA1051E1E98B7CB2EC5B5A79
EE3C9EE3A5D0AC6373FC65218F5E69A2BE9F81F9133829CF75DF1062309EAB98
F62A4392E7DE363A04FABAF6C064D9CCAF5E69D228F84A288944A53511D83ED6
7118FA49273764318DA97BF05D0B74A15433570C04A5F4147AC62ECEF68A2F1A
ADD8C8015CB8EC2D43FA640B85862746C7DCBA02516D556CDDF69F323FE1C8C0
DF394E8FA0FF9BB410FD8E8ADF0D346F843155D5D3BA03048A200E359C0C635B
437AEA274270ABCBD756DEA43207C063CB94BEC63433D79A36066148B9623E12
8BC9D5A3495F3A2BE69392BFCC62FD093191C462F39E8C65D7F5F012E24D4934
4EEEC85770D85EC01DD110FCBADCD21EB730EED0EC58FEFD61CE7010205AA0FF
D5B9BE66F05942607711190FDC5CC3CB53564F6C9A4F501AF32921673B71CC8F
47E6A675F77C548020D1E2E10DFA5B035E3BAD13ED75D04893478E3CFE65494F
A418C33FD16A623156C97F8C147E48577B2E68B3BB5D2EE89E1490EC01C898B1
1328BDC9D872F9879644D6D06B2808A2A535568443F75E188B20547A9B74D21D
E8C2FD9033F21C47E9A5659E22B8CBD2876232601FB08DEDBA6B9A81A2601C1C
E1CE33A9F2221AD60D8B32C2E1D40383668B8E0E23D07D9CE00A8F8EFE3682EE
830C3955C0BF0EC2CF061791769B66B7B4970CE00E35B85B9E8972CF88EF90AB
F09E377CC2DC50645C3F2A37DCEA831AFF26DC9147907B253B38B7708A5F319B
D19A1535E56121BC832A8AADC4B026D07EC4A11F71342A976BD452FBA4DC2561
94ECF721D1697918B3C6057AF5AEDC98B4111935FAAF7A7DB810DE9FC89BAEC0
4A580F7AA3E62C784BB41FF95AEB477B7341D12F11D464546F526CBA9EF0E009
1830E391504A240BB3CA1B400A016480E1AB35ABC395919326C63191AC240FC8
2B0B78BA71D084A9208160880E47186303F9A5D1DDAC2E05FDE2EA8B91336825
8CD7AB100A5FF32B17F4AFC17F92E9AC116B7E393B7DE46716F212713D135072
0308980D60CE1E836B7AF96A66CFECFA8BD0E74420E0CAC37F403DDE33F92DDD
4C6B07F5118E623CD57C00222318890EF7508D47B28C8180343D81A32C5D8B54
F45724D460D7B9472E52BCD0F7383AC5526C33FC7687189BA3526BA2C55E1128
6E744F4F97A56D27177C34266DBEE8DBFF5DC488CD4C47C08C7A6078E1F03A0D
EAC040DBD3D953A3928211371D31FB60F54951862EAE26302F3F25699064A4D2
298B92DBD12F96B5477F7C5EF18AB181AD1480054728563C3A973532B203186C
2C9C90E501AA7F3544528C9BE5C6374FAC8E328309BDF721AA07AE0BAAD4C4AD
DF27236025147503733EAD8B1E81269AEE62FEBE1FF191354B05DE3E69409636
9184CC69B63C73ACD61EC4459E44EED6A09D2A38E945F5BCC329BA3FED20978D
CCCF06EC6E4FBEDEFF368F0D5C72230E9289E47D2597EBC1FA93E0A215A0ABC5
D5A3A1EAC5527CB64D90D59378979556D829DA861B2034D4A6FC1CEF313D768C
39CC192378E77B03C27541681CC2FB8F0493B7AF560ADBF84C9B63B54B039C48
6540FA5C7C1715FA04BF934DBD779ADABBE00DBD5934C319908212D502CCD69A
19580414DAD7BD0341F02373BADDDDD7C25012BCB905BB23BF5BFF19D64ABE75
62FA3CA50FF07C704F6AE07E33C8159D974BE6E1819EA7C56204655F70C53AD3
648E17DE94BB2BB03BF05E1D7E32BCA08699BF2E254D68B6324FA633604A8CA1
2958937442BDAFC1A86301165CAA530144EF8ACB887B17CD40F15373E90242AF
3A6801C2C1D2DE708BB1AA5E643F99DC85898362AFBCF85FEBF6E1F6EC5A0F79
822BEAA4B0C537AAD9093895988336139EC8C995C151AF454A4E76F546F133F1
C6A0F6A702DA1A387E7EA60282B220336B512B88183FB75B0AE980AFB6053DDF
D647CF4574AFD690ADFAD2DC1C6BC4351490B5584F492FDAF78BBED130C1CAA1
18FFA84B18695A88438BC9769740A5226E0F58D25BC837CF8723447B1B5ECBBF
1DB51061AE6F03CD8B14E89748C047367260ADB8E0C78BA8A16D91EDEAE7D7B5
B2946263DC4170C3F46C0464F44603505B8DF4BFC25942225F6F0E693BEA6396
F1E4446C1C904B98BB068286DA24E4720DB99C7E139411008AA150B87DC8A149
23A39C6219381D7AA3D707F457CBF65719FF8502632722AEE6E409FFD9DA8BD6
C6C3ADE1DC68B3C4B0AFC8BA2F8DF42EBE6DB3F8983D792B52B1A61BA62FDB61
74A2357DD6AC5DD55FF472EE516429C1FD4A79CEB93970B1A9C2B8AD16D25F27
4D3943317CA165D56E522E608897C7B68F306F70F7A77BBEBC700478AA90F797
55ABF5433CF240A8330E4995E9BF4F21AA04F8F4CB56FA4904BBF299D1FE46C7
F896E991A5A7305C66DBAB1B6886CEEBD59713C328F5B44F180BCDCCD7E9E9A9
E6FF06DA87AFB44A30A057DDE38C98A45318CCBFC5227DBFFC248B855400CCA6
7C4FA1BD337A19100CFA354FD6AC0E2444A372B3D9F8E4965724D238955A0AEA
71CAD9B99B02DD43BA652E94D2734D6F27161BA2147D37F3569CA87BC6DE8B7E
AB1B22E7C6D4A7E957D2EC8121716C7D1A1E8763948F705574D07B84F3127081
03841738A1EBB344519C6ADC6890142F008289253B741AAFC1382EDBD3EBEDF6
59FD899F318F77723E572410582CC7542C93AE718D0C041AFCA40AF23663C388
0E3007F615572DF151FBEE73B105DA5BDAA3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 33 /arrowright put
dup 68 /D put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
A853F0B32C3E5AB84D5618B20A2368E6CCF24E6635AC36F5912FDE664856D62E
28396E049FB828C803F08478AD134076FC54DCBD62FD91C88AD7CE0DFB8B4EE3
402B214CA01AF48514A8B3821A16F8A4ED22E558AAD15F1A9AA7B142AD376564
5F34AECC218C38DE3195C8143D31D6B662192ACFDE7A8856157FDFB2FCC6CA51
0D165E3FD73FD5E84C79551270664BC1F71F8A69EB6890DBF020F889442A46B3
01514C2C3633E9CDCBD3E4CF0EE208ECCEF2DA5E12ACD451A8DF7D936D12EC81
9374422CBA9F44E1B8488B5A5E513EBA797C0C73B3819B57E20E8BE19B2A7CED
173E63EFC6B5C2BB206401F440007869EAA3A4A94C63917E4B63C9B9671C21C3
AE4393C1F3EEE7C8F2A321168A2B6E8F597C9C524F5D3ED05A4867185DDEEC3C
47704889C9A89CA42968EF604375C215E4F8C055F65F0BC22DAF4AA05938BDE7
39023E17C4474D8CAA1CCD30D36084DBF13B3AC72D1868FCB6A2FB29A6E79EEF
13E3A12E01449869B739E42DE264C80443CEEC11FB75C0E150A33B45C1C774C8
C56719EA1E1B4FE1C7850ABD6F40401AFFBB5FF10BAD3866CEE5458491E0B08C
CBC72A6C6260324D77F8C10D551D4BCF992170E730A3A0D1578DC6A48091EAE7
9CEDBD880541C6C689EB54FB8387262434888C47B09FA8E611263912549AE991
A6288474E9991A995C91DFB5EA9AA3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
dup 79 /O put
dup 105 /i put
dup 106 /j put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9042537872831BF5F1F340A
8D3E6DEA1D9675E87B3425FAA0172DBEFD7C28E30906B9FBA65517C9B58FB6BD
E0D474E69BB90B0D130A32C4130974A1C961CF064A5BE8EC1056858553FFCF7C
0D78627BDE04E5D0B9F6F72F92B61A915DFF7AFE7DC3807891D039AECEAC3F50
0A09579E661D3DC3022206061E0250B09A05CF198DF82D4F28FCD3671E815A6D
94820D0C87AB1DCEC251605D9490BC465D8A62C95B7352250D76D9FF1D3D5A32
9690780A5B56F9BA2083B29AAEA996FA95246D471693F2DF2608C28329316045
535EB92036397343A7C9211DDFFC557CFD5C64C6FEA484969F523FF8F497CA40
F7D9133C7CF1A483462FB124D12B54F7A9FD1F664DE0D8FB91272E792D90C250
8260C5238239BC431CB7150AFF4302A4EBACBE730F581903054F06874514DC74
E0BC264D1A85964FDD1ACA8DF5D4245179A87797C36CD894E9A9E4987AD6AAC8
6350CC585405668BF347F4F82766F2C355AC4D4F483647A02ADACD300641DB7E
F17004B13530545E871C6738D5FD13DE982A0F7797CE16AB88CA9D4D1C0CAF2F
2A8C3E02F964B5D8C8A12CA4F5ED1F79E00443DD66F7D0CE0CAD7375E1D44CF5
A295F520D713093FCDC419FEEC7E1F87827EC56913F208159E9DDC8F9E167AE3
3AA156D7C0757C3D37A273F3C281877E5A554BABA0A654850A7725507CD18BC1
BC128192F2E326690B87CD4EBC5B4FE119B62C7E185EB1BE26422297183AD766
C1DD0259B655F9918EF8892134BC3B733B80F4ED0C391A4D57BC38EBE2976070
6CA5157ED259179B2F615C505FC07B6F3B3D2CE381FFA29B0D030CDA26AB2711
DE1E3CA4DE2B41804CDD9195EF8AD0DB95EABC32FE658EDF088394FC7649E232
9C930FCA72FBC8EA8A23F76E621E8B8D612277D8E3900D9E1D1F46E407DF972C
B3018106C6C912CFB935FDC46A37A214AAC4B757A358118D3C5596FC3F87DEB0
F66327FEBAF29CB50973C300B9EB54FDDD57516ADC55E17D95D66A683FB40112
A26F08488910329AEC3F98DCFD17275B6832A9919969C2B8133F7FD87DC880AA
84120C9F110AFED62049C20DAD8857F50C945FE21D4209858B5C12938CFB79DB
70B72AA1B05CF7D259C873652EF645B906137379AFE726DCD5445B6BC40509AA
29322221EC92A7A5F2E18902869AF6E8E26E3085FEB4B1DD8DF7D7E6C0FF6D4E
327234F4F7EDA20223FFDDC287D5849A440BC3E83A62D452C616E262CC9EB55C
2D3D909AC4D550896B1A531DC05F442F025BF33B2426DF62D192DFC26F19F0BD
2B3031D9C24E411DF60B7EF13E5784DBC3325D01103015AC832482F59BF6DCF0
D1BED194503E129DAD9C1A6AD260AAB41DE5F1A77F5801D5317CA3599F0C35F4
7A6BB839970260059E93BEC377ACC7470D3C787723C61C0D07B8FD1707833DDF
16F561A35E5CE35D96314E9BBD571A772A6F76453B701871E63ACFF7DBC24EA0
7696F1633615D2684D1D9E0D5E768C0ECA645E816D40858E35B04B5A5F5C2CD6
F754B6965D2EEDE0AE725C3240A1A721C9928D13088294A623A540CB1E24B594
D3F7D020B828999421B87209DB7D573708AC09541007E509362CD8060A05B206
4BF21EA25718A0F5A2569A68BE1CD5B4611884F173CB7675CC789245A28D0B48
697B94394D36B4C196648DF94F61AB0B1F017EA2FFEB3D9E965C1F23888BAF75
9952D2C9AEBC36FDA4E299649B10243010E02D90FCDE7149D43362B8A604E65D
D7D9C5D0F5C7EAE5F6BE4BF04E5B2C4D3090CE842FA3F6F01186041ACD152B83
2612947FEEF718B013443FD744694E3423F37597FA670EFBCBDAB97EF4767E3F
6D52A95CA5B8289C009FA7FB24DA92DB9AA0B65538AD16AF430C70E1EA9D74E1
3661151195CE63B7362F048715C5F8D2E4C8699BB1C78F350F4A12443C30AE5E
ECEB76CA072E751A5E84364941A6572A1970F85D91D71D44F83DE52918E91A5D
F8E485A1DE4E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E0B5622DF6FC4BF52147208D9A91EB49B03BB40DE7F8FBFB566F251942C8FFB1
1DFA50465919400C21CE4724D12E4EB47AA5F392BA927329DBCA28A78FC1DF2E
6FF27F4E4E3F8971D7BCB5F3FBF8F30C214A26E5E32E0E8CBC71BF20AE573BBB
163DD66E89F2C4E2B1A1532AE81C060146F755A1ABA3F1365FEA30B403DE7B22
76F43EDC299DB9C4B5CC1F04E09FE8BA03A83D734BD05CB9BB269174E1BBB037
709082441C1F212697D41BD33C74186087F5CA18CB6922F1BD276C56886F1891
6A6CF891C0081144839691F8EBDC6E207466958AC42BCDC986DF24B4B0EB76C5
23648FA031779FF077DA2286D704B03626E1A1BFD84EC67D8D260A192242ADDB
D2F999C64962DC3017FB223D0F654DA8ED8DF6EDE0546DE0BF02194C38E0F1E8
DB693387C6B275F64AA9006A45AC9BCDE9AE2A37E8E20ED876A2CB5B4E813406
778E1EC1CC15A12F080975901DE76CF0B88A67883DF455B180D64E6E71B3129F
C4A6D60BD4738C823CE1A3C79A85ACD7ADA86B4EFFB80785C82F1C5D9F6F86C0
40CBF9CA45D3B820E906A6DC4FD642BBF82DF94759DEC41A3975FC5BE1A3C5DC
941777D9E7D82E2C84E5475547447CCE42995F8CE345724A821B8AACC3DE453F
830C47A6BD9709FACE7CBA9B93D9747ECE03DB5E8B7C08A33CE582B22659DA1F
A2D259B5BDD978B6F391673FA5801283CF4D2D8B4A028B5C0F95D4EC193AEB48
7456808CC297447C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFBX1095
%!FontType1-1.0: SFBX1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecbx1095, tcbx1095, labx1095, lbbx1095, lcbx1095, rxbx1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFBX1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-227 -316 1723 930}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA0E2F461BA16EADB32842B6D00C76F8A3359BAB9
9CCDA63EAB4501FF88DF4CE0D9DC9F071B528726352196D1D889EC0F0512EAF1
A6ED201F5B8FD2B90DA9585F5B2004EC8159EB426405D76A85AA0ED1D29596CE
FFD55DB52BF5C0325EB43E789D2128DE66E59F9A7C84CFF09969406DA529C87E
3410723FAC317F161388C55FBDC43B850230989AD991ADA95B1CDDC4D978E722
8BEB4E338C3EC48106B4274FD9FFC7CF03EF238D8160A515EA93C009A8F2D3B0
1CB8041F5EB86F1D975BF4EDDED8B7D2C81B665124CB1562B71114FA44449C6C
4DDCBBD36BC95B0E569A5A6EA9219B151426165BFEAA914437CA89EF4B0F5911
AC054509BA0102D462A183A29DFC304DF74A289A052531CF1C505EB94CAF245C
33DEF613E4F1B785DEC94402A2C46B2DD4FAE5DD176985E45A03D85E442D7D77
A7586ECE67CC2360820AC46A8CA0DE0852F2F3F7ABC9D4FDE78321A4B63ED2B0
AE51F2F1CBFAEB6FE8142B4877BBE69FE6D4FEFAB7E5A8A4B22803992910064A
F998A0573C898D6EFC101CAE6E1FBEB97001A62893B76CDA3996BB92B7C2B8D8
F5C16CD2FBB4F8D9DDF27E66377E9BBA95CDFFFE02D05938F97D05AB348A74B9
1D39CA72320F8788593D99FE7CBBC69BE81D60CF58A584C366D2F5874A3CA93E
3D630E60D2D74E3CB14ABB6B38E8B409EF754699F2E07CF0AB2CEC255B464ADB
02D1E748D5AF3000D4B9F3FE46E7ED4F178A5779A6802E2F7EBBD566EF7A9B3C
99D41B302E0C9A9A82F31B37D20A5D9342C3DF6C3E996E616F68C398016ACA08
93FA4BEA3CDE613C9A7DE868CCD010D8AB86039CCD80564FAC100B5EF88CAE36
E1CD12D8592FBF5E4D2DBC00F2875B279549626277509EF470BA92542F41A629
A97360907D8ECC3B6765B6B32DA42D6CA989094194A4D791F756E23845E0A413
3DD0378110B421AB29DFFF0094A87894700E0AC1360191CEC83FE94A8CCB82EF
5A59BD86C9DE3F669EC6ED71B5F6E890368C67129C32180B57AB63A413E7FC96
90638238F5FB004EAD6A8312F2A958565671E184F87B4EE44DC2697558B51865
ED0DF15D36E1E16B4179496422982B9303E74B4345F6DA631D7C6450EB306767
7BEBFDDE9913BBF4ECF891FAD6E45EAA03EFFA83E84F9E953A94B2BAF0019F97
35668FECD0653933C652DEE4105BCFA36EFF48EA35036CF27FF818815196CB98
1CC9C0937AF3BC490D23D1DAAB55E1F317983F27EE740B4A108355488D4E5E6E
3346000AC8A3AD9D182375E7B99FF06AFC2233737F17F5D533EEC4FD90402C50
9E54A542318CA3DBEB2094D643F4CA1486BECDA1C8FC6BE36CA705FFA3D63AB7
D27CC05C7690741C83302584395BF4CC5FC9DE80A30A31E9D23864D14EA921E0
06CD65D87F32CD5EA977216F218E749F30B17EB9840A4B5614203CA1559CA4C3
C32D4B37D081EAC8AC5A0DE563A048F2DE8A17FE18AC45D3E7C543CC85ED699F
25FB652CB9EB1A015ABD78660A041DA9BC4552C15CD4BBE0C4C18FD64AEAC8F8
2E54BA786DB1A5A2BF33C6C1F362D5153CAF9DC64B16D6EE1A01041E11073B21
6801A385AAA7AE837C94E66A18E8C57D7005CC92B836A8F7E7C3506FE24264A1
C8DE16548E65FDD0BC64613BBE637F408744BD7CC5D1DF71C76975335CC6EE4B
1348F5309529F24EB9BAD6E4F31C470EB34667CD11B0E9D84CD77718B6F297CF
3BAB6F92DE3789C01AB8097834545294455AE610339A30E9D1DA8B61D1049142
DA40863B965337B8CE9A674499C185943681708357AE0A20570CDDE20BED379F
83354F77E797A327685F4FEB6056314E6503A77F6FBC914A6FF5283C0FDEE72D
852962B8B3342044FBBD610716AFFAD6553C6AEC02ACA484EB4C5B21C8EEE446
2F49CFE015E1FB85E9C17F845787222A5330001AABC8703D5AEFC5E9C2EFC581
2821D417A9C3AA45E954E7E459B5181BE721A8FA2BB6F264877D14AB5DB2BE8E
A62E5B91104C7E5AC050120A28D138EBB55CFEFD3E7308928E7261AB1D51BC79
F5989026401145ADFAC3E75B47388FE076EA8C17833876B152E8E0444D6F015D
4360755CA0606F69DF491AE05E832DB6EE7224E66D6241D713E7FB313A6CEC63
F07D4039BA19B37938E339E1B67833CD25D4EAD6C07D2DA7DECE6ACBBF937568
EFF7A39A5833198C03915399050D4F4427C7F4CA5A9F57662C7A3FE4169BD2EE
075E34A99C43D16849F7806BD06FD2B86E311B5CA9EB619A75DAC1CA3508060B
A9B027248367C85F81390C6ADF1B4E1D88353E072D4A417B3CB902E96F431AF2
BE3660EC51E8D31E9489D7ACF81C3505D4C32B083901F1E0386C16BE6C691833
43952207658455FB81B6B7F28D1DFA4D2C1EBFBF3CAA161CE584CC7C3404424D
CF824CFB3D490133B7307548392C8F8EC2C6CCFD9ACC174A587E1E1A86BA0F98
D879756410EE5FB2D28D6F18EEACE361D68777268D1CC447CD26A3811E110C73
3FC486AD8B8E0027068D50D44C70D7813592DE9E39567BD0521FBDC7D64EF943
3ECE38B9781BFAB6A0D8B301C6211D5D40336AECB014E2B65B556F1EB0AECCFC
E96209BEAA676650FF003F732DB14F2538861E40915252EA75EF3D0EFA237E33
3A6E3C6D3EFEA669B79CED4F77849560A3E3F116D943155B532ECC33653C769B
773E687147530F269ACE3E6ABD96F54E3EA1975CBDB5E91E2A89EBF19C25664B
BF5DCFAF1B243B7ADEF3AC24608CA6E777C5B1357775F1409C689915B13DDF29
BBDC767F0D690394D716BAB999B54D72D670A36F6639C9AF99A36B643A17F540
F90B275589987457168399415473B43A983034A462CEE31F94D0288293619985
C6C4D28960BB5BDC97BA7A7F3A4FA5B1737876A290D0FE964763EF7ECB9D7699
F18C212ABD1E598B723AE42EE1703BEA7C08D58F9DC943C5F4C0F0D4A7C6BF78
597793E88C77F3455AA2AFDC2A2D946418B00B4631C764842E78D40AC4A34300
BFE6DAB53F27930239BED05C2C13CBAF897CA8570E56836B07A2B975A32C3FCE
413EA715F68B506BC3E6B2EA9FA3ED510CCD0FCB845E77ED106573674F3BD80F
01D8611215A5F70236ABFBEB273C2F44BD3147AC2D0C687E2003D74538925221
1BE474E13F5E965259BB6412A9D7FC7E1BF457133829CF75DF1EA8CC22778FFF
9BA300F6EFF95AED6FB1E22B5A1B3548AD057373EDBB2485E2C6A115073B2168
F35C6FB8657D5015B63B9801CBAC2607A1F785DA4978CD5415D15E4B4C0319F3
B2424B7CC45827C5CB5F1A0CC05351123FD36CDCB2ECB44FB85132D7D3ACFB7C
F88B597F604B5C34EA46F3FAAE650DE3C615698EC35D335F6354E8B4A4C162FF
16A6F47C852399414A03D12190BC1EBE06A612BDF5521CEA49EA4BDAF709EA54
44059BDD7460BA7D25DD0C40EC4FC3FF072F5A914A92FD2ADEC865F113EED0CB
F50617E019030AC0D98A422438DC426099BA46C719578BC48E9065AA87E8BB73
05985B4FE5E4538DCDFEA12550B2D61832ED35E28411FB05AB8E4A071D85D21F
3692CAB47D6ADB79D5639E1A751300AB9F935006A78D055CBE9AD845F1E80552
8C272E4C56FBA898F6D877139F78C6280A58F8BBAF51A8D8155EDD8881A36368
6169AC46803910470547BDA603EACA295C846272F1F868D97BBF124DCD505020
A6A86E554A2C837CB7614014F2B58F413058DD1E8BE9F6E1024770C8B7C07968
4D4AE40855E052CE13A72427E4ECF0C388849DD3DB2155DAE8F1879322E2B88E
3D3FB90959F074A0D44FB4682E625AE0F62D929A6C475AB50B0F6066002E8A78
370B741414B179DFA1D8EF22E7BA0416976A47B321D7241226CAB4684ED48D4A
D260FBA30B7DF36B8D5A617ACEDDE5923663B01D37D363139490B630EE4DA991
2F721B16C8F2CC0EBD60C788119A375D4FBDA133B18D96B055C78051BDF2BDCB
627A4C2B25C3E04E4B3197D00A69807F31630D19EC86439FAB51DD48344E9DD1
9EC876C63DD4211507EA90E837F763D0E07C68A90B3CFFA834A508614C4541CE
81A539F8903896FF4C790BC50D72CF7BA9BB7E1E8B28B8C4B2E22CAE2232C24B
64C8408D38C8E6A9D2368F29689D64FAA87FF208E0CE339214EEAD516E4DC86E
AF6586D371B1AE3D44C91721964E3947C2E40B3E0ACE5CF71C5BCB82E0496431
BD1F1F8193782B9F6500CD2CC316A6C00D84FC2A8D3D536E7AE9B17335CBA426
A2FAF0601684615541A927BC72A59EA59A5255206C4F4FA4AE3F2C72C23DD852
38AC00FE07EEA97F67D0BCC6F3F444867ED7567C31CEF20545D9D5CBC391AC7A
2B8F9BD4DB2803417CDB58AD65327C76C360F8802E5023A96FA9262A5061388B
92A6EB2E79C63C0150E2FA92D2804108E9FBEA7110EFC5440F281F9B75C6BE3F
8948E5A8CB3B720C623ECCC856F4F99B3B808F50AA358CC6BA0C4D1D924ADC2C
4A38EBE33CB1F0407B2B756CE0D6E8DBD8D34BA3C647BFE2421037F2A1666B32
252F7FE79DBCD8EDA9E98EBF96C549535FE13FFB675BDD727265BDF8ACF595B0
34B71892C454F5D7A6DB683516B13EC157DC1B5712887F0F2383A6052BEC116C
EACDC102CBAE8B30D638DB6573B34DA27F54CB05C4F13D8932D2E3C0478807D5
17CA3442F5D911C6DD2E488A3F223E6A25FD66305E92A7BBDBE48869E2D53DBA
B2283273E4CBF2F63FD02438205287C2EBB820BE3174F64A01FB6BEDDF2E6FF2
7F4D964A9971EA057EF95BE3B02988BDF034744ED43E252B1F7869DB3ED1B682
7637A800D6E3EA6D0C707A104F37F815185CDEC3EDF54EAE0367B180F4A154C8
A28EAFA97A5873158AC9AC0982C104CC919D280441616D903FCB48C7A45DF527
75CFF1CBBEB778E9B527B30A1A729B270EE3C4B2B3B84C5D11A24BE494E7859D
81E3F63DEB0CF132A9AC9B33A60C34056787B2E2FD24604AA59F972B3E410D10
4F4B31C2636287654006B36A5188C58EBAAF03B07C9F5B68D68B27DA27EB06B8
F4FE841574B0D9BC00419C8FCB2B0C9E28428D721F0FB0B315F6881653677137
895DCB90FE194EABE813DDBB3CB33249FA37527B31C8DC9C5E650CA2AAAA97D4
662D937788F78F4CC28363CE8CB54B37655E4D25112B855FDD7BDE9364818534
3BDFA11F0BA8B44252F1C90341EBA68AA72F30E59A72ABFE10B91FCFECB4338C
D458C787B961CF2385048A73875792AE42C7566FBFFB767D0EB4CE6FAAE47D22
6BF3E078103BDAD4600CCF85417AAB7F663FEE630DB0A4DC780236848F620F88
9344C963F3BB4A66D11894019BDBDAC7482826B8F71EC51A777B6FE738F61D1B
21DFF10414695EED42E02CE4B837BEB34F2B744B2E3DAA4FF54DEF7E8576A2BE
42F3D6F5144C7D2DD24979B3BC00712EA5AD32423C4AEE425EEF76A3EB471578
CA5ADD2266A3E33FF41FFA11EFC86657DB0E879D955834C88E97124F8CBF10A5
7B3EEB02EF8FFEC0C1906134B72ECF11646B4795E498B54E4DC9835DD69709DF
330A58E589F222A4546A59AC93F2613983FA3128B9E0A31F812A245A84C7A836
A58B084F21421D5EA030D6B0D2689BF74B98D73883CEC18DB569B44E4D9F3F26
C231610AB97A78D972CAED72650F89E7E0B1538C5D0666138FEE21A7784A6B13
422B5EF70FB8DAD131FCA3B342AF0F97401C30B4A6025A8F4D51316BC40B42A3
F179832A5D9E77A3EBF1D8940DD1EB0C930A43CF37F45591DFC3BC7DD96628D7
255CC1CFFD95F8A7D45E5FC874E4A882D4BBA1DFD8A1373B617E06110E9004AC
A058927A71F24C332891DC18525B368CDC8C3FE6A833F497F8A4BB936F109B39
F1D1617D1B6F53DBA131FFDAD74764996F70845AC278D513D4FD901529147F19
D072A1DD129E8FA7B97692FB956E57025E7B5EE5506E9B93D99B3C45D305C63C
25AD80895F05CB1BED3A1BC2865EFC5983C22F4C66901EDCF8E0536F0E0A7662
24EA5D456F726B3FC66F259F69A60D949549315DD15C4C49A35888F63501225E
412E687FD5B99F76EDEC0C5D329F728669DD4F41D32008714FE565C40F0659D9
F1559D9B5036E5A40FFE2F4F316299CE2383D91A368B0530DA3FD4792C3BF076
B385414429C43AD6E3025FCB62878591ABADEAB2550914DCF27C6B9736FA6DF2
AF983BD89892EDFEDA857BDF119045B8D1C77726A61D682A3B0700F3CF527C65
F8DAA14F826EF24EFA103231E07E397505919C124985C9FCE40F291325A17D69
E5C8992853912F5FB63901369DE7A3DF565792A534A787D0F87AF30D4D765140
2D5DAD68E1AA14A34516BFD002FE02904D82B5E167449609F8296CC1ECF1B999
219FB9F4196CC65836EDEE9953BD8A70456AE85071AAEF33DDD6F4F1302FA299
3DFB40774013F4387D5F9773ED0FA5857C773EE176953BF2C8314176F03AD3B6
B4FF58527B20D97E0B89CE63C3448BF5C2A651BA10469159C2E113FD831AA662
D47F36BFBAC09CA996235AFAF85796B81569886EB1C9C20C6CE354C022765DF2
999A90603F1C2834506D470B3EE5E7388E86A129F62D7F314F142A4E638EB502
507B75E254B5CC1334FE0A4ECC9649DE41B49074E88CE3A25BF9FE1356B8587E
340E2EC10F83DD5A880BB8BCDBC1AC89A8A4D955C7526A993B0F3C82BA6D5F35
A8F030AACB2D4CB6D0F823D45B6333C19C92995DB5D403B0B40874128AA67682
A05FE47160CF7EE1DC4DE736760F5CF3B47F7BA08063F93828CBD7CC6BEE897A
226CBC6653191194C2E4330350271629B640C28151E6AA42E523326F41472675
194D0361A30548C7F7A947E293DC77112A1698F9048769240DD5C5E56BCB6AAA
4C742C051A26F3196FD6FB739E65121B53C83E7B9A1A5E93702BF56979484781
7B33E57AB2803B20AD604921A852FD52A4DA36344A48150C87BDDD029FA0C28A
C0B468A927AB5916C1A6B49354ADC9124D1F8F7DC7462B37BDFF67A1828B6FE6
B4D6882F3093F5E85631B99351BAC0B0CB566857C93C02B34D82F03A70F4AC69
DF20D488951299EC2298C450B1508355BCFB1D7A00ED409479B28B94CD7FAB42
0995A81D1112EEF30B52DE9C84486B14D0A5609DF6750AEDE178573BE31F459D
996A2872547534B242ACC6F2D11344A2A524C6D1C68F91C478F58DD1B49864BF
C9C9FDAA8F861BB550DB12FFC3DD9DBEB1811F3A0088BB76424CE4BF9C26692C
2A01EA6D07BC9BB9A075262D5AE4BE5DBCF56DC130824BE566E5F95397266D27
BAAB09FE62DDCE224ADAFB7B80983C0D44BC29B509DE4C9A4020E1FD727B60D8
1D0FD19269EA8231DD2AF57545B31C9ECFECD00EB33818B6A9696D4C6CE54124
C668D733859A81A9107BD5A5C18E5EC86F6BEB664D1BD52C98ABB00474EA59F0
E73C1FFC6F07FBEB237A642D5BEFFB641F4EDCCE32CA58059432164A26B50F8B
E1314EC174482BA6BE5E60E50211676F658CE4F9E0CFF6DDC0422483DDB01907
3774C7736B18A2CA1CE94409D9ED56855A3DFCCBB1F53E9C926C1CF736DFF7B8
875FF41E014A153B4F4DB11EA2EC34C2470B9811A0F3B2B20C3F623C6ACC5BEF
7CD5C08E42C278465DD1ED4D201E20F87F90FDFD8EF6448425986806476C3561
7E8C9A08231D2920B1BF41F4A7261F2882C65F4EB9EE7E3C2D1A646CB1FEFF5C
2478175BF6B5FD497380A0E88D1EC26AACCD06FB688C3C4BD9808AD5DC2240B0
D690D6005BFEAFCECEDDA1F3DD8767867D844A052AF3F25690A5D28CC0375E5B
E552000881576971CB9E40267EE1B706ECA1643925A919CDBEE9E91C51725CCA
705A2A0F842621CA38297540CA0CBA130ADB8BDB60F5B7127CC969CCF4609576
ED38CF0111FCA548F7F154FE53A319629153828D26D5B188C92D7F7756A9B2EB
1E06743ABB9CA6FD5E42D9D3CB5B6609169D3B1D3F69E63DAA88C63369C222E8
E3DA30AF3C1C487C8F01E63FD9A15D27449E99E8FA8D87733B84CC3804E4B679
14FF3A3FECC4F460871CC336107989D8A645A32F679C3A002F52D22BE16278B1
51766E1B174824F59FED7CEBC3DF3CA4531227E888522359194528C2AC62A5BC
88CAD0C32EBB4139C440B18816FE4D870B98547EF6F2A579C2C77291AF45A3F9
5E8C68866DD4C4D1BBD27B060EDA6D4DCEA4750A3E32483F36ADC9BA6073295F
D6D5F1361B844EF9401189ACD8EDEAA949938C67140829411E43BE5494C15C81
232173FD5B02277BA53FFB06AA8D65134C49EC12D0663D58214CD0C0886BA59C
AF894291544F2AB19D4E567E4DE8BDD0F3E0EAC3581E2937368D65BB441FE03F
E3684393D6F5F3F6038F07FC10D735BA9AA1317F148EF8387C3404424DCF824C
FB3D490133B7344BCA597873F5FC49C56006CBF252CDCB515BC871BD6E332EA6
434263A7F4E94E83DCEFC2F9D52E5F0DF8BF5E25DAD0349A9658AE1F46F7F481
FB831276C3DE25FD7C6ABACEA66CA5DBC05A790CF4BDB53CBD3D2B91ECE23ACD
E662B55A188D9D5ACE59F9353E2CC13394FDA7518D580B451C0F93D5C6B1D7E6
B65FE23DC114ED5F4718CACF57593F43E9D4C6CCA52D195691C975E8787E78C1
071B9F8C9035DB94D2DC6BF6414AFB850E5937AB238124545188DFD681702745
D8192F28D9BC779C8F875ECDC7645516FDB1EC569E739B2B395C1E0F24AA5DB7
C42DF627BFFB87D35A26878CD1EE150D92CBFA4455AD520173F2B24BED0005E9
B35A2390E5D2245C3569A98A9D820F059B409C559024F52454CA10C095A47076
B9DCF838A6DBEC48F819F990437978DE17270715E6DAC8C7C51587868EFF3B89
AAF4C334B98587870141AB6B0DFA7106A73FCBFD977DD83111643D9CCB9D162D
EF616B1BF16448A2E37BAB27461C6C46F356BFA27C35DA908E4528065F6E12C1
E3439F2A209EF1DCBA59F8537C8A434FC4D7D128D423F7B3FBE3776948F8D618
710FC40666D91F1E8E8733E447B03C1A60B7F8CC0739A5FFCB03394B9C531003
F47831309F2E9FA31C38F01FA6BB929B7D26D21DBAAFE0B32374E5E67D44D894
1A9676902ED2008F552502ABDE3AFC958B62CA38CEBE1B74FD4A4B2E23850BBE
2D3F3CE87C4195A6FD5E42D9D3CB5B6609169D3B1D3EB5B51562EBB02E40F725
F17817A5C161B0ED5D89C4705E278AADAB332CD5AD93AA74B987B4D2CD669AB3
C23B6A920FC83D7F8F6ACD381919C7780E7737A6F2C9E373342FF5368B9BA0F7
652BFAE0741E38FD63ABF1D5E53827B3159823407432F4865326D573E20D305C
1567FE3EE999C5226E83D3291C865B878C87A991E6BD4FF89E060F1B93C168B0
8FDF7BA2604D6115894B549345099536CBA248EACAC72DBDAB88E34AB3832413
33040997CCECD24598127D60F4476B1FB36B2129CCCA2D4EAC8FD83165A97020
6C185470005EE7C57E4C4C6F050BFCF9BAAB9BD780EB3C47F32561DB51BFDC58
A24D65F0701D01B29F001742622B78EF0C41B98D10391038BFE7B326CF517B7E
E20B6F985FEC3F9FB1D453809FF5D64DCDC7C5B7562B0D325D023B08F7D87838
F62A6CAA01A20DC1E183FECD764C9F9EFC8F22985B783590ACCF686A94CA1013
269AE4DD65209606EDBAE1E32458EE6A9AC264CAA46AFBED21C716BE08770866
0384E0094BEB539470C7635AEE017D4C00F2C103F769CBEC1B7ED0E2E0B9E05F
B74E4849AB6CC49600EC3F76BC5C65C0250A97B106149785930BA086CED7A716
C65F0C460C619C75C5DA829987C0FB82E5D9A52ABB72752EC33390EAEC9258D5
1FEBECD9E0467E137DF774FDA48580F7F0B06D4E7512143BC6240F67EBF898D0
459DD3DFA5FEC9BB84301E33B6987EC3B8AD4C97476FAA41EF3CE5D6DEB35FB2
C2B85B60A14BF406081689197C3FE61A27782C24ED12F3A57B28211FD9179580
6B801DBE77B008DB38DB56C999937CEC419D331D717C541EB3B2356CE3FF8E60
C82F48A11C10C9CAA544F849C7BCEA1A0C120A1C8B44C75D9E7D70A1D9855775
2B889A8010DE1F1D17CAFC33B3031C003A526D8A6D8355A3CDDBE6089A2387C7
77AC73620B6602B27D88CE83FB5303C9654B2FEC800ED24F41481153D90A49F8
C88B306A2EC9471EAC9F2C02709DE2AC47004F4AD1B4B90F57B5D41F602E326A
CBA0C3E438E8243D6FBBAF50EB8FD8FE90C2E06D5A3F28745E379E33E3316D2B
9D7669042D10C326B7B54D1376C25B6E250D2B87302BB888F23F33757CAE8E59
584BF2C32D8F30A42AC346E21968DAA0EFB2930FE229717C5F985741536B76EC
6C5AE447C99060F284BEEADCA2AE4F1A1BCEB919F48A5581E21526381C8A8D2D
8CFBFB16FBEDE6EDCA7D9B555ACED0B6A0A6544647364BFCAC34A37751BE362C
7119EBAA92D4F22EFC355F0FEA1B877F20C91360A182D9CFF377612F21A9BA74
72925CF6AA8F487600CB5DCAAC13D143F7A5864B958FE1C5F03905A106B3A852
4617569FE5C5935C16918F0AB2DCBD1EE29972CD389A80897B1C3EB1A0503062
88D0B4122D313D0DB956239486A2278E514C0DFE9FD538E3D1F7816A3611A504
6E3052AFC231432555B5CC5E18C237E43BCDEEB350DA916B1E2BE1D16CBC1188
41E4ED1521DE860AB45205F5B3FA8A0D0886AB882A694DD664CEE2D979748067
DF9ADFAE75DFE839EC7047023F44E9B84BB557C31F56086C89ADC5947B51C5CE
CB79955D2C14E0695CEC21A85C9EDD20E7A5CDA4EA23EDE166FFF49BC3F3FE6F
C0DB29F4F4168DFFB799D3405D11A27B7B8C4389AB4B0FD9F3EC5547407C9A64
2EBB057271F3BC63F882ABB147387E04A56D219F716DFE81D39359DAA36282EE
7B1EE4628DFC6EE853DE286F4DF343E4773BC9FCE75946AD1EF858DC7CB8C0E9
C6BE15D276267B95011177AA7469F476DA93FA06C5085F0D9BD8E5B602F55215
8CE63B56809F6EA0B07B58E59DBDAC8019BEABFAB8B70F9B6B24B9F2B52D8028
486B93C7AB3C8DA0D757B08D178224D77F85F364B5CC3C3D7150122533C24435
D71ADBBFE866EAD18AA153C3AE5D373F1714B1B627B799B265D5A302F2406254
E8263B9677474FA586341CFB1AA8F38DA6D1E71520E0E1CA8DCF5ADA42FCBA0E
D693C25C465471DAD3753EB3AF6441355FCEAB6254EDA38EDF1405B670B4988B
BF7DBCEE0F3FF194C0C832A0089C7FF2566571902EB3B7A728948034019ECCF2
18A96C1A6F7F53DBAAFC70972E1109CD02A66A36E0EE064E3D180A2E906BC2CB
5F1A0CC05351123FD36CDCB2ECB1219BBAFB715762BAE8419FB4C114A198AE47
BB59FD00D9106B0D8CAD7723AA6213AB310BF572A6D1B2380C488F87FAA82124
70A504D81B9AB9949DD30A8FD8F64CA95E2EE982A6FBD95A9C0863EFC3F5AC56
F4B057542E25AFAF2F3FE79DB14DAE5A39C14B13BDE7046F05D2D31C0A36823D
C364060DB4E0E31C478B0B46A2887998B28F24BC26C775E8E422FE5F23D281BB
FA27B6907A18FDB3D411385E014F297F013CD4914B8AF9A681BD99DDA2E75496
C16E498B6FF324C0FC929CF3EA90E22CCBF9A86CEC90A5A70900903C48790D40
25E339F8A7ACA13BCDBD10CADECF1C303C79DCCFB7464618FF7036976B20F5D1
7512BE8ACF3EC5428C47AE870E4BB6255EE18A915AAD59F20357BDEA11DB72F6
ED91193B161D0A359E80D3B07ED07AD899CADDB3F85F51FFEFF09F4FA1AFBE76
51546D91402F9862B5FC678456404A37FED1F1F77D947B7ECCFCE2402E3E6AD4
A897EF9FB63A01E6F90336EAB37B98B8D14FB31240C4DB40369F75EA8DFBA93B
DECC857AE6DA16EDAAB4E2C0FBFF0293C0AAF406F95B7909806CB7944C542CC1
3D5F27E9BBB22BAC0CF96EF6FB23F304CA1D98797E793AAE0BEF630CD3ED2C33
A6895C0BEFB530C7C7D974B0B7EC4B1474B07041A32A2CD4E7C34BED079E83C8
465632828C8C98FBFEDF023E96152FD62161A5DE8C179BDDE6524891C3A5FB67
502C05B884A151C05113E4DE21286832B4D71A1BC7C2AF7EFEF9B9024F01003F
7300424F53DFCF6569167E33E7B2B6D45EF4042F545586901E870F2A997278E0
785894DD521275D865E491CDA9412F91F7407A7B7522EC6B606CF186D582DD97
2C560B31E94815ACB9D9C47F800907EF65D0E219BE3AEF1311EEE3CA7F8CFC17
AF02B1EED9DF5D2ED7ED7B72A899398776E6126E0661A14CF35A06A1FE895C7A
CCD96ABB6B52ABFE7702897152EDCDD9C72073F273A2136D166C5934CFACA17A
CE851965E554354FAEA597325E914CE46EE796CBDDBE2085C6568337659B9BEA
A8241A91FDA05AF2A2C82DEBECA7D5F9A4F997A5668F4C3E8452A895E91A0674
73FED96DBF7A52B3D1546B378D188341553FD4039F230345D4D084184686F83E
6933DF3A2121E7D87891D43880100919C4F2AA79095DB29C241102646DE3365E
7AAF744686933DA63F9453347FA24AB4F90D735DE3BD3059EDBB9B84A0351E4D
818A0E69B133C1B0393624EF49D8CDE0607A86D7A51635011D06421ECE4982A6
E069ABEFED94E0B4221B343D6D392053084F113F1AB54BFC21D3BA3CDDD85018
920ED5906966783F8481090B52B946F79180E3C9FC767DE95831B193737F1A09
6B83DEE05DA39CED4F77849560A3E3F116D943155B532274D529ACF46425303E
0DC5AE76E353293D1A74CD8D64AC7F49AD3F61B4078D6097D8F18DD64AEAC8F8
2E54BA786DB1A5A2BF348797016914FB7A7A67BA19A5203A130707734473ABCA
BC01947C06B4F66B8D3BB8E4085D99D272B05B8D5CC705E91644DB1EACFF3B94
DAED2909813121F0ACCB72A0FB53F1A579A5869567FB9BC3001803739A8B9561
AA5DA03C3A4C7E8197C3FC78ED0A500BEE02425BD81578D8021C9DD9C4208BDE
984CD19562D1FF2E4D93870B6C5212F5E9421FAC776AD75E9AD7E3BAF2B4493D
2BEEDFE57C688E9BCCEFAB806AC3234606234C2BDDA6B74BFAF8F7BCE3FACC38
DD8EF924370BBAFAB04C531276C445E8034BEDA3DB9DCDA797F007897557D467
06658418710D30E80D7CF094AE79594D5BDE7B8DC4C5D865A2974FB42DCBD46C
BB1F7436193EAAD4CEA5B280881DF4893B07C075EC22E6191683013A176F111E
49E85E832CD22E6C0CEDB0749D445A56FB5838C01C595EE7FE0A326A20DBD797
FC40EDF842D45EB51F2BB65063BB249DEFB6E683A7B6E729E56E422A2B78396A
B0364AFD8597F8D81F1A705CE078FEAF274C6CA62E6954C1103C30A8A9959F34
21A730D13361A2216E33B748CA6D6D9C5BDFDE66241BE5F59A1F791E1D531936
1C7723BA866AE01EC417FCFADE9E7E10E5CB7E704F1877C5D8515C405F275EF5
835B848759BD023FC3D28ABC0F5538E62D234EA995387F5A18FAEC29D3124B96
9B854899BDB00250A5A41863B47FFE6138D7A7E2FC165FE1848BA54CA7CC4A17
F54D043B5881BEA9CE997738107F4DC9BC75FDA79BA985B301BE75FA44F1681C
A7065AB4CB3A32830A6058D21D0D5C29D2F118506E1E6C1383C1F4442725C1A8
97E66E60DD163E384B6993E877E4A7A69B500258AF10F2FA61EA1F01DE101F1F
BC531552236FB40B53E3A579E440BFAA7BF6871C57088B3C645105D53078361B
F9F215340DF74839458362F00E36C577AEA285AC46696FEECA67502D7C143E28
7ABDB387F7605CB4338A6294FDFF0A4DF05FCC9F6BB486871FDADAF480995D35
324DEA5337FD9673D0416BAD3A3ABA18DF3377ADAF17F8E989EF354664E12C84
2424E029E3CF77074AFBDDC51579E49659140DADD4CDEC075D437B9E09AC1B1D
3E11315D0D650503BAD8DED3C44CDD4968129C6D2F7025ADE52F98859FDCFC04
820E2C57F585DA96CBC342F891C4B635956F5DA32412E78CA82C7C0C00F390EA
C371D536EF4695B6CA57321B4BD63CE9D0CBEE4623AF724518CA938F08683BA1
0EDD037D5C3FE2BC9CD49F901D667B7477BDD5F36C83334EEFACBBE957640D62
5BC31AD512EEECFEC5D1E4B54ABC0446CDA90244DDF146F36582434486947FD9
E00C58CB946F642E2FF1A57990729C0F4BB86A3EBE62C485528620DCC921B6F0
44322845A99E26C0F9F8E771F65657F80704D951AB585B22388E7E36A68E2380
38CC14714266A9C87565CFBFE7B34C33EB313E70DD053CBF8E11780F77B1599F
CC348AC52F49658E3794FA1AC64C262445BB5F0967CA8F7D43BE13EE0134ED6D
F0558A20487BEA2FF58602138611FA2A5E2FCD56FC8A6CB88827ACA1A9E5EB37
6EA8FBD382CE9E7C4BD23E1011476DD43ADAA7B8E7BE98428D5D8736D9E72078
89B1A7F1D86D759BBC27CBA563751020564C9B25C68186CB0B1C4C7D1F26024C
29FE0F7D2F5DAACAE3173C865CAE3092B63C7922F21ACC3CFC8CA53AFC3C5253
857E42030D4826D85D884AA3747B7A4C95966FDE971BA80F6E5353D19FD21D6B
FD0A44D5C08B62BE72FCC169B466DAE292D82C8CAAD2605A34C55ACCDDD98278
F22228396C34EF79D1C6DB84F0F04D7D461ECBAF33224311FA4CC6EF3134B337
BFA6A2708B8634A3DC61DF6C95AE4A7566999968A3727745CE098A62BF4E3AB5
672CC627C779AD7BCD74EEB223B1770649C2CEC4D91D676C67A93DEDEFF2D4BE
2EA46713C28573A8F379624C2C38CDFB9295373D918275E17D9442E3C8F78C24
FB366354355A1FE7DB4098070182E9BC228429BDFB78D96CD87A596659B14DAB
841D80997D764DEC9CC7B9F5F32E97B105EA505BD77F34F0B8867A795FA1E62F
83DD596348463CCE63E99AF4D9A1710864B6C7DC555EC34CE8862FD9ECA512FD
0103CE4B7064ACD328AA21CE547EA714CBFB38C05104CE94A693DCD7FCA7EA73
E1EC6E17723D5092244E49336B0C7009C393396E06854D9BEE5E8EA86B4C15D3
822CF620013A41712888ADEF2804FEB380BB2188E627623B0A2E1B36DE6E357F
911C7F03FED7F852F6209353F4A67EE82B2C75218AC4F7153A2575BE392EF94E
3EA3004D6D37C028621EC2AACAF34C727330FD4F460F8E24FE1F6D199B2494C2
FAEAF02E65184BBFB93A6CF765A92845A304A65AD994C2B31CC6F1D7B9D29D3F
93B9DE85225827D4CC503EE46C31D3C381D59C6279A9BC3F6246302BC835E163
4DEF1065CC45368442976A8ACD1DD88C50084F74AFC6E1B87B02EA5C6D6F64D0
B13EEC603AD880C94A2C7BC0355BD9BC921225B542DC1122555EC1E77D907146
6AD9F2EF1C4798811A35B4DDDE3612CA610FB2B46297F57F2016D6E08A6F32FD
909D9FB5B3818201648FD3241C59C9CC8B56A3214F791D6C9EC82CF99AA9868E
AA6410D784D82EEE04E9483CF38C1F6ECCD8EE5C304DAA5B9E8C142981B4C8C8
C86380EC4DB725A36736775D84C408834EA5E1F3379A82603335B4BF4FB5A10A
2B5ABCBEDD7EF7215E3051B80AEDF3DEEC117B7B9708D5D1E84D4F0CB6A32BAF
FFA8F7E50CD99BF28ED476D9B295A44B3F371A6F7C9D698285FAEFE7E5ACA7C3
F48650411AB7B0BD14AD9B03EEA129222BE57F8FEA5231FC9E4784E426AE2DC3
97F2C0F3E7B5C209964A2CD49F406E40BBD704E1D9F468464493DF475D167EDE
32F7306FD53780BBA8202D430E1E208CE375CE8487599092491B45FAC19530B6
639653DF5D853A82B2AE7998EAB74AC494D1AA667DCA0CCA997F7FA3B451C7F1
14AD55FD03B84B01C485C9DFD480060647E2F2EFB45D142595D49535B6A3A946
C635ED2CB1857A9B8E1B0842CA8CE511975D6DF9506D93B7557F9D99565033F5
49D3055F184EB66BC6448A4CB761AFEFC0DF2AA759A1C6B70F07E381200BFA7A
00EA629EE2DCF799CADC32F664CF8AFC6905A556A6018AD9F11B31144C001AD0
EFAEF546655238EBB316EEEF1E7762B6230C8AF7EF4ADA5F1533540C68316CF9
BE9B548A1D0CE72227D287936E45EDFA194B4744286F89E913D0256C2AC67E34
19BE6CBCE47A0A64E3B93CE0DABBD35853A9A22E6D1D130CEEA4F621844284F6
E6D2E8D99706ACF610621ED249A581E06BD6AF3146F58AF4E294CF640488B17A
80BED03498ADFDF01B1935328249AD9D808D4E406724C8F96C8C3D74916E4B58
7F9E5036F2F0DFEEE9C8B57860EB209E5D3F08FEC77E33356ABA5D2FCC4ACEA4
4C5BAD0A85B8DCB886F94D51A32B031775B8A304855CF8C442D3E33C688AC274
B4003FEAB2A4EB2CA2F60CE7A8EDD72F37D55A4BA4FC2466A633F08029C8EA0D
D5DA1F1E6EBE996626A1F5775D2F487873EF02A3817121EA6D11FD30ADC1A6B6
D621B1A7AEE1F42E34153C08E952CA3ACD77D979AC4CFA726AEBA0EA89F31607
29306E4F080CE29AD1F7AF9E4D14EB7405F4E2038F0C72655ECB439F36EDD7AD
8EF308F2B4FC667820E61ABFD5853EFD9A2FFDFA1B8952B004E8E5F1500CE64E
46A0E619D723879545E24B979DB7A66CEC480AF9D2EBAA660AA76761B22CE4D8
3DD0C4853F414DD105E8402AFA7A9CFCE049EFE4F4605FFD4625F45A5B8698FF
BBBAC80A2A4AF5D01E846A13BF6241784D731B56191A86BA0F98D879756410EE
5FB2D28CBE61068F1A1BD07C977506C61DF1ECDE0D4059BD6D38B7A59497EB27
66A7B9144A7711C1E14C6075EB6C89EC0FDA0ADC91D3BBB8346D4CE59261BAEF
736F7D096DC2576F2FB84DC7B959C52CC2B307A8828992F5F81140B724227DE5
43BD6F3D503F3C9D965F9D5DB331D6C96525BB043302CE675DC14910D198C4D9
F57045BCEC024AFFEC50470156E656C0A4D32FCB898ABECC299990D5240B571B
EC251CE187D5FA30968238CADDE17A029F2BFA9FB34890E1D1405EE5CA475350
CF0E8F153CC5CBAA9CDC53F9C6A4F18093DC539BE14907B0AC22A30F427D0612
93F07976EB29C2C671044AA55FB02F823B285156BDCF0211D3D97400FE03E37C
6624E2D1E0E5B1B674A6437BF9CEBC34D15E5DF5398DD70447A2BB03839019B0
6BF8B30FF8ACD11243B027FAD9428995E959E8877C931E49F863F978804CB3A5
7CCC6D1ED120AB6E560702D5F4F17DEA7A0D16D999DBF4C5AE790621DDB1EA6E
D1891A2DB20B0C808B1DD300CD55164CE4C1D7E603BA84311B1F2434A900FFBE
75EF5B362142110B7CBF47CB0C794150CD80D23067922C25E906446A94F50511
3F17918DCD399C09D0247C1E8D882B51B8E7C232FE2B96FB97DB3C7DD9D71BA1
ADFE0F54CD58D95B0C631FEF52CBB75BA647802779EDA24C795433F0692E2DB7
155438CBB18115723D370DBB23D5F6D04F0B7D9DAB99DBADB63BE8913A13D927
138AC23E39DF0A75F273EF18C3C52D25CE97133B4745F7F5E51607F96533B417
926EE7E571D8B89A85D9889A9D144AE9630C4F79290C6A1EE17105AB0688C609
9191A1A11479E27DEEA1444F3AEAC37CDD5B3D625DFE4CF4B584E206CE9AE227
6903D87287C8720D0DAFBA2E8F3308AC56574643B9372388E77C03E953BF18BA
66A98E49AE58B26B9DEE935C35646CF72B5F454D9A429FB7EB712C1120E74710
0DEDE147FA61AA135FC788C7BF988EB6DE1D1388CCC86A82188CE782CD385825
85F5965362DD09A5E34C8CA29571BB865E856EAF14A6ABF09B8EF0F4A8EA3C0B
49CD1AFBF6774E20B2FE3288554515BDC3D1048968A0F0FD99FF2651A9D83D24
A24EFD99693567B7222CCFE9F227B5BB9651406985B1C0F674ED12261D3CC843
1931DF944EF23FEEF91E61761DBDD78F7634C7FF3ED87CCA59DA9FCE7CC4F34A
90311E65E2692A85F0ED8C020C091AD2D5F42AECB984A6E7ECEF1E8572AB098A
E00EFB5043400353101CBC5542840C27397CF20460D40915B2F7980E7CEDD246
8472481CDF0C0459156AD2EE404AB21BC4948675227B3C40E10CA41397742633
97C47D99942E231E7EEA2E3077035DE23F89AD5989EEBAF798B72E5B5195F9FB
9E0062A3ED67A367669D0F2F8B6C3116D42097BA495C5D0272CFD96912058F03
86A653BAF8D824F3C05627944F56F6A2102658ED018742B634DA916152F93899
D625C67CAF164B8DB98C29E25284C7CAA036FF87D0E15CDCAE835ED2F1D6AA91
940D3E2B05A2FEB46984BC19BF6E34E5623D6EBB2402A445008B38619E6B8534
87B44A5326EBA49733A27ED7E573BC74AB93B42D643412F663FA5CD5CD95A74C
D62B0F2F6DC7495C21CC1D691E2D29331D9968FC0D479D829964196ED3E8CBE5
D699B8C0925EC8BBD08B4270A6D0E698C0EB0D939E55E20F3D10D6D777588AFB
D42FE91E9FAD1A0C6422AE85BDF2768EF528A49FE1202B31E516207059FB7752
99BFAE57D76B4780C64CE32B430CA788C83F264CD67157D4F9FD0EF0E02E5D57
0ED072B2196D71C905FAC094D131B589F52B113BC0E8D6E3E12DF15E9CC37EC8
D01E6510463AE4FFB43ED490A0EE6A8B2BE57EE4627F41E21B6B86F75FE172D9
B4CA99409E827CDB53E91118CF9EF4889F6C57C54712AD8FB67C5F7600851440
8528BA258CE090680646E6A6B2CBA5ED1F44D7CBAD26AB5A89DF0E28C3DC3AE9
AC7BF71B2FD5256883851DBEB32C01612431D235BFC8ECABC3DE478DE63035B4
AAB1A71F63406B31ED4E2BB8BCD55E9200DF739C81401F721566CCA13DB31693
B3E6708B406E06EB0F3A3BE4F9165D62AC570F0B04E48A1E1889A41A51A8A0D8
E0C84DCDBFF8029C546A25472C39361BAAD80A30BCAFB7173D87C01D656D807B
06D9ED52181FCD0175CFA0C950CC343C6265029FC5C9DEE2E8682FF82D958DB4
F9E2A8594DBCF80A15F433A990A7E03FFE1984158AC0C09239EA44936433AA98
A6C063BF1B2630FDE4B02BB7BB5C1DA4A428BFA6726388F6103CAC99F67239DE
CE10AF3D6BAA24CE44359832B671A4787C319440FAFF7514E0A0FAF9B30B18C7
420175EC9F174FADDC4F72AC410E7205E5D00C2A3B9C05665F74086E6D2E0DCA
C5B298A75976B16E48B7DCB05C43FBB9B018F782976DB52C11E1F5C031BD8FAD
558D79C76503894CE722BDC60EA03C1F71B147F039B65558D0E62CF52F3926BA
D4286BB0F5E6FFE60B5289E5C9C03357BB257D82116181A73D29B8D9D5FF6A76
AC2B433EB8212E913EEA1D849D8B49BF19870A782EF1847DE1B5F883C98C67EB
9CA360D4BEE1D0AB62DC4D79D2F2A4CDB9EF1D5A8F8F39F99879180E254551B9
7D1009DED1DB3534B9FDCF152FE990A3E8B6B6D553917B52B7B62DD01A54BDC1
1DD6D6097CF8877956E00673094C7C92A73666A4BD7698BC54D1602AEF026DD1
2667AC8FB1FCFD1D89816B71F69296B5A8202D41E9382EBE8DE38A64328954CA
AD2F8DC71838414933AB9AE060D895124FAF2333F6AC373608AF4504D2A4E415
A9E6655A8F4AE02168C5899A2620B2450B424ADD57A726A05C1C4AB3F77A589C
100D1F71B60B8AEFF6BFD9311393743DC03F518FCBD3286C5D8E81F561D5AE9A
CE978C9E705AC0781E569CC5CB1CB7B455FBA794B13A4E4F5C3A4F253B920FFD
6B23D19AF2CAFDEDBB6EA03090497588B70B85CF1DBDCCB191BD815AEBEE099D
F4A4AC2C1066B8705E3AFBA51676C6B02C504047DAA352FADCD34D33B276559A
D22136ADC401391FECA3DCD33B93230CB35D54BD3EDDB367F38C30F2030426E6
EB12E64F25C99BDA33EFA58CF3DE64864D715DDF68ECEED135EAABC6D21867B7
13173B7ED9A0172E630DB90860D62B8612CB8D463AF070710D002644B44E5647
5BEBF24387C77516CB9F32DCE525AC10417393E04E4E9B1E81C34179BECE467A
44572EB074C3FD399BFC8E363DC8EBEA4A457EA042EB3B36824D089CFBC375BE
4DDFE2E1D5A1BE84D1E7EEA0EB6066AF98262CE2787FA5EEDCB7652D454C66A3
D6463D86CF4727DC39CAFA66EFB108DCFC20366B86E26D7A0C6BEB98E24D55D2
3E6EB5DDF5A70E63D8AD45866215CEEB6E90EB4EF43C6129208A12A1A079FA90
B42FC4910E14AEC43D6DD0D61DF021C058A2240549C7C9AB7EDF659CA7D1049F
AE4A970D573E01DF22A50536E1343DFD3C202EB812482B17784479789C8188A5
3BD950EB6B98CC11712E6D526A9FDE9BB0C816A8BA18D9638867916008D8D479
4B95EA9063C20F27F2AA445751FAEE93B660809ED4B09AFC9101FE603776B682
7B6C889775A9C1C0F492129A0022B297C4F9F2F13A61F0557402603E0789CA2F
CC69D78451554FD44CBC31C7749F90B2F3BD7551A1C5E1573C9A46658D8E22C9
B076B7F3B1DA4924EDAC69D237517673B0FC27EC73A949E8D8848A4A38801C50
F6844275F7EA37587B98700289150BF323CB4F38968138B96F54945C779B2F3C
42A48EE34E76279FF84E4692FBDDC7D7845DE5C27C43F93EF914B507A2455B61
A9CB453915EAEC1C13DC9D690AF7E1F6B9E3B1EF222826D4A09011BB59354B06
2CFDF470C6F796EAC380BB43B36D553EDC1A43FA8EA4343F5F3864DA0E66E9E2
6D41EC9DACB79DFA6E0CCF0D7CB7E4F5DA34A6FCC013E005257A0CBC7F2AF0D7
A3ABDA9E7C495D2C16B01EC5A64A21A35172F3AA9C2C89A72886895A5AFB7987
84330E56FA34BE6E9FBE853E25CD7B40203922EA96DBE62CDACC9162B895B8BC
0533ADC2A9A218C1EB82E2E4CC9D3AE875C88989439A221B986803133C2874C0
403E0D4F49BAE5219C1091A80CC3BA0CAD2F1FC3D36C657D30B879513AF44C46
8E04CCF0CFCAD96717B17311EA198DF63509B4FAAFC9E36988FCEA33E437EEBB
7BFADB47771FD23354DB9E7EC3626C2ECD3F5382FE0E6643A6BCC57083D042BB
0210F9D69F0A2DF32A5BEAD00F84C830C47F78BFB2BDC1D69F24E236C68C514F
2F8CF1CD2CBD876E7F420579E16D10CF36B22730425EC81B2A935149A9A97528
BE2B4496015ABD83EA33C11F45D4F1D9AC77BAE09FB612D2ED85D9025A32F71E
5E13419355F15B36C16AB7012795190EF27F80E99E3B2B05EFA0A5460F1A0907
FB25A7CD48D028F5016B8818BD95C0E1C4C6E44F664D947BD5DACE7417611C5E
4E4AD4350ADF28991F9D46DD43AF65A9F18DA4F22D1D72CE3398000A158049EE
A1C6BCD551372F9307E6A0781909269A4CBEF1D4BFBC4160A5D6E4734D4B90E8
95C199C8A121BE0C2B6CD83E031AF61CA8E0E8E15D2AF04B39A3B03F739E990E
9D2B5C5765F085DB6C59A86B076F4427F1087724EBA206B95175AF261D1A6185
486B5063826078616AAB330C81F3A3A58F9E43AF170AC6F713CE7E83ABC80B42
EB34A4D3BCED992AC43BAE58B998D138854DB953ADCDDF845365E961BF8A7545
28CAC51E95A57BAE74E764736C10D32B4B21AF8F2308C99A1AF961A5B7E8511C
719807049E57AAF9EE073768310EE9646792BDEC07C83BA15624A2F08A1A4BCA
D90C568BE1603BF9B41EEC3EFEBD1D328E026F6631727CA65E49CE4A9CDBECC2
351E5C803BFC52E16CD3911721B0DC0FA078A2DD433000768DF6A4A90F97633E

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1095
%!FontType1-1.0: SFRM1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1095, tcrm1095, larm1095, lbrm1095, lcrm1095, rxrm1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-188 -320 1445 942}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF0482493852D12053A7904
BF6E144B9488970F220C299E80886366662C1276120E72472BF84082B9EEC729
F7007ECDC5A850C88810EA679DABE81714004E65D938DA9ABDF29C949A52EF02
EDA8451563235D51286E9133FFC7A27067DF0332ED614AC2D4FAB88EC84E6CB9
FAB41C933E84B88097BA8742BC30A81416D1CAA3545F08E2554B28362B99B79E
FC42281922B94604AABAF5F7A9B8E2D9A4358F38F2382EF9544B859D098DF243
034CC475CEDEBF0EDD0A60C907127BB32F7D85A62A44E90B4056D9B4B2FF3A49
786032C6B25794E2C0003C7852C6B0688351FBFC43300FB0B72880BB7B58BB61
3D1064E7D4DDB128A9B38EF7510B7E5F82BDE39489E2D1DF08816781B13836E4
89390F84577F31776FE43A5F94F817A4AA4A698AA4AE84B178FCB65F1B5A5CE1
334417595F6E40849041565BAA497F6E4B8F4305D849128C9A26A98B909EABE9
8F2659189ED27C588ADC7C744712B4D9AD0C5DD25D1233E979DE7F53C5F1C47C
E9DF254086E5EC70EBC6B7E080060BA72F15E6BB75C75011B15B7ABB6BF761DD
428FF1BD688938C75BEABA7DEE2AF49364D2E198FDC7F8FA2313BBE598ED3703
7ECAAA4670BE3A85C693ACA829A5936778BCDCDB38A5981D4CAC8994E2B2F086
26D8793AC1393D49A8F2FE391F0EF8899A7720697B908266F619EAB1AE084905
36AD29AC3992BD3D77682CA8EEC0A297C9D4F167F3D6FE94EE31C80742E74DB2
0331C9E1C649D036DA3B081DEEF6D171EFCA22A3A0D668EE3121032D3A55BDD0
2AEB87D439107FB3778AB0EC59689768D3EC943D49A8EADC779F610C3087689C
19E649571778AF3905B73C16EAED4E185C873186862E2B848A6F7FF06FD50FB9
A3250B8A6B0782FF750829F55C0655D4D6FC707E24F5CE10B99E14ACD4566001
6B380CE26B9807513FDD928653CBC3FF333C089C557483220716BECF3B38AA5D
0433AFF5A5CF19043C6EC4A49FAAAB10ECDA541E143ACCD729EE49779466D11D
A94FAB52C297569731F5BF3AD2E2A68EF8D1C1218D4CAD6021093125A73710FE
E11B6B3B23CD2AD46270F92FB292F30D852DDE60E6818C162254247893637369
C7729F5A4CBAD8D78B07309AEE44069BD87AA928122D1FFF56B8FD5782BA085B
A2213F8816F01183C3CA298E658EE9C13C6350F14A9209DE8A4E08DA6FE245BF
568355677A9DD49EB4DD3686B5BB030C72397BE2798DC546A5040B8F17C5128A
779AABF374DA038B94733191AAF942B6BA35E22B7DEEE932B202E981784A16F8
F33E50BB66F44593DF8DB37452837893CBA42634629F0D64BA7581CF5E966FB5
3D24198F715A9CCAFCF4AD13465DF0D603C48302D7E683BF122B339AEFC509BD
A8400A5A1F19EC6C599E20238CEDDCA78E8314EDC6B44B38419ACFED6D092481
50786DE3383AB03CD116D52E4190353903E41392A1D01A4EE8A4BC53F31E205F
6E13FF42D9E05C483027FFFB98237D8A88F0E9AF05FCF284185DF4F84430F2E5
809E05D69ECAFB6E970CF47EE63D152C91D08CB1F2B597128D999D41E5475852
43A37E9C40B98C34E4C548CB681B4F0CFE0C808A6B7AD79F5426E165D8E117FB
75434FD3280C18757124D4823CFA87DE5DDA61E2B4C57392779188B8B1B8C05D
0A67AF2BCF74B60574111AD8538E5C868CD9A507E82C8FB885FF2A2FB18CDC67
08D9817386472C80FA1D0525852CA7D9F733FBD0822E7A0BF87BEB994EF5BBC6
F11E9AC04682962D485C410574219353816B83F3F1233322EA4807BE9511D8F2
D78AE5FDEE28D416CA830483D8BEB1F5338AFF9EE7A2C46A5A5618FD4CC4B79A
65A3B693B5C418668CFE7FBA284E1BD6ADA158CE5E34B9080416C4F4938658C7
BE3FAC870A28CE055D4D73CA3186CA198CBACA20DF47D2DD3E4F67E65BE2599E
DCD10D0407325DFB284532BAC0CA783402E666543CFB72EFA692DC73480762C5
FB6D70BFFA48734BC752DE3EED3C9B1CF54831588D2E79165C79B067492DA642
C1EF81D9CD3C67631F5ED2B6567B2314EDCBB705B7CA58179B636C03E483A80D
47A482693085432F9BDBA616387C68BCE6F7F90937F82303C708B017F783C29C
3604D09D059CDF5A93BC30021797C9913A4D7D411C52FA69B38E1541D82A4BA8
C17A0CDDEFE0028AD44FC178C378FF2920AD491DC499382852EAEA2383627BF5
736BCA3DE34E62141F77A1CB63CCDACC8FCA97B5E0C1A4723A8887C768166FC8
4BA0884F0E07386257564615DB8773D9E8B5AFEDE6F666CE4C8FA4C886317967
BBFDC3B0A09767B5E48C2377AAA7FFD5B9BE66F05942607718EFC619F484DB15
736702FFAF60DFE589A19101D1876F1DA8B9FA761422D7F0825ACA113F08C2AE
EBC2391ACC2EBE5D37BFF52E9148C5F2BEDDB7334E238D9E648E22F4EE561EDB
53866B14A0B800720C07E0E724F14F6785E8CE8B310138920BDD9EA1DFB6038D
0570259653C198D38BDA07F1F5D4CF09EA69BF264FB98950C71CE86973B852C7
821848F4BBFCD65FF035F6ACE8A844D683580300CC2654AC34B6001D2B05BB98
607B4CBE10AB3761503BDB4D474A840B488474EAE77412E2537FF6858109FE8F
9E63D897BA0934AFB2BFDD5BFE2BF1966F45C3DE3397E5E4FE085C1EF041B4AC
DF21353F370B3589B65AD6818A966E8BA1923BF6DF3D26F371AD3951063F0B22
FDC003228E7EDE8096A4D8A47D0C7443BFF50001545C4F340CB9D33D6AD3777D
15E08308220151C3E67CADED16D9C451DC4141BCA87F423CA3D6270B08D42741
A67A4F22C2D72A71A4E9E075BB316D8D1AAE16BB13E03499273A86C3A45F797D
13199B68FCBAADE6EE0FE410BD667BEB0A2B421DD8A51DD9AD9D83A46EF9BC52
36760507CA54A845A5AAFE119D7381434823993EEBC5CC244BC533D473316178
CEF28EB6DDF2C228E532E58C488CCF362702F73B6BA4CDD6193FDD8292157E42
EA4C4CEEFEABE9D4D0C125BCE18F8D9E2AEFE43856C7DAB7A7BA44571BF1BC71
D6B7F08375014D057B77BAC92B1DD1C96A089DA275941C1189A6135CAEE72CBF
E212137A07EEA25168B079EEAA72B5F655C20083DF25FD7D1E8C04F39D6F564A
845799AA5D9426F0B6A0995FA0FEA7F53774A492FE177001F6930F992BFE6703
9DA2E012EC7C9DE265454909CB0B54479EAF9F152E3217D0F2593D6863E7872E
3CAADC66E7F2860EA451BF29E8EF0DE16027D5A1505F27504B85F0F16989E85F
CA21BC518BFF48A1B8A5A20E7ADA891F6B6C2DD245920797B2020D35D5A00D16
9323C871ED048E3DC32DF83662610A7299E23A7AD75D36498455FED52EAD7E0C
BB9E031AC71C538B77F097091DCE9472A43B5FD6AE51F6CFB1F6F4B94EF9735C
53B3A4CEEB0C836C777CEBC1EA4D9C3E7F59BB1384DC2E6373B60697C152DD96
476C106396B7B9CFDB7E2F20A54E9B58914BF80E1405E3CD4E8ACF4E0A0BEF43
3D3158B83C0D6B8E07B7117E1EB3196C57B881D5D0462B0EE7B1431E111551AC
C539B529B01E55940C65DB647AE833CEADC12F14A5B209788C9BF4E38DCE8AB8
49C01C47CFAFE2F8843674313C4E0BB89EE4A92E74BC31702D193ABE5CAF809C
6AFBA2CD05D09EDA580CABC3E81563C7BD44278F30A42AC346E21968DAA0EFB2
930FE0464437B9F4136154CD2D8757A9D9BEDD1EC3ED9650607FF03F1320C0B7
3A3C9B5FBE56DE9DF86D93590B9A573439609B3A3D29FBA23EAA7A83E803CD66
7147E1D403E194254B2241DB17459FDCF177057130D3F2F0D3D584761104DC06
CFDA438E6E1C6B6C5B93304C6666CB1AC36FFD053DB503773A3C03E1573F7B6B
E316D8AF143BD93111D712F124C2A50C3165E4CB49DA6AEAAE9552A31A49AD25
F73B34E3DCEE17348D9AB2153E5D660873EDEA0B3C0BC1053EDCE4112DB18267
A277DD764C5A399FC282629FC4BC6A5250ED1DAFAB6053766D30C175AA223ED0
0F684C2AB3CA80BF787FBAA3043842D5E8D48F3E9E17178A7A3AAA7F1CCE1A08
A96FC36363A671470123910272BC1213B00A770F1FD9D7DCE21BD581BA61EDDF
6C37B2D1DF03A9C3B609D77B3FE6CFCC959848E592BB6A18BF5DCB5A8B0AB4D8
371C933E0BD5E19A8EB7A00B5A38964AD9FC71490ADD5A63EB83B1C169406A80
FD576BAAB1E8DC378D204562FC859031DB7F4B6A74DD81E8EA66CC6EDF19F33A
6050CFDD8E48575769447A6D6F19D9C51C35B0AC71633E49E6D10CD65205CD52
B6B09FE27A63BBE50C195D028C985188FED3B46A0429248D1C8A69D840F90A7E
79A1F9E43D35B94FDCDED18D6B78C61BF990437978DE17270715E6DAC8C7C7F6
6728CE50380D93BB7D813CE8818625DDAEB582DE5CC1FC54EDCB110D97ABBE2E
2A5AE9D61ED6DAC34342591548E9CF01B273A8330B4892FC932686DA22FD47AF
DEF16001DF4B870845D5BF753F09A810887C702152DC52D90BB8B332883B02C4
3F522466C295EDEC695CD4BF2C857DD8EA096AD9CB972E862AB467CF3BC505F3
9B41A38D55AC6812980352F216FCEC8EEF0C93AB75056859206FB59C264E9CDF
B2CC880379F2CDB80A1D741DBD9A711E8E89195B5C6126E3443D41E147AE2550
57A4BD4A3E14F2D8BA1FFA7D583672522AFD19F8C75E98FF8DBAFFF3C66C77DB
2BECD582160DF87205C997CE1B6D866C3E7DE4EA963E2265B64FE0C126654916
8126AB66DFBB8C892A7D47DBA5336E6EEF1C51EFAF1A5E5016C19EEE33CA9DDB
B6106307D092DCC56A2283A546A7A7F02B1072079EEE8097A410A032A47FE7DA
10B61C0307146A45621E129B3F7CB2BFD1BD23D76A8B551164E8F856EA098896
68C33A0D9172DF3B1B12AF2E752ABD9226BC94EFD4B859743A67B0166AA2EC17
EE21471B1A569BABFF11561F48BAE3AE95CD2023EFC0B8D4EB2B01D5A9F66C4F
808208F414B206850B3B8C0280FC67A306D217B257C7D8915555544B2F61A40F
ACAAD74A3002D9C498C3D8B4AF2179AF87D099C3CD9BC64F7E9C926241625425
CFE64B843C8DA0FBCBF4964CCA0BA2027EB23DE8F34CA1DCC54E0BD8EAE26F07
F2496A308467D06923DC02B3DDE39FFDC203B9C5CFBABEDB7C0F5AB15E888299
0CD72B3D0D16E9D6F468DB9018BA8D8C8C771F3B74C0ACC8DDE965579E3E61D9
5D83F191E82B4BD48C112010CBF45DD97F5F6C0315AF82742C86F76F35CD926A
4AB95C44FF510A836CE183D432F6D009BC4911B6AA97485D153FF97E5F754210
350F70A046732B115C4E8026D233EEE05259F94510E52A858EA0E61D98B0DF3B
4AE36AFDE134B1222D03193CCE50E1E3D043B33B90EF0FDAD8BCDE9AC2BC70DE
5DADBA9E1AEF9F795585D5FBC9E8A17FFA5B802ACC35E8C474DFF8AF72F0154E
4B79B16714593D4F4CAD9445EF65D5D26F3C5557E73ABDBD50A5B55EB9CE614A
4A57FD12E9F3D58423C6693BB954098175732F64747A4FE241BA59133A4606AE
C81D743AA916DD208379B3CB9AAF49B055D326BEF43FC3D0E84E0319A7060A4C
993C94DF419336AA668FC0AD140EA51C09226882E8CF3C022BC1A398163B1C52
81192A8B373D444D40AAC90262B581E48DAD284B19F24E21F842FD0F3FC332BE
973AC6B0A6D4827B6DB779DA5062639637AD4423119C98D5DC1DC1A3FE088389
2E6AD662812F049EA44CD7DC6F714657AF749438758EAB6FBBCF197EA977B02A
31685931DEDC5096CCC5372BE48A48E44CB854D8130C6F5FA16B886CE9606BB0
F3230AE01005A07A2C0113757F0DC1A0901097301853556A8E92BA399EF964FA
BC1C7B0B4890733108FE08ED508E5039526A257154FD6958E834D2F522D521BA
86CF4F9348EA49AB7BD6CA792F4AA59FFAFD897BC9C6E095B1A4743F861C50F0
0BE89CE410D469A787D4EE89F3160729306E4F080CE29AD1F7AB42D8F9BA3C45
4B2D062366D2EDD758AB2851DBF378E87DA7F29B16C314B427BAEE5B4B1D456C
F8B5944E9CBB50E624B6F32542483A3C7303EF0839A439ABC01ED5E6E49EBCBF
D4D23087FC2960B45AEF792F7CCB4ADBA125281D675358850D4D893C79F1BA27
2CDB1A77C3937511A093C573E74B0DBCAE3B82BD44352E372ACD1E8695E2A57A
C09D9FA9B02CEBF00F0B50B7C856F14CF9522C53FE91EF18458D29E3D4839679
354CDA6F15F74B1D4EDCC43816AD379AFFDB32CBB7DCB599AB9B56C6F69DCC77
C25BBBB53FF432E4A3EC3FE2B22593F7EDADA3A7DD72A28EDF97B5D5B29044CD
92D84898CECC2096E0B8165A43B959E91D92CA902166FD5B9DE86CCD44FD5496
1BA8A2C3E26184D68D5C52F78349217B65A2C6E9971456C23EEC3B25AEC61247
1BC33EB5563CA921B50D54CAA9EF32B24495CC5C64383357F6794E4F86407DDA
8844EB5425521407389C627A6861669B7200F2699C455D213AA27A723EC10653
BF0AB9C0FB3CE54A2AF8C847C84253F6FCD874B5F5716D80F59C271A0299984D
5960B9B025A80CAE34104C780DB2BD058A8C92FB42DBA8939FC29A7D3A108E22
E96B1A237CA8EFF5FD694306E67ABB1C140022F6CA4A8CDEFB41BA731ADD3C20
B9FE9F780E30D2CD78A2C24E11CA961FAF0E3963EFDE9CE56262559C84B7F52F
467224324C88FA71C2B305E94F64E4CAC866DB70CEB5E67074838D480C4FFBAA
393A68683D07E37FE59E747F8DE193DD53584E86BBA90479824AE579B8E064F4
DFDEF28601CA4F43E13DB2EF943E96E066F96AAF3D9B96A3533F94357AA22C18
2DEC18D943FEA0F7E7607B46F62B6A719E675A8A36EDE8F6DC195E944C6094FC
1493AF2DC3305F1FEAD60A211DA571C5054C5B8517BF362F5EF1E095D43077D5
2BF6A259576D59230FB428CEE7220A24C71A8AB26BC8C3F9F7FB125AC97F952D
C8ADB25120EF6EC9A1E7AF65939A11ED9F23352DC1B917AE43FD96557907EF85
7768FA81DA58586D459054790D28EC9634E9A1548F354B89602F76F629C1347B
EE2EB1058D6C091F64CE0C1AB2F5D83ED05966952482A2E42EF365412B509BB5
746F7D44706674D631134E73C92CCE3BAAEE1D7C7FBFB9FE6B840715BC34C219
54EBC5029FAB9ACB87B4507DBD96C7B1F0A60ECA75981E943CD725EDB19CBA44
48AA595EAD2B623303ADD60299B1FDE0403E2EFA6AD3BE983B25B8B8CA37D557
26A3656FEC57456870BD7E64EC79B570CE16F04C717548AA6F3D9B178EDCEA1B
AFD40FBA8779FDE1B0ED350E58ECA8C732872DC6D5366F993ADB0DA182DC7C20
5EEBC8959B0C5EDB08A29C32C4D432C913EFF499000C63139542BB68F83A3E0B
767F66837B6B2190F30E2EEDECE8D09B9A6A98301F8F4A8810A60E695B617907
0C904B4AEC85BE2A72B5AFFE0A91A7FC5F76F471A46B09DB4B063BA5181AD9E0
2DF243B335B5B3582AAD76FAEB29D0724C0A871276B9BC81466A2EDCE68B628D
FC74AEDCFC5F6F6E633F0FD3CE45D0EBF96AD373B546D16B29692A07AD9E9682
F94AEC9E3CB751B4D088DA020D46E2999950871F20C31AE31F8C52A96993445D
0E1126EEF0FF5523957A15D11F15EFC07E453FFF5AFC65829CEE27DEB4075D50
68F66EF1B00BA453343FA6844ADA6F4CF9F136F5AF9210837AD3BAFD9547DFB6
E6AD1C3BC2CB3A80E631675A7F10378A9909EF7BB79A2A631926D544E6887D1A
3A499606CA8E697ACEFF707C5CAF286F43223A822E44D432004DA354352C5F65
03160BDF0E544F29AE3F9AF5652F13F9D164A307CD6138EA2BA6B4DCD2A30F0C
5B2D5D6FBC18E58D941284296E678343888C8BFCB4BA4D7D0E8B59FA560DA5EF
DB22578A7F9D695B9AB930D46EBEA99D7443ED2168CD64263E4DE10E3D9D1DCA
E35D52C8A337EC7644EFED29D76AA70CFA232D50A8E4ACBC3A4A08D48D60295C
7DBF4D1EE1A4F7E280B79C990E82AE0E66F0970A4099F55529BB528DAB466113
6A636E650898E42E18D338D884EA33D1BDE795DA2FCF877B6A0E736B1DE557F3
54607F29471FAD15F4BB351CE2B183F5969B80FDA54B3863F6ECE5866A2A0732
52AD22DCD1274B609D90189339EBE38E2A8DD40F4F8688DC0A423F54FFE3072F
05FEA7284506453D56A0FD51213FC29A0FE8B683DAE8119EB1B9F94380C6A989
81A99E2443A62EDBF42029F90F4451DC84DEFF1E8EF8BD4809F2FC0B379F3A8A
84E3BB231F9B2A3F070A42420B5D94EF7A13011E787205BE38C2744E8A478E03
E1DADFBECD441A5E7DEAE962308ED0820E6BCDAC8AAB91FD490F1C1C8FFA0840
20D07F3834C8034B08588B9A691B016A13368CFBF084446BCA2EBA9EF4004BCC
7AE2F068302B479C23EF64210680C08BCF5EE0C7988AEFBB9AA05D395281FEAD
B320B6F6DD587C96E8DB5B0EF2EF5919396EAA4C14832705F37B72557A6FB3D7
70C880D7A7DF0453FB324D770F7112D355E1DB727A062202D944434AFF03751A
4D702B564DA410FAF48DAC9A6433E2C4E3EC16B3C2ED83FF46024B7EE13441E7
59A7CA7E1B05E4E83D61F68D73A3734B8EC9D803D2BAA0DD1557FADEC4574EDB
72699FDFB1D266BAB4B1A5B116321FEF3FB26BFA8A80D7DFF9DDD31E75E530C5
EB5E56720D6CE4B103A56633379364171174FB24D77EDF67F707FADAD672EAF5
D1736B776A82719C235C32E4E550236A720D622E58470B298DCFFBDCA5F439D9
37ED8FCA6B2F32DEF1A6FE7F0F1A9AFE30726C28691F9FDD67FDF0B2A0ABC610
51DA19129A6C840175C422FF302048EA91C47CFE1D102938E1EC3EA5FC1420D1
61DBFF499DD02633DE6BF6A7C81748D36244D6297C642F5735F2DD95A370228B
DD707EAB9CA559F4CE96B77A74FF302C10135A4E5D943EB5EDC503205AFCF25D
154707E1D0880A7627151C0BEAB8275645120A7F2E39B9B44FC52C7D788E47CE
302C71DE5E8B6A4722114BD94B65DC86690B13EF02D74EAD274D489FAC50C404
CA14AE2F07471335E9BC2430D369351F88815331E8858BFE5A3152AD3F923B9E
A9629C9DA663CC9481C53F7EB2EDDC5DA3F10FA419AC2F519FA7ACA2C37966CD
EA0744101471FE8C18DF4A3EA1963DBF578B750833AB6654D76965628C16C55B
B2A1BC1CBF2D6FBF64BA6446D5BA0FA0A0FEA464ED04E8C7CF7643E89D5BE19C
FC37CCB4665867E93D296CAAB4BF0452C3775C21E1A9DBA27BFD11A18D1A428A
931524ACBBA649C23507129FA6DC7FAF8C22DB737DBAD33B3154FC69C7EB84E9
7643474300A78F8AFACE98FFCAD79633F0154B6F908ED8CFB5489ABA2F75C4E6
76C5E99F0476D19DFDAB7453F4666385EC8FC416BB44CB02E63F02C886FD552A
FAF3347B27755F5A90361EDA9FFAA4F94A60B091FF098A88B15A59448FB8C081
89B1A0EC576642181EF26C326AAE5197758559FA723C154C900C6A1B02C161DD
A50A55F4FD8DBF4C824593333513927CF20515ED111EB98D6953FFDAA3BA45FE
EBEB852A140EB7F669B44C00402F9EA830E9B2ABBFABF822FF7C25DD5ACFE2DB
9892129A26D88B9D7A583F3B9EEF0A3957AF74821939BBDA4324A41B8BE616FA
20128E80025FB50EB5F17F745E24926C9808EE995376B1EB4002635AF5D37687
B969561EB5CFB3B284F38140FA4E8D5CEF0AD05B3D78A767C0F348A0C85BD376
A03B6BD9FC027A19D4181FA2DA8EB4548D290D4E612D5D316E81D0AB7EC59A2A
F4E9BB77983BED35A08DBAB56CD4E70C2ABBC2E6671BAC2A82941B8E1BD69CF3
49EE8262D1E39EF7FAC81A5C3A14C1A4FD2F2B3FFFADECEC131372397BE2798D
C546A505302CC0888A0A7B1DEB05FC3974E19DEE2D626889AB407EBCEB71A539
68D3145B52C8D11113C8FFAB98EB0543015F06CA5583D4508C26A9BBAA8415D4
FCAC799DEA617DFBCCD3F9B8B742D048CC0F5A18C6322D264734AA6F07B66C27
B98F747084B23A94F21E90AB8AF3A24AB83FDCD4DD8BEF1136AFBE1CAD7CD20E
45EED728A8A435E130519E907CE2242D5C2C997F8505C54EA10FFB437920D4B5
6D4AB9AF8C7DDA0ECD8B8115CAE29F041A50447DC6E1A483BB714EC451AB5F17
FF775A38DB89F4A55E6F8731D0DA71455E0FB4364702511AAE614F190DC57F6E
702C55812C06822DBEA4CF609AED4E13EEAA92D2B1932195F2E3F904C66A83D9
A5AB60C967CEEF86323A8C2B85B6508639FC3EAC4112BE6BB379691BD3268925
8D338A1A9615880825982BDED79513B57E8A6666919BAC512C294DE76165174F
2A9C64B22F4461F849CD4A3D043B54235753D3D4D3A68B7A8AC872977070C63E
E4177E3F3D2AFF386FE6F8CA9356CED23BAF9EA9152750B09EB3BCEF8254D03C
338F2B841D1EB5B4BDCC158FB589CFA0B2C2F1B733F70000CDA74E1F306C5EC3
18ED34DF8996D55CC0009E143491C3CC09D96E7C7BF238622127A46E9DBA457B
99B0979A9F14B265ED2C78DFA328110655D11CE1A4C7BBF59F8031AE62DA3B37
B9F81F5A305334C12365BAE5E374EE8BBDBD68EDE1A6ADDE01B507306C456655
961CB25E6E569079B19F5D54452562002D46E339E3B7091443BCA512BED90F03
DC4316C2B4A1EDBCD561A4A26A5D515A11AB8455B925123411E452D336C70F5F
EF0809580742A950845F3F2E8B96D28E4294EC0991B31DDAC3774C5175D5C453
917AAD27D93969E9C75D8A523AAD5E639E1BEFF503D98CFC059C3C3502BB456D
6BB91CC8E31084024D0BE9F8272166E644A9EA9C717122B0337EC0800CE406AF
1FA6DF09F8FC63B1BB85160E845008AD2CFEA476B696D32957BA9610AAD8B808
8373851A0855F6C418B2525AB9B77189F0A0C1B2EF3FAD989DF67305D3A2578F
C09BDF988D89301E6FCF47A760B51AD0189E5900A44677D054C233968191E7B7
FF1651FD2BFF11380DA607D4B32E1766E711FBEE9BDBDDC4F3D03DD5529D615F
9CC451C2F786247EB90AD0778989B77983DF1D195D67E6475ED42B17630A502B
3BF01142F83DFD1916174B5235F311C48CE48EBB5391D023103074F7CB3A5E4A
41125B96B6B316BC3CFCBEF60E5CBAE9C2A0F1A167444F33A49EC16865E4C83F
779C4B8C3E34B413BD504CBBB398FF3B91A2AF7515618AEC56D22F9A442AC6D1
4247F45D74A0C9B8A990E567A279A280EB9980C16445149F2A1B8CA2A8D03B40
A27E0AA4CECA3340721E8DADDB8A9392A4B929C8FDFDBA48770D0A5EEBDE231B
E3F29CD7B63E41AFE5DA440F8F4DF525B20C21D9F224F79B136344171C48CF73
EDFFAF53C1123A420967E4913FC00A0892D62ED812E1F06885DF20795F8CA81A
98FE47A1053CFC1235AF90051CDB190E4D0046919B28430EC6591FC47CE0E743
1D2565F83A705A1A3103960357091DE0BA4C800DC373EC910DD8F571A10C1808
4C917A134DA1215A8BFD10CEEE4DEFD2B67A551426924AA12FA1408073FBFA29
230E7F23904838D2CC829F0FF8CCE45B16DB1AE70C94832B1AF31B2EEC859AF5
40E34A0FA4E165327B6019F68D140EF9AF38DC6618C5B2CE27AEF8175C5258BB
0AD778CA3A3003ACF66F2F7FF074C1BB6BE0D7C4E2E06DCACEDF26EBA8704EC5
62950D1B9DB8A6631974ABA413D04F4F54CD1BED852ED04EB2E98D5B0CF864F4
CDC8FC4B015B0F27E9213B76B889D24E8DAAA34072F945BFC994A215943256C1
E47F8BECE7E795AC9FECA33842097396CFFAFCD0566113768CB0FFF33452686C
B041E059F2316E6A62DCF819BF6E2C912C9FB6118C33D85802759C5045314278
CF8881AC425FBF78298A244FA98D1BF0DD2E9A29C8E84E3ECF24D33F6FDFE70C
D7379F22FD49E963B3FEEDA5D9D07FD9B43DFE4F66992B026EED67DFDA164744
83D9E0B62A7321F808FE647B3A5BFCD4BBDF5DECD27639D41838CE54515DBEC6
C2479EDD78BE3CE49E79E25317442D2BE0F27978066437CB4D6C5CFA87EE78BE
48EFB933A35575678E1456EC0D846FDEAD673C861CC4EEE6D14EBFB58DCD8007
7D037EA8DC31714AB4CFAC64037DBB4813E1F3B1D72527A53EBF53D8D287FDA0
C53C4F78529A896CEA8CAE5A330D89240021DC4981C4900000C2A199D39C2CDD
25CE13A45250198B658C936B7565B7E2B182A4E889020D48739B7C57838BF2BC
3375F3AF8045B5BE8C6F41CDB91A51F24526F7191D91318ED3CA92BB7E641ED3
3E940201249B19F1A01CBAB6D913F6AF7F5C4D7959D59E0836B9E2854A685269
F841E744B6768E6CBA826EFD3C36463EF170607C4FFA2CFFFC3AACD79A57402A
93F3B08776129F9BB7E1BF15C1962B4A25E366B12B8A3051C4C54A5912DB8069
2C46D3DBCC82B2082416D15AB428F5678A467785F345147388388E7CCB0C17D6
B04C83FB8EF288D737A7EDBCD561A4A26A5D515A11AB8455B9228D53A8C71289
CEDA0A84C9DFC6A98893ED58CD2FD6B1944B2FD5A4B4225A1C231B02BCFF365F
BB1EF36BE6029B707453F8EF506ACC9947219B62445DA840880CF50319501CCB
B05AC4C43E1B9E918E2730C558470493B4B4E0BBB266445A4870EB8BD39758D3
6BD74272FF09B0A0F7DD711C21699DED4F7B2E745C9CDA5A55C9D7E0CD879B9C
6AC64111BAB2644771EC23C8D7EBA4461B4A24571A44D405183737CD197CAF85
19881DCCA930BEB817644060772BA2A21D43EBD3C5A590354AFCBA05067916A2
B67ADE09E45D7351A8C95AF97E44A31E70C66D023F34DE781D3BC1E7E5ADD5F2
5E5D8F5B0A803FEEE2801F200C82C2930188C769172BA991D3202FAD24715881
787ED6F633DD7BC5B122452B6500E43258B9BD161B4F8868FE169F830D0D01F1
C5FCDCA82BB3E7DE00EDEED4A2C92620E6B3501821A700488D7316A25731FE29
7AFB17CBF26C25074A589041ECA2FFF826D360DA7926D8AB1E2F847F4D2995F4
95DDF2F7A380C52070C05FA759994DE6B2CE72AE5E6A2D7CC83709E7B1F043DF
62825B22E5DDD3C021B0826B097AFF22FC6F953AA806F512E976E351613F23E8
10E14EF58E0DCBD77C109E0D49B01440EE5E9D072A37BD70D967A08A9C8FD923
404FE5410694CEFBBF6E64F24C41D757120C8648D9033EA065C0733BFD98F84F
BD630EA0D59CA135B698095CCE7B08D7929CAF75A45BAEBB4F2B057A7865E40E
27A673CFFFD785162700BC9A173E21E38905EC11852227A06BDC84ABC8F342C6
B256EC3C94C6F7FA2D0AAF03297DD6299281BBB1023EE030171FC17E0756D67F
11288DD643900B9DE5B6FD103D2DE1F3B781B7EF24E11ECBAF10682F0EE1A0A1
1306EABF754F0BDB32F94307A9E5554E9E55EAF13C4E0AA8AB122335FFE94532
27D0FC8A54C7CB5CA1AA42CCBFAAA67E2CB48A43238E991C253024DB79F400D5
2CBC5FA902E363E99C322FBE6679A2ECA451C3B015F8730B91F64A3357CD0AF1
A6FB34C62EDED4ACCB5C7B370A4CACDCDDE033EDAF188610CC2A2128A1F52517
DCE8A204A24A2FC36B05EEE9E1426445E7D0CADCB966F61D53D7810E94887750
7C5E793E23C7D45E2EFE17CE9788897EEB64184A3E809F3F539F14B58A3ACFAE
18588BE0FEC5980327666F027B2E2881A8D9E617CEFBF6EE46586A89EED6CDC9
F059CFDE2347B6CD75D43DB53129F162DE45F612F122EB2D5C8F4EA6089AE253
4E468947BA7CEDDD702CBC4BA7BB3094985B586D459054790D28EC9634E9A154
886CAE20DE81788D8F106CBD33A6D45FBB5FC242F891C4B635956F5DA32412E7
8CA82C7D3E2C930B87451DA8A1DF363920AE7C7A6743FFCCF494D01487E6A39F
C0971734BFA6BCC6FD80FF422423D93F10886EFF8D502767289BD29C5C3DAEA8
819D90CFE0F892594779EFE38714170490460D80E2FFF616A073BCEF0DB00846
FA13F2E7AF696EF5BE6B92AD4C111A01616F21DA48981BB0F88C05FBB7EDD9FD
077EA816B3F8D818EA9EF8FCCA0A82F0C9C806C474584A42B0FD92080F2CA453
15C1646AFC1425B2020349486EBF7CC71B40A5B2BD64A19D367CCC4E89D7817A
C4B9E5460BD645C61BF45C869DD228550EB2B4E1D23D65682DF00E20B2B90D70
741A6B9E6B1E412B8E702C1B405B496D08284F990C040338A46C166E5DF4AD5D
50417D6E29F48AA861FCFC46211A01A52467362841174C9B5846B742A8F663E6
0F1E730BE5EBB862CBCD59C0AEECA6EA498BF279BF85431AFFCB91036ED9EB15
02D64929BFBC20E740231FFEE75146B1677CD67C0896DA7ADB44E4C40F03DE7A
4EB7A3E539307EA811FED7FF630A02328DA8866E5265894E7E85B8B2BB5EDBFF
69B57A6554BD77B659E01E15F16DE64139CBDFCA3E9A3548F8F197E394F30CAA
D0C5B7E8792EA8379D360E07FFB1B5B1FCC94F9921E06B4A2EDCA412D06902D0
051AD66140461F97C7AEDADF77A039E7E4A5E564127843782BD29EFC0CCEC675
B910DB4717F7156D92945935DE421DC413CA4B1FFD059DF50559C743C3871754
68FBAB8559F405E2356C473E158E2B37DA5E42F92617DA74F2CE02AF56F30702
4276949B0DA3F714FD7EFD5187C07058BE01ACB8D8E4EB0F8915F649D7B0BEBB
562D81F85EA52467D859D59947DF9F517A6D2F788C8861B24CEEDFEFC5E48245
AA7DC6A5C24B3824D4DE5667F74C41E473E0AE25E73862A20B28C75A3B5FFDA9
B1EF7F2DA97E67DDB27F063CFB0EB3C6FF697509736BCACAA028BC78FA92D59B
C869EE885E16DA2E1FDF6C4A23BC9738A5FEAF6EB34DE75B2CC3FD58D4D0DC2E
32184A5AE3B770DBE028D8EAAEC4E14E584BE6A9098B79D76CD3E8D71A8D55FF
92B62301FE5950FC46FCD1E586824DFFCC47C3E2234449473480B3CE799AEB9D
41F5CFC13278D0B9E952893E368B849539BB7A947052983EB453C9752EEE0FEF
82F0F0109F9D11EBB0C0ABC55E08BBDFB8D3295193DBA9FEE3684BEE22DD393C
C51B0EDC0409F748EA8B89AC8F86A4803CFFC6C84162385F337663DD34540F09
1E099A07B6C82DE385C16FD97085D60DE886ABAC8BA761AC9189D02CB1112F64
3AEA60256F0169D6D51F36DC1039D5E0F1794813BA90D65E9A64F8E9E6A328BF
57F4FA276B65487B4C9C3D539E7B670228721A6683780D2A06D39EA1AE7C904D
582059B0C4F23C39704CE9E37D50869055DFE6E647847648875C37F4EC1C41B4
0C7BBDDE96E9AD20CC6643BCDD308685ADB766EA4D2CAFA2171C5DF579D8D5E3
F1470BF3CC4754257835A911DE92721CAE624CFF36C3B46D661DBE630BD23DD4
499D88E9AF66587D0F331FC3F059DBFF07ED4DEE51ADCA94A329EDE4078AF52B
C4EB7DBB4C4178A29B593E67601A6C199C9A4665ACC1CB1BF1F33881825A5E08
9FF5E42125744BE18D779ADA929D2F2D24B43318C39BB97089C2CCD9B4B93B6D
9A412ADAA35E7DA9A4C21B389F45F1AB32599933A6C6114D6EF849808AFF89BE
B636FFD217A19F21B73A951B83D8A19E10F883092942C9217399462BCD4469C6
577B77A00C8F20A1071176B4E9D3FD7703ED8C4255C064E1843D354DEBADDD24
13CE0F20F88235CAB622443A1BE363ED051732B757D779764F616D3087C78423
3EC5B71F630AF51B84332574EDBF2E2F13C9C84D060D9935D579DDAA29F3CFB2
6DD383ECEBA3A6F9965049ACFDF6993996A5715C2CF203C50A96EBBE3339D7CF
54F8EF23562B687B866A3A72F0035351D55C683DB64E430EC56A8C17BDCDA17F
7111693806AE133C7A39715296CD5939B26A068ABABB2798680053E8B0F44062
A650EEE33F12C53B27C9DC7FB5C19BF9571771DC8C76A8F3858588C3BAF29BC0
E1AE257377258E81C81D0F04016187EC0A2FA93CF65FE0F14DAC42A6C25D76CD
888EBB407E927699529259C238FFEFB82FDF422C328987F9B4CD388A0B5B0E0D
00ED43E67633AC39BCA169B6BE33241A6AD2B1445734F9DD731EACD3243D3D9A
3DBC9E5CDFC1B0EA8AD158F294B195DAF0BBDBB3F80DD8FC3F072D85542665FD
F55E7468E2942E463795C7F6D5B7BF0370D9791BE76620814EC44E5B91BA04C1
F0D0C2E7B176F86CBAD154B46E71924C89E11BD3644C5F33FDF897730FD46C23
FC4AFC96AC82A1914FA556A22301A2E7F72E22676445481D2DA79EF543508330
853A42A2512BC8BF866AE01EC417FCFADE9E7E10E5CB7D43A0077036225F0F25
345B2D7F77F992BB1104A2A3A4A0341C5BC4571A31096F341501476CA11FD65D
7217ECE2FA041D118A84CB15596A8C170D39DAAC6A6917012FBF01107760A8F8
2A580A026DFB8A0C17BEC5FF64FD26C02688AECA858A5D81251AD87A3C87885D
C88B9D4627C0C1C47ABC36A6AB30A5F20AC58AC8FDC2447A8DA606F7BF96531F
C0A77C4B7E109C9FC7496838EBC4A311C8B6DA49E4D98421670578E6B8741330
E750D9BA09C5CB3FE06390D32D8B1042DE5A917512730C8E5B7CACD356944BBF
51C1E57E1094C4DB7089851630278281AC54B0C26D18F4FFEBEA04315E9D92AB
5782F56BE6841F9DD4A7DE8B7A3B2BF3AFAF77B153CFC3F41BCF2022653A7C65
590AD3866456566E4C7157C274D9BC1BB87989937753F789D45B22226C91939C
4019D05122B438A5A6357887894D740BBCF660AA19921DE10E949C46AAFA5507
BEBFBE1E9568204D34D67878B4300403481625AE5FB3018E8EEB2F43F7708BF4
18724AD7157613047EAB4365215F5717E27A4011C0CB02559E8B90B384D75C37
A798348585261D4FD4D9F110CEE18BA7FA1B81084BAE108865FBD8A79E6435D6
FE1521A107B9CAB5509392FE554D9A297C3B6FB81A3628270A3D93F44D7FCD00
583C59FB5395A16AB3B91490A3347C1E8C514993F270530719608CD62AD16E9D
833942F5660E4DB1F3583FD654B10DD6DFCE2013387855DF74000D4AAA40FB46
6309C9BC0126627549E14679C8D20B5EA6C04F961E031244586E898B6953E9A9
A607F2EE011844C9EFFD6294CF38E4AA678BA8A08F81174FFC8BE89BD62D2A4F
751D17CDCA5EC9CD3B6B96CB5B0124F1CFF0FF1F0E3B0DC0A674414DED2EF6B1
B0E9C4F4856C9411814BE68BA5C3348E8C766796672D45540E911E023E9E9D4A
6D29EA48B170664391508549B2B5C08634677237C694CE691C8FBF4E59F6649C
78E7B92CE50B3BEE8B7C26856BDD3C2BB4288FF05914D50EB0B4F84D0F83B6BF
6366B660344BC15A7A28894B268A8C63765D01227B73FD45B6BEF1229200E1F1
89F9A507029A725F7F84531D1CF4C444BDFEEB6C43EFC186048B3E19BF81F62E
47AADCB32CA3AFFCF365B4485E96A9C9C4E50BC74E402149DF90E83E13D06B5E
3612F98C3C20EF0418AFB4E31B4E6C689BB54227FD7BC1FC0D52A320CEE50E97
470E9D7D74C7A2BBC1466E4AA94FF641B6F4AFB609393FD526B8FE4E4F145337
C1C08C1914B0684FCB2D907575792AA799B2DE50A375CB7C3428A022F641AEB6
6851FF6AAD3B1D842958E6B6554D5AB8E42072563F825ED1D5BAFB1ACF936DED
051732B757D779764F616D3087C787B21D60A2C52173E8885562979454C2049F
AFCA97EE45B95F25568382B0594FBD382E17AE8BBC61E2FF7C32EC2A0D8E8B67
E27B6D5E3BA9869B76BFDBB5D6035DCE5B14F5C50679110E082589F2C168A987
BAA117D99133AB2477A8D8C1B05DE22267EF877EEAE8B7A29B3D1612CCAE572B
540B3D0A89678CA3B44D40B1CB8CB60C0DB64F4CCBE095721EF38129A1DC6700
70A48A4B67731DC4A2B62B9EFE7F6091BF3A9084447B3638756505A78F8AFACE
98FFCAD79633F0154B6AA5928D5C3330A0985DE6150645266166FD4EE44383E2
5614F85F5F786A647368AB47CA057257C110BDFD94D7FE5D3F3E547AB7D35E47
914773001D05C1AAA83E8FEA614F3BDEBB7EDBFC85491145D585B4BAB5F16C48
522EAADF7A9A1D219564801CC51BE0ED36B782DF9004064B733884BC081F33CB
01002F54B9673FB763DACE83E44F3CAC59770D1A2EEC859AF540E34A0FA4E165
327B62F3F684A5514FDFA518791F396FC8598E57BC11E401E50F554FF3B60B0A
1046AC5B04DC488D1B764E1D7F4F2C1768DE5240A9A1A639BF9397E05DD81FD6
69FE0F808352D10B6D1021D225FDD6D3DF50D39DF9F6BDF539EFCD60F1865D82
06AE5D48E40B04BF40D8F1BC1C7DA074BDEE8D0D81674081B2F39629D22F545B
0DDB036145EB0D07A2BE263B43999D51731FF999FA8177F11E71952CAB0546EA
C57D23DAC3728961A5738BAF3DE33CDA11D059814602994C3E9601B04F831DB4
60AEECCFFCDCD694920FDA52166F1594B2AD9004F2049C54AFEC6C2753402881
DDFAF7A0E2D8FA29ED9B06D7660B19648BFD0BF7FBC6497F83C4F971C9C7FB72
9F2C09E059B6823BD707B06BC726A66766653709DBC437F3684BB830017D24D2
E9439103626F1ACAA0AB109079D2D76F9FEAD393AC47D676580E3287D537AEBD
8671B13B6F5351947C3623030CAA94EA466466CF2657F1BE065BA4AB27DE0A05
7193CD7968A32CD338EBA4E30E5D546899F805CFC92DD9319B8B32AD2A710F31
A5C4DC188E5B984B87595CBFDAAE114A1A9E4505D52E28D45C4B1AA0298FBB88
7F987688C310985FA95B6A820677B468FD7618E5B7A9595F01C13ED443E67C62
C29826807B8E111A3C6B3B455F3FEA5E84F136F1EF7D4E50E6E7149C7F7B2FE5
E019932BD27307E2BC3FA3DAE9D29126677E09A29F0595F14EEE4A3E554DD217
28EC1384314C62F408E0036F07B7DBE8608FB7F8A1E0B3F44D8C36491A50CDF6
29690E5FCEAA265A4EBCA0DCF7DB25A7BA0E098F862139D8F3845920C49D0CC5
1B3C9C4E1CB73E6E68F5B6A3E6E36341BA449D81861004C2131E597206B1DBF3
1D4E3ED344D2DC3D0A804AF8897CFF8D325E3BCD4FC8393342A7ADD68E9277A5
ED51B206FBC088A771F96D1FEC69BC5E5222663BAAF78D6A7C3CC16DCF3DCC0F
572C0D94BEB26F79C1B1CFB52449316373B9DED745E6726B5AAA5F6D6423400D
D973059C37C4EFD161445FC8EBD9E0DE15DEE2A44FF4743FD2AD87D642C06EB8
49BB4565ECCE3815EA6EB4FC5DE70E2F544918BA2AAD24E1B46D0E9C42476B2C
EA7D526B89E74CCB20C4B703F14BDDA24BF226D6A6C062AF8B8FB21CCEB567D8
A2958CFB2C038858CFD2934D0627270939C2E32DB1DA367DA9DF9938205E9D02
42DF83444F6D97BED59688B47736BEFD8683F8BEE016FEB200C2AEFE08AD1843
69AE43BA90C631EE50140F280F88ADBCDE957B40E698ED864C56DD57C66FE2F6
90245F85BF4D96377428EDC1F898FC4C8D798D9664EEFCEBB60D9AC3242177DD
4DB06C84DB7C53DCD58E2BC70F27C661BC42326BBFD95A292B47C8C5B9D3EACA
0EA8B59FC289A6AAEA8F2D1B4079BB9F9CC4BF9DBFA79F6C097C4851C307742E
C38B04A47D9CDE63FCDAEAB8A525ED8E330E75D79C19442EE9B340F165561008
C8FED316AC3538ABDE3D2B9E0B5826098359D74849B1BF1ACC3D866A6EA21FB8
6CAAFCF486FEA5CC311E6281F632BD093CD2CEE8A2AEF3FD6C17A2A2C27C5270
280CF080C5E8CBA471D28E109B8EC866565BCE92362098B78A0432FEF547C188
76BE33A080CD013D011E0589626989843472FB41D6C6651C0600F27AE2F362F5
DEC604F2D938E5850EA01D0A8B305A2836EAC5CD52CA51D1391E032CF0DF84C7
1B0CA2C372BBD540B5E1C9D399F6C7C553A4ABF7424E26EC93748130BDC2E6D3
55533A9A00BC9FB097BB4F3DA71052A3E4DDE1D46EBB66ABDEC131A8AB01C15C
41858A249376D9873B54BC045ECFCF003B25083B982922F14742F1219BFE2F35
51CEF7AA71EB6E5791432ECBC3F0C41B2A98923B6E50169A76CC291AADC98DF4
09AEA1D9DD7129CD5FC778E6D5FB01017A7D7E02671E8CD90F0FB98214DEF2F4
F43704E90648C7D10CE6F0BBAAF4AA0E23FF5DAC516D7E4994772801F54F4F18
3C8967B72D293148AC852698CC64D782B236459C51CFC5329506748B52AF5AC5
F049B8767C4FA16F7C8189335C83F4BE5CDFEAF3451D098E30E9875C79222D09
D4ABA6E86C86D4C739D45E1AC696929E42A5EEDDA288D11EDE78069F2BD33AED
AD39D31B25EB2B0FF078FDD100AD36D7DF2809BB981F0FC958414909269B64DD
4FC200876CEFD6BF2F643DC9F5A8B2802EA5D0A9B7ECB382679EC4457AB96407
6AF2A991A50320FF4D7A017B4D61EA8F90985AF4667472FA3AE02D0DE11E19FA
E47B748D3C2F46FCDB19565EE1282655B88C8375E8290BEF018ACF30426D0C7D
EDC6A949505BE620C3D828A0D7B88A3B5C80F9FB2F07BC3CD2113798231FBB56
6F092107D1524BABABF54A6026F61746EE3CA08A7A918779A8D57823ABB17E1E
E1CC88D82C97E4B13AC2EE69D936FF5340405B66E34DF000C50B36272826985C
6BAB07E8B7AFAD19A18D2BB05B2B3CBBB40012B817E6134CC6934BA8DA5FBC1E
F6C3F11D6817A159A2D8F22CD670347EB6F1DC9EC69E1B0520F62B32E506D43A
C608BB32773307588F21A54B646AC780975017946696C05490CFA08D5AC6AC50
349A91B98D993D522A968D50C498241FDF6D0CE9A9711BAEF529E704CAB6AD36
36B19C82EDA1D26AABD0D59E7C60E7180E051EC584F487D0096FB7D3481FB2B0
60A12F66EBC61FFDA24AC27A48805E711D05B816B318AEAD1BD05BDE1DD7B5DF
FE1CCEB57FB4ADB59F47E0CFE1E64847A5E0AD5CEC1D01FD26352BA3659C416D
54A38607A12270A337A65882DE52C7C10855F0AB49BED3D49FD274228077A873
43BFDA7C3CD1FEF316F841B9E5450878AAA462004AA9979C793683BB67F375DC
3943210F1F1E44D9FB0DE39B1084B18E91CF37391CB02E3AE6A46657FD27E9BA
EF792C83D8BF647F99D359AE3557AA3F5C8DE58D00B4F181B478C34480EB3A0E
01F798D843F1D9D147531314FF87E5F7337F5F90C1A6817C02807882695FB295
6647B645EA4EA98D8FA98A02A4832316BA7EA54F70ADB08C5FC92FD1B1E44B48
73733B7A05AA40F330D9B7BD9D9181BC529AF9029E849A24082142D1FCEF3B1B
2002513E0CBE373FBE065228046A11B0B99034F1F7CFA0B20D1850BF3EA97873
A8663893DD7C2CBB045C538C8EB8FA02E2D5CF80CD95AD6DA752CCEBA7026820
8F78C5D67104262C574B84398CF40FA13C79509E286160FF5E4816FD5D0ACF01
1BA470622EE118FDA02ADD6FC4D6AA9B0D121C58ADC54EE26FABAE4CC8E4B50F
4529D1CA970CF4779106C939B95CE53CEA14560AF16F28A60FB9A02E5AC6E305
95BDB9593145DEB613A789196178FD0C44191C6EABD3C23A8BDD59AF2CABDAB7
AB170C0B0461423E7B04602447789F1F35E88B94E75AFFAF243DAB198697139C
54132E0515A78C82DDF2B5C4A750B8037AF59CFF03CEDDA7EE4F9A407F707250
0C0E530DF4950A1CB96B3EC2BE2AFCEDC96CB7FEF296A3816EF701F8527DB77B
FE66F51EAE669965A3FC471B3BF3115A1898189E0113F0717ED531C051CF6E75
6794F2E7E9D49369CEC1D4F0997E0004D09A58C34A3193EB0FEEAF599BD9814A
3FB252DF4ECE2203FCC824578DA2FCBF8061DBB322507AD20834B04F61B27403
A1E1BD1B78525054D5EEC6FC0C1CB701622605D0841737483D94FCA89BB1ACC1
91E746D38688112786BD65321669D8907FA8FDBBC0C016E6ACD5C7AFF5B494D4
92E50B0962A4E313A6EAB061E1D53AE51451AC7A0EF148BD9D0382A3230DC4A0
153D3C8C47369928E5FBF93051465A7DA8A4AD138FA8C6642AA70137D6A99B82
24415AC7FD66372072B7D8947BF55861A1B4D1A260C7EB8AB28ACD180F00C372
12E57B88550171ABC81BF0B86E96A497B5AC7ECC24C8F90577A469162796BE66
5489AED9284F7A30FBEF4143AFFBC178D827F0623AFF74A769AE617D296936FE
BB5C3D316B35C393824FE1FE2F3B916F5885C7F86EF2B3D33D14D7CFADB8A34E
5DE1FCBED3A13FB1A7B115358ABA58E7971008BA17094F325856670F587092A9
32EB1D5CA4666995139976E86CD4999C6BF92329D550F8BB5EB8BFEACAF0D7F3
F34F51EEDD216FC8067AA4A14B70A895B526F89B80304F838F2F3C02CFA9B23F
725F0136DAE000C6ED861141F687351C4582BB6C76524B68F561376766B69390
54CA71BD84953A8E13E3C3A93BC4BDDD83411DA57F46C8257E4B633C72CD10F0
21500153E499E78B9025EE44599F75913E88DABD9583C20B35026B273D410CC5
7DF9BCE7D706943F92B4C70761FCCAB544AC412BA2D6AA5B13C46D3A06CC41AD
9EA2EC23E1B2441B3F85A2D673C7380E3BA2BE5EDE1530C633331F6484EF8A29
7B00AEE4B229F97F7F19BEB21646EFD96CA8CC144A33487F4D31CB3958EF954D
5B2D8B44747C237495B841C997906BA93A5020307CA0110E2F4F290060C2BFE4
7A58B0E7B3D25550D2269F45F4663F6B9E46D02AA8887CB514B1367170001645
BEEDBB637183E237167D622D78F31AD42F7EF108B55F4EDB2B1A84A01CCF1279
BAEFEE902FD4CEC1234AABF9062698EEABBE3EDE5BF1F5568EBF26338DFBEC4A
728098E310A5498AFD55399A01C53362E5417C53C483FB24EDC7357FE1B149D4
2590E35441896E876642C5D35C8112DA9962D563F9F55C6BABEBB49BA7C5BA49
775DB9C6149CD79B5597262214DC6B11D7DF5AA1EAADBCC43CDBE0BA14B7EEBC
068DAE085F5E9C88934F5867E6BB0691CE4EEB4887B177BBB22D63F554AC4299
1DF189D71BBD4DCBFB5CB9ED9BFD5387E166A0E68CDF7E89EA62C56EFA79251A
F20B93039695212B9809B43BAD8AFF8D90356C00C1828D0B4D21D8EC895A51DF
DB382E72BB2DDF9950C7FFE933EAD79B57F2D99F00CCACD871EF65F8B52D40DB
DC231D029D91EC44B9B03E1E750B0757911324B09DA55D1F87AE03A8AC3BD61C
54EE1A16746BE025D5AF68E574CED00D4316C85C7F95F2BF211C9BEEC41690E2
DFB6A70DC598A8FB20AD3A98448AFBFCEE66604F8DA593A668118C11C5974DF9
241C12DA671CA2677FF610659637E74DB7B4F805765090D2C23B852374FD03A1
B8343C15C3F4C25BFA55E3951511F69E2A96F317BEB0E32662BA80AAC3B9C604
4FFF60B57074717A1D09765DB8DBC2EDC9CB5138E657FFA5B33D56ACA67D5EFD
0B06189B675F332965E2264DBDEA4D47EDE7E7E177528B833BA9FA8A2B71622A
C84E48386C8436B40EA9BF645979E9D1596EF99D3F1FD56A61186B96017AD92F
DDD77E1FDCAE99E0F714F8FFB3B64AF1A2139E8FA7B99A45917FF7FC1278AA16
7BA27489A51CE27428D614C53474ECC608D7A9D24FF293684271BF2E7E3F95A1
4BDE7D1FA56367770212F6CA2AB9B3BE7974BDD5059E21E18FF9E61C48D8B4D8
A0BAD86A036611FCBB82797479772756E754E25784D12661D27638F3AFBB5D27
01BD546E9627318779F3B841A04EBA794BE4512EA22F873C5C671EF91A5347C2
495D5409E1C6E723FE62C95312C95C8BDAC8B737CCB5283766A5D4FE5912C299
AE70DC696DE7C8F5A72C47A9451E5244FF758A3D8E2DEA2F6FB32DCE5B8E39ED
8E038F56DE61C8C472319A39D51EA309371E7E8F2A1F5CE326F1075E8F811E3C
A21FF603CEF54BE2C45962E457D16FA4D13B79D2F8A8DF4A12744BA2BCB368DA
02A0D1860A2DBCF5F6E097610B1794F296C9516A8D5DE5D1D58661C9A6863A10
73ACC7A1A4BC665E49AE9D0A64B93AD0A0702E9B0D246B71970A5AEF939B4617
A802814E4D11B1C69068A0B160456D20180EC008D5D4DC2B5C4187CC69D338D2
DA6AE91ED33009C31F13275B81CC575644ACF7366CF37A54686FEACB093B5492
945E8311991ECAA693C73AF378EE3CFC01AE08045DE5BDD93C363AC9D6652C59
B7D14630644CD9612EA852D00C8B24839487EA90F47539FC7256B388B29CCDCF
E50FC614DB96A4E031164D3524FC64BAEC558A778CF39B5EF626735D51978E52
7F6F3CFC8A1565B32D76A82208EDAE2E21ABD726CB9286D4AFA5AA053324C2D5
C901DFEBBA58A0666D9A1D4B150EC07227A5691F027E4E4EAF6A8F78DD17D015
2D46730B96C8E5FF440FAB57F88A6939AF82A7940371FEE1D08FD18615F0ADC9
A306FD105AB1B8A02BA37629067590191863BEDE8894591E7711C3567264BAA5
C718CFFBDB61BC51A41D33B12433B88C638A92E48F6D5EFED49D9F4CE8479E03
95C383D54F72B48D00AF118735BAB266B102EB18A9D78BAE708A53932D8929F5
363DA8C1977ACD081D0D3B7C1F80F17A8BC51353026795076F8C3C620C4787D9
BB55BC1D3AF76D0AFE7D8E4205BCC624F942E7B9072E4F25F009D72E9A8B8B8B
70E53EB000F38674F1FEDF37CC557936E61EA7F161C1A8D8782C971B96E0A2A6
E0D591E4B77E1710ECFF1DF25D0D647AF173DB39657C0D9733A96C68F6DF0FEE
BC69A97D68C71D2CAA2E2B6881CE837C2528108690F532DDB4BDF72C839C0387
EE7564D4A14C4DEE457B0C98F7C4505658F009D51CADEA92E5A99DD97B372A31
DDFBCC8981A03BD914FE33DA151EAEE18B5C4951185E527F0715C2203A804231
A9DB5D2751F4737BFAA4E3736912D1DD3659BF5B64EBB269F132F9C48DC93CD5
70FDC935C493F7219D6A57DA691BDC873D2E5302A548516BA39390E235F49B05
DAEE59BC9FE442BB6056AB920E7FF9840A035596EC1352896F90DA88F9A1D2F6
73FBF0656F7709DBAF051BA7B80F9067D87E3C5E304B266DF93EC5685DB0CD90
26781FAFA86A4763426D9BFA4E552C9007D45A851CD0CBB2AA67C06B8D4DE1F1
0518DF8FC5BAE4C0F97856CDE6B755CFB8DB575E3BA73FA0DF83DF20F5AA3156
C468F07D5EAB0C24A8FFAB08A94E7C634E8EDFAB646E7A718972ED52271C1A87
BACEA64F40765B0F432009E94E1829AE94DAF0B56D8063AEEB98FFC8BFECBF9B
410CC25922B90517AFC0877AB5522909CB930059593EA3F134A7A33B881E7C7F
DAF7F0E895EF819622266EF3048D518DD6CBB84264B5B231500BEB98E81525BF
8D9816A449DD8278683D463CE6E8DA1478D90779EE7CA1686B1133BB91097CBC
54C95E05316361C85EBD377E0C6D6657A63944BED00B0B3B0F9045AAE53B6A53
7E8BB5B140E421E1F7038C94CD19EC0F510EBB79E225AC4C654991303283333B
A63BCB5874AE7055EED0F40D5A63300D8765450649B6B9E66B5E02E5B639109D
B53B12E96DCC1D9F739853A89B2D074981AE52521608BF78AF2148DEFAC0785F
2C9F6D4B6E376213623DE07429081A08A55D53953D5D4B76C542CE57C6F0DA80
CD512C9EA38A2D1A5CF519A9F17C54EB00C8702B5EEB12E494473A670CF41B38
3EB2F440F5375D9F92E46AF647B001F4131EEFDD8B18939997D2CAA33A9DB073
6FD95AF1392A76A1C57B034B07F188DA8CF38F00277155255774E043AAFBD36F
80014E1C237E6C9FB52631A436691A1DAB4973A064E65FC335017EFD60C18B5C
B8EAF2F94BD1FDB287B31517F9D30FDA1BD7C77AB45D82DC83F35432F58786A9
54907A5961DD05486D367C33B92BA9E9B0AB0D5B380BCAA34008A90F4DA277AE
BCDE65B6A986802ABC9E556B3C54510DCCEAD28A7305943B8A6F4AC975538BC7
9B5A579CC7553BE00890D13F948BC7605F3073439C38D0205C8266EC49299A39
8A3497475FE2FEE7FF77BF1059D3C6C3901812BD5DABA7ED4C4E90F4E315BA50
9B7648951600B06341320F7251198221D99F7265BAA9FDABA99F196270EBE8B1
C5C0913C68EC9971A6BA3D05ED4F006174D27AF406DB72142D714F000E84107F
60FB4582D768D7126FF9E82C9D5DD3F1D38F93BB63E70231ABCCB96E0C5916FA
86107A6A28F06349DABA36365C27BDECA1A607F2EC88DCC34662424D3CE6D269
7B61DB243604ACFCE8679DE322CFA8A302195F4484DD10171F64F2691F17C66A
AC46ECAE490B232EBB5587F9D4B9A03166E593B8320633797A15A219E97BA522
60EECE889FE91B495810D9E3F0F85A14503A793CDC9132AFFB64D45EA8AC7222
4ABE51C4022DBE2AA1F3D8BA6160AF3DF2600C032D22CBBB28466A33A5F081BC
72357A99CDCB226D5FC8FEC66DC16C94944AC03A6F0224D1731BA7DAEB887D11
4A64F53EDC27F98AA8C25B2A8E8254B46CF733792BC528EFC0142B471EBF0FE0
FD4C9F526C1E21D0122D3BD7850F5861CCDCACDAA15A0A5ADCEFF892D950F199
7A0203F865677157E0D909D97402604166B47876974608CC330F021F8B3F4111
9AC4967335EC5CB9942A61FC5E228603CD9821BF80CBDDE2FC0FE8178EB54FB2
67C15A3E6C4F39B87774F032824E75EFB23A380EEC506BECADC198F53C87109E
45D982DC54E87CE92B016A80B0A700B4D3A4F051473E0DE49E928B09B6FD6557
97D98F9A3FEB6E62F1C97389FBD0BE9D01B0DF7ACB05A7D2611D15BB2B483528
B156DDDAEFDAE1B9BE92F7EE1F07251A80668780727883A4DB71BB5F5800B17B
F9CE3B0602264910EBAA97EEE0F57471A9840C696E4FCC3AEA9DE4D195142F50
54F3537999FB3707A17ADC8FCBCA8665EC37CC1E5231BAA389C7321478E58BE6

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158278 55380994 1000 600 600 (interro2_10_05_2017.dvi)
@start /Fa 145[31 8[25 31 100[{ T1Encoding ReEncodeFont }3
41.511 /SFRM0500 rf /Fb 22[27 31[41 79[32 2[32 34 24
4[30 34 50 18 2[18 1[30 1[27 1[27 34 30 10[45 9[38 22[30
2[30 5[18 44[{ T1Encoding ReEncodeFont }21 49.8132 /SFRM0600
rf /Fc 201[35 35 35 35 35 35 49[{}6 66.4176 /CMR8 rf
/Fd 202[30 30 30 30 30 49[{}5 49.8132 /CMR6 rf /Fe 187[59
68[{}1 74.7198 /CMSY9 rf /Ff 202[38 38 38 38 38 38 2[26
45[{ T1Encoding ReEncodeFont }7 74.7198 /SFRM0900 rf
/Fg 187[70 34[91 32[71{}3 90.9091 /CMSY10 rf /Fh 134[45
52 13[37 31 25[69 19[25 59[{}6 90.9091 /CMMI10 rf /Fi
214[35 35 40[{}2 90.9091 /CMR10 rf /Fj 135[55 5[43 8[29
3[47 1[46 19[78 81 98 7[68 10[29 8[52 2[29 46[{
 T1Encoding ReEncodeFont }12 90.9091 /SFBX1095 rf /Fk
79[30 176[{ TS1Encoding ReEncodeFont }1 90.9091 /SFRM1095
rf /Fl 22[40 40 7[45 22[61 8[68 74[50 35 36 35 48 50
45 50 75 25 2[25 50 45 1[40 50 40 1[45 28[69 12[45 1[45
1[45 45 45 45 1[25 1[25 2[35 35 25 39[{ T1Encoding ReEncodeFont }34
90.9091 /SFRM1095 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -112 -451
a
SDict begin H.S end
 -112 -451 a -112 -451 a
SDict begin H.R end
 -112 -451 a -112 -451 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -112
-451 a 0 TeXcolorgray -104 -336 a Fl(\311quations)31
b(de)g(droites,)g(in)m(terro.)42 b(n)p Fk(\260)p Fl(2,)30
b(15')1627 b(mercredi)31 b(10)g(mai)g(2017)p -104 -298
3969 4 v Black 0 TeXcolorgray -104 -132 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -104 -132 a
-104 -132 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -104 -132 a -104 -132 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -104 -132 a -104
-132 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -104 -132 a -104 -132 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -104 -132 a -104 -132
a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -104 -132 a -104 -132 a
SDict begin H.S end
 -104 -132 a -104 -132 a
SDict begin 13.6 H.A end
 -104
-132 a -104 -132 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -104 -132 a 91 x Fj(NOM)k(:)-104 -41
y
SDict begin H.S end
 -104 -41 a -104 -41 a
SDict begin 13.6 H.A end
 -104 -41 a -104 -41 a
SDict begin [/View [/XYZ H.V]/Dest (exercice.1) cvn /DEST pdfmark end
 -104 -41
a 0 TeXcolorgray 188 x Fj(Exercice)g(1.)p 0 TeXcolorgray
46 w Fl(Dans)30 b(le)g(plan)h(m)m(uni)h(d'un)f(rep)s(\350re)f
(orthonorm\351)i Fi(\()p Fh(O)s(;)2307 87 y Fg(\000)-70
b(!)2338 147 y Fh(i)30 b(;)2439 87 y Fg(\000)-71 b(!)2463
147 y Fh(j)30 b Fi(\))p Fl(,)h(on)f(a)h(trac\351)g(cinq)f(droites.)p
0 TeXcolorgray 0 TeXcolorgray 1762 1458 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   gsave  1. .setopacityalpha
 0.25 SLW 0.25  setgray -142.26364 -142.26364 170.71637 142.26364 0.0
0.0 14.22636 abs 14.22636 abs 1 0 { 0  setgray } 0.0 /Helvetica findfont
0.0 scalefont setfont Grid grestore  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 170.71646  0 -142.26372  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -142.26372
 170.71646  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-142.26372  def /maxTickline 142.26372  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 2.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 142.26372
0.0 -142.26372   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 170.71646
0.0 -142.26372 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.75 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 142.26372  0 -142.26372  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -142.26372
 142.26372  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-142.26372  def /maxTickline 170.71646  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
1 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 2.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 1.5 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 142.26372
0.0 -142.26372   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.75
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 170.71646
0.0 -142.26372 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.75 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1688 1246 a Ff(1)1688 1010 y(2)1688
774 y(3)1688 538 y(4)1663 1719 y(-1)1663 1955 y(-2)1663
2191 y(-3)1663 2427 y(-4)1663 2664 y(-5)1979 1542 y(1)198
b(2)h(3)f(4)g(5)-1468 b(-1)-300 b(-2)g(-3)f(-4)h(-5)1762
1458 y
tx@Dict begin  gsave STV CP T /ps@refangle -45  def grestore  end
 1762 1458 a 1762 1458 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 1762 1458 a 1694 1536
a Ff(0)1762 1458 y
tx@Dict begin  PutEnd  end
 1762 1458 a 1762 1458 a
tx@Dict begin  gsave STV CP T /ps@refangle -45  def grestore  end
 1762 1458
a 1762 1458 a
tx@Dict begin { 170.71646 0.0 } PutCoor PutBegin  end
 1762 1458 a 1681 1527 a Fh(x)1762 1458
y
tx@Dict begin  PutEnd  end
 1762 1458 a 1762 1458 a
tx@Dict begin  gsave STV CP T /ps@refangle -45  def grestore  end
 1762 1458 a 1762 1458 a
tx@Dict begin { 0.0 142.26372 } PutCoor PutBegin  end
 1762
1458 a 1685 1527 a Fh(y)1762 1458 y
tx@Dict begin  PutEnd  end
 1762 1458 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW 0.1 0.05 0.5  setrgbcolor  /ArrowA {
moveto } def /ArrowB { } def /ArrowInside { } def    /x -5 def /x1
6 def /dx x1 x sub 1 div def /F@pstplot (-x/2+1)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  1 1 sub { /x x dx add def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 1.0 SLW 0.1 0.05
0.5  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW 0.1 0.05 0.5  setrgbcolor  /ArrowA {
moveto } def /ArrowB { } def /ArrowInside { } def    /x -2 def /x1
3 def /dx x1 x sub 1 div def /F@pstplot (2*x-1)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  1 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 1.0 SLW 0.1 0.05 0.5  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.25 SLW 0.6 0 0.48  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -5 def /x1 6 def /dx
x1 x sub 1 div def /F@pstplot (2*x/3-4/3)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  1 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 1.25 SLW 0.6 0 0.48  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW 0.1 0.05 0.5  setrgbcolor  /ArrowA {
moveto } def /ArrowB { } def /ArrowInside { } def    /x -5 def /x1
6 def /dx x1 x sub 1 div def /F@pstplot (3)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  1 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 1.0 SLW 0.1 0.05 0.5  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW 0.1 0.05 0.5  setrgbcolor  /ArrowA {
moveto } def /ArrowB { } def /ArrowInside { } def  [ -99.5846 142.26372
-99.5846 -142.26372   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 0.1 0.05 0.5  setrgbcolor  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
1762 1458 a
tx@Dict begin  gsave STV CP T /ps@refangle 135  def grestore  end
 1762 1458 a 1762 1458 a
tx@Dict begin { -99.5846 -142.26372 } PutCoor PutBegin  end
 1762 1458 a 0.1 0.05 0.5
TeXcolorrgb 1639 1421 a Fe(D)1698 1429 y Fd(3)p 0 TeXcolorgray
1762 1458 a
tx@Dict begin  PutEnd  end
 1762 1458 a 1762 1458 a
tx@Dict begin  gsave STV CP T /ps@refangle 135  def grestore  end
 1762 1458 a 1762
1458 a
tx@Dict begin { 170.71646 85.35823 } PutCoor PutBegin  end
 1762 1458 a 0.1 0.05 0.5 TeXcolorrgb 1639 1421
a Fe(D)1698 1429 y Fd(2)p 0 TeXcolorgray 1762 1458 a
tx@Dict begin  PutEnd  end

1762 1458 a 1762 1458 a
tx@Dict begin  gsave STV CP T /ps@refangle -45  def grestore  end
 1762 1458 a 1762 1458 a
tx@Dict begin { 170.71646 -56.90549 } PutCoor PutBegin  end
 1762
1458 a 0.1 0.05 0.5 TeXcolorrgb 1639 1539 a Fe(D)1698
1547 y Fd(5)p 0 TeXcolorgray 1762 1458 a
tx@Dict begin  PutEnd  end
 1762 1458 a
1762 1458 a
tx@Dict begin  gsave STV CP T /ps@refangle -45  def grestore  end
 1762 1458 a 1762 1458 a
tx@Dict begin { 71.13185 128.03734 } PutCoor PutBegin  end
 1762 1458 a 0.1 0.05 0.5
TeXcolorrgb 1639 1539 a Fe(D)1698 1547 y Fd(4)p 0 TeXcolorgray
1762 1458 a
tx@Dict begin  PutEnd  end
 1762 1458 a 1762 1458 a
tx@Dict begin  gsave STV CP T /ps@refangle 135  def grestore  end
 1762 1458 a 1762
1458 a
tx@Dict begin { 142.26372 56.90549 } PutCoor PutBegin  end
 1762 1458 a 0.6 0 0.48 TeXcolorrgb 1639 1421 a
Fe(D)1698 1429 y Fd(1)p 0 TeXcolorgray 1762 1458 a
tx@Dict begin  PutEnd  end
 1762
1458 a -104 2724 a
SDict begin H.S end
 -104 2724 a -104 2724 a
SDict begin 13.6 H.A end
 -104 2724
a -104 2724 a
SDict begin [/View [/XYZ H.V]/Dest (Item.1) cvn /DEST pdfmark end
 -104 2724 a 0 TeXcolorgray 8 2852 a Fl(1.)p
0 TeXcolorgray 45 w(\300)30 b(l'aide)h(du)g(graphique,)g(d\351terminer)
h(une)f(\351quation)g(de)g Fg(D)2225 2866 y Fc(1)2264
2852 y Fl(.)1682 b(\(2\))-104 3630 y
SDict begin H.S end
 -104 3630 a -104
3630 a
SDict begin 13.6 H.A end
 -104 3630 a -104 3630 a
SDict begin [/View [/XYZ H.V]/Dest (Item.2) cvn /DEST pdfmark end
 -104 3630 a 0 TeXcolorgray
8 3741 a Fl(2.)p 0 TeXcolorgray 45 w(Donner)31 b(une)g(\351quation)g
(de)g(c)m(hacune)h(des)e(quatre)h(droites)g Fg(D)2255
3755 y Fc(2)2294 3741 y Fl(,)g Fg(D)2420 3755 y Fc(3)2459
3741 y Fl(,)f Fg(D)2584 3755 y Fc(4)2654 3741 y Fl(et)h
Fg(D)2830 3755 y Fc(5)2869 3741 y Fl(.)1077 b(\(2\))-104
4519 y
SDict begin H.S end
 -104 4519 a -104 4519 a
SDict begin 13.6 H.A end
 -104 4519 a -104 4519
a
SDict begin [/View [/XYZ H.V]/Dest (Item.3) cvn /DEST pdfmark end
 -104 4519 a 0 TeXcolorgray 8 4630 a Fl(3.)p 0 TeXcolorgray
45 w(D\351terminer)32 b(une)f(\351quation)g(de)g(la)f(droite)h
Fg(D)1691 4644 y Fc(6)1731 4630 y Fl(,)f(parall\350le)i(\340)e
Fg(D)2293 4644 y Fc(5)2363 4630 y Fl(et)g(passan)m(t)h(par)g(l'origine)
g(du)g(rep)s(\350re.)272 b(\(1\))p 0 TeXcolorgray -104
5887 a Fb(vg)2924 b(Lyc\351e)21 b(\311mile)f(Loub)r(et,)f(V)-5
b(alence,)20 b(2)3725 5871 y Fa(nde)3834 5887 y Fb(5)p
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
