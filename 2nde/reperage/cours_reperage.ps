%!PS-Adobe-2.0
%%Creator: dvips(k) 5.995 Copyright 2015 Radical Eye Software
%%Title: cours_reperage.dvi
%%CreationDate: Tue Nov 15 10:52:20 2016
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMR10 CMMI10 CMSY10 CMMI8 CMSY8 MSAM10 CMEX10 CMR8
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o cours_reperage.ps cours_reperage.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2016.11.15:1052
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/07/31
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-circ.pro 0 0
%!
% $Id: pst-circ.pro 3 2007-12-23 16:23:22Z herbert $
%
% PostScript prologue for pst-circ.tex.
% version 0.01 2007-03-23 (hv)
% For distribution, see pstricks.tex.
%
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def 
/ZeroEq { abs 1E-10 lt } bind def /EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub } bind def
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
  { pop pop pop 0 0 }
  {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
  }
  ifelse  } bind def
% END pst-circ.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1D9B057F51ACE6BBADF67DC4C0A0F1AE1F8606EE140FB1B2D8843522362
8762E804EDDD847E3201FE5EE8F0F34C37204F4DE795965835323E85D72C6A00
6B418B96DF758C100BEE554C2C53BF9861DCBD735247E87F40C2D96DCB3F97DC
78AB912C76BB1ABD750EAB84C7E590434595E235D4EF39D5872B805C1CEA7EB3
368369B2A98529FB880AEF644E86FBE499DDA7E80AA55CFEA7C6A502ED7E13FB
7D049A71620785E5AD72BC0AE82A34E8B0235367EE050E970A3427942DBF20ED
6CA129B742049747F6A1129B659D6D185D7564168997033FEB96B9F11BA70EFE
91344967B451D0993BACFA317E43570B74B1193F270CE537242023DA14E0869B
DA1A295320574295ACF03E3E3C78D9D6518A4AD6BE618098465A83AC02B3BC30
6B8713E7F719A11991C9E1BF0CEEB87F341617EDF0EC79A0BB8B3037D15F349F
AD7A12A478AD24CAEA5B99DCC6C268BED3EF9533A847D6F72E2CF185C932D3BA
3C3AC4BCBCBF368DD80C4481B2C9DBA841D6A91AC3C5A05B6B0630F7A781596D
5BB0AE9B08658E12B5FF633460151828603B33FC29DDCBB7761C63212BEC7B7E
F617E6BF5F9433960D5804493CCC8472D5D4FF8BF4A18EF139B94111862A1776
D2B9446F3ACE38D8E67DCD7E8C3B4A0F5421678A1F314ECEF28D9B226674AAC3
7D60C4456EAF8ED946043C052F9BE1605ED2ABF485B4E9C20B727A23833B38E1
6E15F9FBAE784AA82CE9DC5771F38C34267037779F5B417137A8A2B4EEA4C32A
0C8F604193E4EFA21FE22A450C3EB165E9F5DECF4319C7AEB33F912F149FDEFE
63150A652A07E2AD6080FFA6DC62C23A735C8A062333
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 112 /radicalbig put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2F5B970958CA554D9DB879786C39AAC8139A032
6651A999D3927BB2A16D73BEA8CD512765A19BB5F5051B531D31841C29BB92BE
D08CA34622C353E7DE52288086AE6C70124086727BC99ADC5C24EC84E500FB2C
2EB90AA524E6916E86074B12F9676A846AB113BB6B77FED39B7EA47008B7F9C6
3E16844746C8F498D78E0A23A76F9389682FE5DFC6B9F836EA8A527987DA22E6
92834E35BE4FF6DC81E4514AB0A423A233E2CE3D05C552ACA0E177EF13BA09E7
CECC26A790F7A63025F7A0C16F24DF8AD5A7C51DD43BA3D89B90B826831EC35F
4C3F00F5EE366DDB3CB68695FCD467AABB258A93338CB44278C64F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSAM10
%!PS-AdobeFont-1.0: MSAM10 003.002
%%Title: MSAM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSAM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSAM10 known{/MSAM10 findfont dup/UniqueID known{dup
/UniqueID get 5031981 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSAM10 def
/FontBBox {8 -463 1331 1003 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSAM10.) readonly def
/FullName (MSAM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /square put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE2340939CE40EE9186A0DCC3D3
D661293EC5BB40766B73935EB54125526067D631E1E3D1D6569AB3546CB257C3
4C12CA4AE98C3F99898F1448AC0B416B8E5C3EEF3D74B5FD6A1BE3C23B160E78
79A9E0AC4FC82364F946003C1B2E0EF3CEA944727E7502B65BA1331D36C159E2
1D107580F28A32E04CB876822CEF478BF4464CE4F7AE824FC786E099A1BE2A3C
7D2BFE2A748AB092AEBC2021DBFD5C40E912BC5856F3EF8615147350E75D2BF9
E428D7948E2128053FDB1F90CA9C7D6581E25A6645879F50577FE7F0B32B873F
13F97C524E19F1CFE3883C0DE1DF80FB61111978B0C2D028A99A712D3DC27D8F
C83C4EC335F0DB9912DD2AF009FAA56C5BD5855BA92851629EF6C47E6AC303A6
1A231558746ED8A78C76E476ED71246A2E15C51F465AB21A22ACACB03014B06F
201876D3C6F49E2D38D8C4FE8011F7BB148FC3227E0BFA51C0F9AAD64F0C6095
77B3D875476B666F9FB9A46763C49272FC504CC0E817A1533409D293D6D62CC8
DFDA666BC9DC70C4510BFB0DD2BC94B33D457EACFD754761B696163DB4C547B5
FF8994977A7C9910AF486487CE0320FA1E705BAF4B14FB937229D80F58D01E6E
9D9716EA3EDA84840B5D6BDE216A25814ABC4DE4C6818266C33CD4C3DA4F23BF
DAE6ABDC6D64E7EC7DE918DDB0B05D8413D32D99D15FE112C1D393D21806E0C9
7CE0F0977AA36617B8DD50937C5B0B5698947B0A71A167072FE1B3AD6F274D97
484926DF52CE7D9D2A4928A188E1F867C298E6DB475C0CBE09F0523D8BC6FE24
E1CED78178EE1E9D66A906B72505339E62499C0E4B6B5A2D596C4F8F4312F582
9413DC88D6EDFEAAE0C86BEE44CBDDD79BC02C844B80324B1FE3512E73C213BF
ECD22E7E13F98AB56E4D693B1D6045045E2F01DCC2AA1F70A4699B7D718A743F
D749133029EAD1870DF0B00EDEEDFD33642A88EB10DDF4CBBF8A7D8F7781179F
A91CF398747D52769A054CDACAEDC330FB79ECC96CF43C29515F5895D3A8C1E6
828F776844C88090405F868A872EF54467B72825B001B46F6496817A9B928BEC
ED212D4368368778F2D1B66D005F2D6E3DF4AB9B9791AF2CECCA3AE524781A41
5052FD21CB81D934F0F12CF8C8FFC656BAFBE897C5E86A21D3F42A38F7916693
ADD1DBF48F534DA16099FFCF3E3DBCB254BF49D8F72FAC2F9548477F9AFA414E
65A29F24FA16A9E0955A9A6CCC47198E6332ECD1A791F2E36E6656852179A94C
E3CF4477A9A6CF507B8184ECA5C0304FA15ABD8B0C379EAC19B9D16A630D96DB
A6DA819C2E481AE4870BCAB5963C0F9D837C97E207F7ED58B776799586B9F755
B705AC31C09C3F74AFBCDACF092B05F9E2B072C1B17EE6347523D3D5E1D404AC
636C33DD94121C3711C3D05F48E12DF8489F894E4913263176E81927BF5E3A94
99D124F64D00BCC288F03FD14F89E6352083333EC6C2044E2F81C477DD4CA9A9
55135915C27654B09BC9099FA966AD440417945879399B39C7BF20385456878F
9AAE7343912927476C2C88A445C03E3B77381F3F9A82FEECADCCF8C307144775
144279EB14E0F0443F8200C0FABD54A075EDCB83EAB07A7CAF6EAB17C6CDB239
077DC62173A54E93BE2911F4A45F72B80DD9C41B301B292EFA78D361AD74BD7D
2E94D44A2D79BB7B89708E094A21CCB28D80E0FCA707D742CC02BB81FE4B0E06
4A5E93DF0414BAC27ADDB044A0D444692973994CD028E1C62F1FFA4776554914
2D55B0F81C06A2633A4AE42AD00422A619E339F2E6F0C6FC74F70552974509A0
812F1007FD7055E9ABB8CB39F799F847993DB9593A76C388F9BC883D4A0DE2CD
BFD0F7F2A5F1C50791EB4363104B49088E6EA2C5E61EF256A9FF232357D62D78
0C876D200E4136F7B0570A3B0988F3E23443081591DDB861745B4F6F0FF7D854
8F558F995A283B346E266DB6FFB54E0761046152A864F710113B6BF12967D022
2947517E1CE2079849CF8EB01BB2B96EEC2575AAAD1AA1E019D7E72BCFDF2979
8E2A6EE0C1525389C16411E5DBD416467B9900F07223117A77E0B4C3B0D49A96
C2E3A61AF9C9B1CEB80AC6357FC0CA446FF87BA0CCCD81924F6209198BD6E1A6
9EECEF233B17CC4E9F0654024F7E857EAB409F4B9B9ADE4090F2B715443A80EA
130369A193A32A4DA3730F13E3C9E717CCC9E74611D787277B73EFCE14FCC3B8
6B11AD88F42705F65E9C747B472F379ECDCB7F8F9C3FEA64402972623EA0998F
255892C43CEFD7ED08957C495AAACDA59E9398B43788DF27F7433F72377C8F88
F54F5E3A5564244827EBF92227B94F4FE896FEC6519769AAD567E618DFF61B7D
B93EE0FFA2EA58BE1FDAA0025259789FDB31A1019661C18080567EB5C6306596
F97F039E3C9ABF9E40B4725A96F8170B49B73B68E308786FE99B0C005DE01894
7CC93C196E1F830570D51F0AD29BF27CCE45AD7D3B4332C9D50F1E9C2D04E033
1E197DB9BE1D44566F738CD26A13B8EBC8FD49E999D35F042E8A24F025414F14
D9D11ED702250F1295722F68A022196A0E38B9ADDDBA997283ABAA62898EF32B
C765387E238CA3475ED5C6EF2803CE32B5A90A8287C70386F46B84C332E8C00F
85A8CC2DE78D433A325B7862AD4D93B3EE2CABC4B688833BF263E26879AF213C
934FAFEBE8D804E2BC8433B81ED5DA99F08C2C11B93019D3D9C1C952F20C68A7
E141DEA2CB983DAC5A2B9426A98262FEB13C420EAA315C890F0B907BEA099C1A
10B0AB255AF99694C722166DCDA72FD58CFBA3328FC5EF83A52A750C5E613E74
A8572CB8B78ABDAC27B798E727E3E5AF9451416493FE3F4E95157B4ABDF3A910
64369E34A2B40176A5E0E30F472E33A41B8C7BA4CB1BFB9173783909161370AA
EA40C83C60AAE242358688CE13193C9DDC3544A959A1E6A16FCC4BFAA65A63C7
5AEF208FC201F88DD047B5E6EFBD4BB256F973269BA1B06CCFC186D48BCCB4F6
A0F512B1D6541417BB6045045CBE72B72AA2549C345B1BB466335226A0E76A10
9645C25A0FB4CD8455C7C10C0F4E7E9914D2010BA1C95C6BAE4E62C8B6A8BDB4
92281B366208ABD9C010B3660C5E150D63D6927255CF9081C0898E9B206FAB57
B306669AB87AF405C537CA7D3411DBC41C53EEFD8071C094486158E97BAFE90E
BA29BEB83BA60776D33BF9CAF9C7FEB66D4B93DA27E499B006D243FF59CB33F6
AFC65D10B74CC522BF4AD45E3451B395AD5029B148A1C9B710D5CF02B65F9189
0822C0A33C4D07F2DEFDD5B4F6E063891F0456F1BCA4540F9DCD3B0F9F39696A
52336AFCF0A33A029AEEB448CE120B9D939487EC8274AD4E1D5F5AF4C14EC910
680C5E312735DFA3A5B1835370A76DFA63A05379021A64EE55E25AD5218398A3
6DD66D1B474A2E7C6E236E0E4A9BD0E4F7AD1807C6478225C58327BFE1822000
26713D01CAD6951F456504D79867D523605ECD78F2D5DA05994BA4812BF65E7E
34ACB732150ECB3D212D03387C71677F617D76A9A42C708C89D61614F280A5FB
0BFA84A17CF9DF333C9E13DEE82A5ADC9D2E588338D247889ECFB090CC63CF9B
8D92B1CB784B65BE80E3B57998F9ABEE702E07BC127D272C67B0A97734E405C1
FAA87E6B9DDB8ECAD2B9DCD56D687DFF71BDF29BBDA0A0812695F81C5EBB83F8
0A810D6560F28D7CA1F89A11F253E1B3B4EBAF511454E4BF2C46A333BC186558
8D73374455A32DE993526063AE70EAA647454ECC62BFC5A53357F2955E4A8A02
E20AA64AB6511CEFC5A32874C8F2BC2424C6B85BAE80191216A22D93BF2813EA
18A1A961543D7C58C4F4B263D76AD6C61270F2A77468B3E59BA9D861E5AA6CE1
B7A9C4C2A13E80C4052283DF3529210B3F6E90C2EFF205866865E7E96F34513B
05A45939728619E02FF1410C0D220F6D615718893E7370A0B91675BCF681B2D9
56112D9D37ECB819017472DCD38FE4724834869F82985A69E33BF862DB420DEB
AA1CDF83099114501C037873E86E0D33FC954E12D40038FBDC78E7159B738516
A078AA386D9424B8D4913B7848D8439D2ACAFB7C81C9AB192D77F316D299D11B
24F67141B1E0FDB564B70FE68070BE6BC00F22C11A1291BA6401C722487BFE19
D7869DA874C9059677DBEF958B7AA06EB924A17B3EFE9014493EA1FA8C4C67B2
B5DC483ACFAAE88F2DFF9FAAA7825854671ECFD522540C9F6C3817C11D3B63CA
8ECF710EAC4F27506B67B972633D0821BD15F4511F305A5677F2919DEBF7DE88
4F60E36360A7856B6B6A8A866832534279AF45B4232877F45C92ABDFE0910F7C
F86825A1B6012FF93479BDC9639C01CF2C783356B33127AEC7039D40529EE54A
756D8B7524E069DA60A38AFE592B8B228ABE22B7BC9CD9B23277FBB567B1377C
77E21AE6F55ADF4F8864F4260562F0384165444385D5A8C5966EBF191900B898
85240634EBE8A5DA382E0EE3583B1B5D102B6EBFAD60AB9C335919EFBAA55A6E
36CE4887299E395EB5766080FC0B6F93B1247F28842FB817084C9C090616AA72
25F4ED6996D36CD9675009C615BA26BD4904F3130991023E4116A7E6BCB26C10
7106241DE039BA7F26E137040BAF587AE03A476526F025C70F16EF23474C0EEB
6E27D8562C7C733CF470EA198494A505A8F871E8EBA31D4F0D9F0AEB9D0EF63B
738B582F7BD73DEFD5D83707BBC7854B6FC7FA6E2636F0B68C4858B247F70C4D
F602764B9465975E9AF28C2046EAD743CC350E747D6524B9CD7F325946B9287B
F7D46E4342A71B0409B2BF5FA4D340DD549F6A5B05D2784EC5A248560F4E214B
C5304217B3AF8451C190FE1C312527746E45DE39D8D43CBEED9A19FFE143CA61
3B65344C26E189D790A0211556C609F107C78F55CA120F3449A697D1305DAD2C
D3EAB88E2CBDC022A4E036E232237C1C16ECFA62D6CF8EA3B6610B58C75EEEE9
676201206E4A8B8C7CF5EF409F2C0544DAAC926497B1FBCDEA07DF042ED870D3
9D74709FDB8CD2CAC4726655371EDDAE78A5D9E0811ED4DCE8C23DAE1ED44D06
F4DF09BD9A00C1DE178E766E05CD3CA64301C592BC01EA4F6D1973586547B170
A3338C60FA1148DC5F3F7B7DB5EAC870239BD137CC85AD54380379F5C30B0754
D0A0FD8DDDC7CE725B58F37DE7DF077916C912F2808D0E4CA32808D0439A148E
3B1E18B9C88C8B4DF23FF5C53B2881D7C23D1C239F08137BBD8FEA326E7CD1BC
C80027A40463BD58758F4402D3DCDFED46C2E3C405E1B1E8DD0062E1272AB5C8
91953946FBB4B9EB0A74D0F7F4FAAD798571EEDBF0CD4C92A6916909297F27B7
5135990685B849E8244D2EE73D5C7BEF1D3042CA8353210EB4293A2B2F1BCCEA
7FF2AA91F52D343BFBF5E91F2381AE5B6803C46605D471B7BD122153E87D872D
EBF37727370BB683A194C4C4DE13F54AECB116BEB3E0750E10AF272E0C015641
0F9264A21BA79821B29D8CB78746C314E6893765AB9BB7BB1730D758F687E615
D2AEED695331E99591AFA000AA540ABD36ACA911E91E20912AB819A80D5183A4
CB88E08E0E9911612639C05043942AC8EA0072E9CB7154C415C0FB37DFE3F01E
638D5052C87A8359DD979C44B730F06019191C5BED15E6E79FAF312ED8EB0B02
3E712A0F6C89A6F7C122A561F133FB4D2A98EE09B11ADEA53702C92C210334E6
8D5F3E1BCC0E81CE178ED749B00FF4089C1AC412DC5F6696C9D8B9D2EB24B35C
3C1F8F63EA348A95622AF76CDD5C4DFE06A8C7534A55FAF937777E864C98062C
CEAA3ECB5E518C75FEAA240910646EF782303BF34FBF8162C8650D5A6F0EADB4
FAD9AED7994003F74E09A3CFD8900A33160CD1D49AA1C7BB5E42A2B0AB5A9D20
A5AEE02435D84A2622ED87454A2867E112A9AC72653A7865E2DDB9C236384228
94DE4A396FA798ED1F370AE5247E0E703D4D4225ACC1EF410631555D7DBC814F
F84353CD407284FBEA1D371CA578165B888D771ABEF7C3ADE33DF899E55FB0C6
A99A97A474739D07FF17DDBA267EC6C0A6154094D6E7354FEEF9723F23CA6E86
D8467D66FC5DEA43D700C9712BCDBCB15EDB628F4B840A76D761CC213376A0CF
3F137F399AF2F349C1D7FC9EE28CE88F416F1069D6907C3E917AECDD245A1BBF
4375A03755C145042232F87BD3F097746E41A70FAE7761AB26D1FDBABBFB56FE
D8C80879557D3849CBFC7D25D84D137ADBB5FD4F6FEF8CC9D54824EC85DDF553
FC992F823952FC7591D08F035BDAFC9317F144C94E828F09E29A02F0D6639DF5
08D32902957CF0BE88694AA031FA8BCA9E73D48A60FBEF090FEFF955FEF964DA
F53A9B58D2732F986DD20814A1C11963E4FF24011CB93D616CF4A6DEA6ACC5B5
354626A142D85BFC4F03DBC32F26253B97414C9CFDF3C3EBDD68FE0B7908AF88
1961CDBB6A94155524361C0B95E42AF0DC1542752B2129938BCD020CA19D64E1
0EB5DE254B638D700EF4BA620D924D65E95A329AC2657D2CCA597A4FEF7F1347
05419CFB59A93578682671B9A2910BBAF099C877288C19A4EBEBCB3C64415248
C00D0295332B6388384F27779F0B0A2D05A9F3BBCB3C1F587EAE05AE4D2C5319
478E8D848ED75B368FF45ED8B2D572AAE502493D2A3660F8400E1AAF9B27AB35
99FA7E39E250E91A67101F20FAE8BFC13A07FD2F7FD3A45002C02AD891458739
10D221602C35139358B1F23E0DDEADDF0AC07B1689EE95DB17A3B6888D9BEB65
C7A9BA2CD903B2F8348489A57F5A7191D1627A2C76A856C9E178B17A40293F98
E9CACD819DBAFBD0FFEC6EF5BAA6D8AFF764786470A5B02860DA35A5B3A2BBE7
45E6E4882CCF3A980B0C35F6C170D7269F7263FBBBF4051A51437A218711AA18
A408F16E7C9FD7D61AC4E859A91CA4B18D5BC3B0F6EF0287298B75C11FBD9FA4
1BF203A988C21BC2C550839E432350ECB4471F8553F7B4E42128DCA6B1239DAF
6C9D4A8B8AB7FA8AB013EC3060F02D6DB609F59E0BDE4D05891811A41F7E47EE
7166D88DDCFF5BFE1AB84D873C38009A857DB436100CACD8DEB98548A2FD3770
B44D6194717757468A9C84238E5B83AD19921E31485ACC168C25DA73D95767E2
27EDA7FBEC3FA6C8C58DED3649994CC965F81327D8547181CE06A73A6D696552
6A6EB8009B1C40A46791E8DD0AD66E125F61CA6810BB4B74E266703F9DE0E322
41D93C72DF010EE7DF3B7AF46CAAA9463E68D5C8B792D3197C4EED52CD16D5E4
493C1F8944901537C4E6AC73E5D6621CBD177B50CFD7F86E786D6E6EC176F6C1
3D7E9346C2859A185793A764E960F236A1798FF5E3A740ADDEF422FDA93FE058
53A9989A0A7252337DDCE50B6A040E49421069081644A51C80D37BF73CB30254
BC1D8A551F71FFE93F068070448334307A87526A86A3A7D53AEABC3506E78DD1
849BFF403701D6059D6CC2CCFCBAC8BEBF440B8D3152C63908C6882E56EAAF71
2984E440F40B5F355DAC74EB02738BCB094E40A55A48A26BA9970D09EF48EDB9
C0C6BA95EC2A5E98325594AC418DFF541515964C77B8D2C8E953703063F17F36
D042EFFB97936DA27FC3601DDD601709B71382EC67BB58C8D07254A6BBF7FFF4
EADB3B735D143E4654A5F06ECF67F0305606CD0619022A5DE90FFC8EC5E93415
CEE8039BB28A5D76F9F68D7637DF098278D8A99D797D4F0169E9946893AFD3E5
7973A009094890C94D3224E75B576439749E63B7B1D7D501B561D3E184A4788E
3893178EBCAE7FDECEE4C72436F44B4F3452249DA4FF5005A959C34ADF2D9D5A
EB2B1483938BB1554AF95F7E0B679C0D5FE02E0CF9AA45628844A54272ACD915
2362D162698BC6F7535E14CF202C75FD9B58F3876009CC5D804B153916371ADF
860312500155CCA40C37B251270944DB64EEE0EB5716FC088AD867E935B40F3F
EE29A68FBAF8F95762FD3FF5A5A560FD903432A3A9A54A710D942F8A6C4128F6
5482D34E2542A74A0B5C7FE79F79CDC16D3D574A2BA722EB0525A5EF81FAFD69
99AFDE5158AEBF878BFD7FA9BD8962186FAABF1E2593031D084359B02ECE352D
E5D3D4331ECE4C3BEFD80599441F6C28F8FFC6DDE8EF94BE83EB86DAF47CA940
706D4B043040AA2E719D767DBE0D853B0FA15A4D58DEF4812FDF9458012EC691
73C8EAEC809B80D04EC0A7F06E07EBDBC6F9BC7733DE3F7DD495DAEDFC651D4A
329919AB72B8EF795FC391D1F4B1B3CFB3AE8D5BF42610E48E18C515610AA977
88FADE52905B691435176F4BBE80618AE6B86D98E1F393E24CEE3074DF7C7544
76591F390E2395BD735ABF43B96CDAAB034405E456AFA4A45DE9C0D1C9F4657C
659E233E6930DAE802AFA849346EEF63528E67F739FD8C584BF5F2330AFC6861
6FD4EFBC7133DC0B71114BAB2F1E01799A57F82B0DC22D42426A9C3A2032D7E9
A167A02EF8CB8F8567D37C24D129F55C89C3D36D2742C651A69C2272740E7B26
42E0172537224B8B442A1756F8A44BF8123F9442C97B78FC23239C6DD31FB565
92515D5D450F37044F72829669A06855415A52C262C9F00D59438435E6D69181
3CEFE43FE80E8301B091A9B0051AE24D4B97337D621768
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.0: CMSY8 003.002
%%Title: CMSY8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY8 known{/CMSY8 findfont dup/UniqueID known{dup
/UniqueID get 5096649 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY8 def
/FontBBox {-30 -955 1185 779 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY8.) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /prime put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D80B73E7B6CB7548
0E1D77FFC695988391DC44AEED8CC947B3D7E198B9620E2238DB3A2819182F03
14498B8CDFBA48926DA721920B221FB33BC21A8456AF10891403501D0F6415F0
7E041AFFE109F640E54FC1A365674711EFF94E752652A4C8DA62CDB1149DB899
2C4A4BD77A06E81E93C5698C05DD02F74A0756082738BDB53003B483752AE498
DD718AEA8F3FB5A6B7E2D2AE8F309065F3D556F9A34AB90C88833A54295E0982
209C466A301BA3372AABEE20D862C6DC6B6FAC1463C8CBA8AD766ED1B4C9D712
2BECB4E6ABF558D8AB5281C35726BB8D046982C0DDAE17BFFC9394125E4E84C0
B283977D31460B8EED4346CCB09F64DA0ACB640C6DBF32F2DC30D54668C1CC12
24C7280593088E9958C047125C323E9C842801346A9CE5F50413D69F6DE99471
65D2E387765E92EA4C43F17B467DF6E266D92551009C0E52E7219AE9F5E2E8D2
88852086FF3600BFB50AF3EAF8C009D8D5F084B510F792385F328F7EFA8C38AD
CDAB2EEDFBC6AA45F6DD7364C2F02DD2BE6C79C8361E83D4267CEC2407689864
B57B5D967FC80AB3BE8CA43955FB0FD3081D438437559AD24A7ADD484C1E4A77
B00BDCB0D1B121FEE983412E1EA5489BDCE5DCB4A7310135956B230C0DE7BBED
516369A92BC41FAC8D73490984942D930DC193BF0C774C1AEF627B969EE4B001
11381AC57815D7581E2372A1DB740B09F4A7FB4318B765DA4E7B44E8805CEF85
44EC3B10613FE7B397BF91B69A5CB2E9086D1E7A1FAE0A9ABF2A237A2D29ABFF
E392A18AEACBF28274E775D3FBAED4F46B982B9DA4602E24094EDCCBC9D6FC0F
67C60376879245606C0B9C9A678E8917516BE1CF097B1C75C9F0DDAD6899F08F
81FB7A198D45FE060CD2A550D9B8D58B882B969D7BC3EC018A1FE92BDB262835
26516FF97AC387EA525FF987E5EB1EAAE4EA5866C9CC043D183763C530F7D7A1
2070E4044507C4E5611FCC117FBE4396E0B24F672CD53D5FDFA56D561FB86D40
90A52A7C7F29A119DFFB694A8C445367746A49CA5FA83163BE448EB19625DF26
609A8C8672631A10411036CAA3D6C2F822A4B2505DCBE8E1CE6916AE515E78CE
E8C894B134BF811671D17C19248853131DFFAEDB24B15FF17EAC194662460642
48D23515AD434C68DF56753806FE96DB3A29F9D4980E0B6EAED7383F9FAD2584
8F85679D6D1933677ADF5D31FE6E43DABF137E834A1DEA632D36EA5728625159
8F33348893C9D1C510501628E4A9A80587DF6E179FAF68B158406A3EBCD726E2
AC17F2DF8B3607072824D2E5A6479F7BADE32E603E54E7A83BB2DFDEDB0D80CD
1F1BDD4F6C9025CC3A8A3685DF10A8183FA80CE0F0FE2BFF2500F76B1037AE41
56D2D7FB468C3CA7549E3599A2AACF66302572F1B35BC8EF7C23F6FC4B720228
1D673D903111CE378AAE83480B4DEB7EA84BB35F4F7BE997DD4FFF5A9B5E7650
3C7365BA0965B242DC369D03215651184024A08EC284F1798B0726152884B4D8
46411B3BC8F5CB53A70AD53BD7B1AF23528849B56CF2F75609FE715878CF6448
38579380688B47AE3D374B0DB6ECA5B8284414090123D47F3F9DF389E023F431
6B4C0DDEE4190DEEF4CA772742012754DA9A44A8F550FADA6D8FB0C512D5BA2C
BB7DF71B1DA41FB6936BA71B710CC6A80751E43436F0F5888F51AB370DD4A088
40F402661E08732C960705C7E0D29B8DA1A8A3E119409E51EE575E9655F47568
023977917C8EC610BEBDB9C1F4EBC192084D63EAA00EC87B53E86620BB5AE51A
579B0F8E1972CE1DA02832FC75184F45409DD9D413402C2FA27BCB0AE6DB4CE1
5AFB114E23232DE07C4674969A1FC94D152C6D3A611F029ACF4D949A2C0755D0
31C7DACDBB4DFCFAF7E87295CCF5D4AE28D87ABC3533D87EEF1507B9FF9063F7
F007DF03734A20BC3A198B049000C92D2849C62DDAA719FC28EB372793E20128
D786670E08948808BA45C4F6AA0DD8A8357CCC47228A760C5C7864853BD9C9A4
285E446CB72C5C9D3F03FAB000810DC5674061FA116153040743E846506CFA67
FA8770E785D7DBC7293F37389A0859CC22275B23C44B57B92A033A7BD194340A
D6BAC6E103402F8396A5394C617CB2A27D9500921D5DA06115EC81715EA8E360
4A95DCE8689CBE268B8E6C8B806CFB0ECBF634250243C9E1AFFACAD65311FA4C
1DB0988203537E5EF12B86FB454D06CF05E4F4FC4143D62920E99304245B6ABC
82E21192BE94F5E980DB21E07FEDF0EB0CAF4ABDFC20EF08A2A44A7940E2862E
08FABA516152DBA899D6CA561EB08C7C8298DD511084E5230CEBF28AB1D84C85
B5BAF4616C28FE05AFA4BABB3BA03F8CEEF3F3EB0D3034BD3D8D06629B8E9EBD
72484057E71C9EB4DFC7C2CE7749271AC926C2419D618FB0B60FD6F81F0F2C04
E529CC74DCC9E4AF32D935D7CA65FBD0842A7BAF162D08F782E65DF3AD9EFE69
198AFA9208B22BC21BC4ECABB9BFFBA84C8421B74748E1EAAACEB59E566838F2
C439579D6C75074F94493F7D5C8942D881AAE6302C37A61003AF77684EE99AD7
EB5EEEF050C52E75E4E842F8174470FA60CB213BB6F257EEB26CC55D1202931B
B981DE2535A87CF37BFF912220C117EE166CCAE58BBF624170FFBC0716726B36
304D698F2CA131675F7B1199E6581B8C812C4FAF75814282477BE2B7EBCBA7C2
FA6356B2876F89698C6C2493989E9EB252DE03BB374622A7C88B8EE9FEB4851E
02F85CF70CDCA7BED5EC94E81170FB557C3BFC6F32CD70B506E56A2CC5451592
130C6F570C679577C44D60A811DCEFB3535D855259B1021AC168DB76DD38B459
F1813E3DB20AD9275D58880CE94058490ABBBB0D8DD16D4A65F680B30057F15D
07FF54D779CC978E90A850A2D8D79961EE276BB26B594C16F56557435671A3D8
ADD3DD0BC4BC73B0652B9DA8462FE614A14A11ADB2214EC4910823FB4CEC8938
24354C5C62547EE5710FB5ECD93AA45DEA7411F6CA8D5B5FA222685E622AD73C
1BD5DFD1C8F253352D6C7D14FF2FACF07CA5EB11392C6A33E9CABFD99F743BED
55E8DEF49E07B9444171D1780C698E5B65B540F41F845AC188DC7C0C8B5BA5F3
546BEAAA4F29F0DF30D5AC12A60862742623100074457BF2D820DCAAB340C1DF
22FF26992DC02F276B40A7C528C84B72CD189A4088C90070486C49A1014FDDA3
5093FC12DAF309FBC063653E6A33E14EB51B081126AB5BCB8016E975060B796D
6CBFDFE6CB9E191F12E309254BDD6660E3227012F5DADE246B02B6D8127F1EE2
248F48DC5ABBD229748444420C868450602120664984FE3A8B2373232CE5CA15
E67172CAF7EA99F73A66AE33B1EDE5E8351DB02497CE3338930147873D4E46B5
E918F5592A21789FA9F46232BE693DFC33240E2649D6AC1940B101D806089436
F0CE230BF6D0363510378822891DBD3EEF3365430E74FB6C994BB40C8EEDA593
CEDAFEBC3B87C7C04F52FBD7D557A77B44855CDBEC8A8D26F44D66446B5662AD
15B6B79D13BD262D79BF51C09F8F690A61C7F11EC2E05F6BEDA273648E9E1EBC
3D5F1D6ED486797F753064ADDA8494405556D43D395B1487EDE877CCC1EAE954
1AEE2513DDA94897B733609E8179DFE1975590568202EF20D58A89B34874CC3A
A5579473AC65E0EE61545AEF578ADE10BE3FB3E2CDC96678F613E4DEF7BC1B38
8A551C93438A0540E292F65F1FA73D9AB30A5F545284085E4930A570C1807995
7108AA8194607304488616DD4AB189F8EDC5F4507AEFD7847817A8ECFFDD2DD5
DE95E04EAF2774F8AF661827229F01E769A32734097C457EB6FF056D90C46C5E
9F936AA6BF2EE8244BBEDB8862E56423F5845BB10C8809730B011D650EA18945
83C320A3F4ED095A5EF91929FC877ECC28A1C2CE74A53245E629BF46C6534983
307B1C94EB35CECDEE86551F0C308F66690E591C5D9D8FE14F534CF3F5DB6D32
39D7C799F392C4E65759B7BF61F4D8312E3B26C31466206A367A0DD7A90D25E2
805D36ED5CE0A4BEBCAC0A348FADD2D2AAD670E28BE6E33F627B4A9F35078B1D
6688084C4C18840673EF9B3526172EE14EF64E97C8B006C27DF6EF73BA6E6459
3608F10EB1EC4B824DD5360B42AFF2084788B165747AABFB2C9C0EBBA9C6246C
08F28143809315D6268E386F09BBAC54C34213438B56C386B34AA457D149CC39
A3C163F56E3C2E637C63A79CF7F2DE969EF3AAFF75F3F20499A9ACA61279D545
866FFE57D25998244F448AAB042B141952BD653007A889B1A716A4042CBBB827
C1ED5E3C616C22D5FCB39D3B3539F9B71D50D25ECD2E5D953C7A5194C867DDB1
75CE10B2C3A20E8CDE15AAE9F549D034838DC066CA649C31EE365D46450AF18B
893748D055DD88C72391FD92DDF0AA1A1316051BC756F87BC9A425019B2FA7BD
CA9F35E89E2229B3021DD24C9DF0DC3217F44DCF510116DDC9E92EFDA3E0A892
491C8961CA484BA29B8CACD2FED2E246FA7414F892AF7B9F08698FDEC82D2E4D
8C6ED1FD9E0BA2645663E7E97B0F780033D025F2EF3B364574C03F04FFC4E09A
3D4182BBFCCCD8CA54A92434E2208803ED36F931D31C7498B7FCEE4B78AECF11
B27123A10F031F9CBA36066680E4748E346D18FD0EFA395D1A9227530618ADD9
64D96C50A0172F712CB427E8F7170F8A1691FB95B247A271499F0E63676BD64B
167438333A3BD9CD9641AC637E0ADB17F1E394DF34AF5A2BD02030DD087BBA02
E1209338B74075744A9A9966039AB6D223F385E06FF359257913E6C01BF32F5B
A3640C7CA41A6C51F296E50DC1CD1D68491CE5D75E0ABDD4C5C4A97C8BE2BA35
D91AF9F8F38E7AB8C1778B06A212D0416E6137087329AAA2679C51D014CC4DEF
0F1543E2FD97621E552E19B29AA1368CB5046C188BA59B1E1875B25FB269DD2D
C0678A42CD310702465694F2BF302AEBC43F714F7C657505132DDA71CD23D17D
628BF3400EB5DDFCE2850F31B40C5913394649AA4241CF646F3939916C2077AD
C11F8C3E478586AA7931E327333FCD8A2EB31DF4B47AA2F31B999556602DD998
5848143C0CBD0B5187DF08E675550F2384D48C2954EA7D16AD2B94DF97C194D2
302CC47BF968CB1F6C9641A87525D5C6972ACCA1D4A4B4DA8EC54BEA6E7312B3
2737754A9FCBED3BA5F8220B751506BB0A5BB5CF706AFCC04BFD713A3BE3C842
9FFDBAA0CA5691D0FCE76134841A169970903843163DE68FF09649E99945DB64
491FD6D8B2DF237DBAF550D1B74263B3BF1EF6211F40D4DF2DEC46E4DE557088
5D458A7CDC6F34B8C3F5C76582C8B7D24A333AAE0B43CA67436F8ECAD7C50B12
35BAAD521033D8024E4DFCF01580AEC63BD5F8ADB778F822AC4FF0DA608EB7CC
1A52A51B9F38FFADC0D2F4D8394C5D598123B483AE5AC1215F24F2492EBAA134
3C58AD4E3B493AABDF753EBF1F04058C6981C353D6788C2D3294165B667D3765
7883A8493F5D772F789F73979B254BB9397FDE4F8B76CA6FFF312F4B012949F4
3EDCF1AC60FFF2681549DFF430B498405E79CB407DADFCEDCAB1E2FAD3B0F4C7
B575A33EAFF9F67D37F50BB06D06834EA683862991C5BE340D4A7F8D131E733D
289F72977870F9958102F5D835739F0F5A642E7194E8AF7FDA2937E5C0712CE4
EE15CB475725030CE0F238C32775D3EC95CE3D0886046E3EEAE322F59D423E83
DE88DDAB5CE0F70537487EBA5A16A9306BA7DDCA14A85A9F83B3BC3600DC9421
BDADA2704A5A24F7174A3A486ACE68739EC5960038CB44D969A594E97AE1F42C
42C1B7E3A456B3CDFC7683537B337AA8777F18CA45B22C8BEB18877DC624496B
9E8EF9F386B7FE4D94ABD5CE3B5786E76FE04A35909C472C04654A4405932EE6
A4A3E0F6DB088603FDD82F0EFCB85A962002A662D1AD0647A2F484B59075A1FA
9F4327D542ED7962620B998ECC3A95CE736089593461CED9B5AAAB05C2DA3820
5AF29B32904E1EEC357C8E282189C6D8F562DB11291091E6897E24CD8F8E2A34
67F35D261E01336152E69831B0CC6B03FF1AC7EA22B745F513A25FE10F70E74A
3FD71FE1EC9999BEDE7CFA6A97EA2DF621711BE950FF8960965685BAAEA71FA6
36F165573A0A6A92DAEE41A9B0C97BF03419FF6BA1F44524D00FD671EACC4233
9A857680DFD27B9F1E7A760058C8277B3761DB9969241D1824A7DADF70BBFC38
89C6DB9091E3BFCB36851CB9662B365A4B7384BDBA1D385902D1E5DABA72A159
63790096B927EA49299AE03E41C7F593F3B995D1155E91C62D5F68845ED3C797
7798B56858F96C2FE2E37D812873B7801767082A6D6B60602CEB94B7F6D7A142
72814734DC584A18D1FFEA7333D4C7E2DFE5B91E9AD92EB52533CA52FA888980
C79FEEDF0FAFB3B20B497F9AB668BDAFA364B405916526D5C48E57DC30BC35B9
BF684FDFAD199D9A28541327F3899AD505FBBBBB22F419E22E0149EE5FDD2B43
AF442E2724EC16934C307FA731F90AD1C76B74569B78CDEA7C19808233C6364B
D049F3F50A68D3EC5F29F2B96BC58C44AF90FE13F244B7129F14B5DAC3F3F310
B330E67CA4EB76F895DAC8025F11EC7630EEB4826B5721348FA38F28B2AEEB1C
5F7CA413C486C94B1DD96988F07F7A08D3635E28624878E55D4FFBEB5E183CB5
93014D8A272EBCF3A09133603CFFEF43A6FF059BCE525706D3795884FB495748
C8AFB50DB464459A5C36D7CD087631BC09C693A11BDF1C6011D9864FE66EE8C0
4824A42E97D16E017C0BB73732D4537E2A5BB283B3568950E5681364DBC1D6DA
058A122862A44ED85029A7B39F2FA7C362D859D0B429E056891339626AE6091D
74F6110CA32F8F3E9507216997E6AD1A2F1FFBE8B407C9880DE230E234F6FD41
A291851178BEAE5DB9DEB22E3443807E2BCEF12A4AE8C490AA9E3D2918329F47
42314CD258A0760DE5FDAC4AF7209CEB530B8508B278952A3638CA8491C3B493
516F461610DBAF32E923ACB834B15E2D169A10F2609EC0ACDF7BDBC777DD2C19
2DB330FD557D3B06B78824D6AB237D8F2D57A7ED35F02CFA9290ED6893B41657
A2485524A3F1642FF5808FDB77015D9467EDAC4A6BBE8A175833B1225A5554F7
2C60207F7A2632A4023255E8EF1F38C1B8216C9B03319B60BEC9799E5378683F
46E698FA75F2DFD40F17C603F3335F1EC70DBA1449C7A33EDDD46CC3DE4A6557
EE67BF349AA8680FDBF415DC527129288B5879500180F75DF80394EC7CF11BC8
9EE9A4ABD64DE3076A2963F83FA333F19FF74F79ECF36A87A31D6F125FD2415B
3F6A6FC33C179F54CA164835F3C3DB62AF444BDF27AFF23098C7212477F688B8
6F48D9AD080D544D57FEDD33D3D9AED9346CBB644C97C951D4AEEB2BF6F0CB18
E2517BA7ADCFD00FE44E290E731D53E5C0D762FCBA08004562DCE6A5EF2FBB74
B3053CBED3B6E896B1C3356DD9E8FCB69691AAF6BEBA0424D62B9F266D560B40
89E20A9F35AD4A7F65A7183761ABBEE0F7EF26ED3565A25516A3A5A57143979A
1EEED8CD52A69E4E1AE4795F3EE0CA21B9F4D166783A9AF54B08B6C56703932A
310197E328C6E6A6BADAA11D66A952964F31FD690082FA02D1E2A4512A9F2742
33B203FB770A3A1C7490ED630D0FAEB3066429D0237E18818EC368D0DA72EB08
1951C70139EB0DD59EB53AF5039A7618C77F6CED9F0A066FED6FEE0C0E328351
BA39746C1224A29D191D8B86491E0A306ABA070CAA2756C3A33990EB6DDF34E8
06EAAFF94AE6686EEB06A17D6D020D1F4E59428D533DB0EDA6434E6E1A478D5C
2A0D08CB39DA7D5F5200199FFFE3F41729478D4F63AE01FC0BF3B378FF6402D1
CCF1BE5F191BAEAEC7FE400C9980E103D8776EC196E741AFE11D249E0C277263
80FBD329524C55943E25631F113FA0FABF7158AD9EA1231126A1CCB9E7F5CE1E
7335D0D645722B10E7EBABCA0A03F27ACE58927E0B902E5E91AC31280B9143C2
8B4A98BAEB5D8BF44ABB947DEDBFF8F1969651766DF77EB0184783B3D2AC1997
BA1109BDFE6FB08172926B58DB8DC803F40AF91B9FF17EE60E28F8400A01654C
6CB9C8CAF71A8C386A6F2F7E7613C70EF1BA0AFE58322C952018779DFC4D5C71
F3012F1020D93A14754E46AABDEB27955CAAD66F8326D26D2E1399F347DE645A
732942AC89
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 66 /B put
dup 77 /M put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF728D2A654E52B6A6C90A3A
725F86627D7C3EC5AF5AC512976D35FE42AACA3FECB401788D0BFFD9F4743BB2
EC5B4E7891F216DCA5A69E917A171E0069A03FB214ED307DE947225049D46E0C
4707503F09811A597A9113921AAC23AB1CAA9866F81A02BDF349FAB129F23E86
E384C043053055938D42ACBF9F0EE86CEBEB011BD5BB7D5937DAFA344288F17E
5464F698601A657A31FC63341D24374052332BBC9F127F79622FEBBAB5C6549B
D748FBED660EC5DD28D28BF633D601D421164D4172910BD6795C975CFFD3F170
48CA14F75F7B66A42BA12472BFCB8B3C46194E66BB49C292505C3FB56DD6A32B
FD3691FD2CE0A38744DF529B5F46400B3109BE50C5E08833E1FE9F1913958F77
B73367B77070F9168786953F5FEEABAACE52AC4A0EFE80B96FF4EFF9D3FA9010
9B3129F19575CFF7C9E337828B3B3DB1ADC5721AE7CA4BC277B523F23DF3C1D2
958DB35EE3AE3680C7F76EB1921475D9668F34DE1D336112E2D84D368C820D01
BCA56DF6F026AE9D780A121C957035D54E75C0C637B9DAE5618EAFEC830D473F
23BB372EEE7C54377780B0FD7550D918C94BDA8E10C432E296E7CF6712EB1A9E
CB0A9463BB6F7ECCCC8DE43EDBAFBC2C0E3648A4885B3D6AF3FB631D692ADEF6
B015630C809F06D675E7395409599A29BDCF42FE27A545A72BCBB6558F4E7DCE
286A7FC33E0300454779C5D1B6A1144DAE5FBDD870ED64FAB358CE9529EDEB1A
44E769319FA2EBB8396E895E6F6873E46AEC9C03BF3FCA527B052B82413D3944
4F0A300740C2CE1DA472D44537B5E111C35009F23A81B72484AD1F62B61A7B06
BBD319026C9802406C6D6966FDD74C2F31D3062A10866ABA91722B2FBC2E8F6F
C47CD90A3F78FEAF2051BD78A105A44A78E320BED2B305CAD4E958A1529CCC88
7ECCFFEAB344DA0BDEED2B8108DDCC7F90B66889F9B6C7D0C0BB0BECAB89468B
163EA0B5ACB8CBC07D1612A8A4C2112DC7DD4B0CD64B94AF3D45B694C70B36CE
357C293D2D864084B14CC1426E149CE4F40085ECE583FD57F898E543D81252C4
918FF83C05A493AFA57DEF63688DF13A878877B99D8C59BFC5BA0107BFEA42EA
36DA038C62CFD3CC5F6BF5F9639F1B0315DEDF3DB6A27895234F5895AB00C816
D52183E7C223B358EF0C1385BD2F764E6210CFE1608B9A2EF62DC96B8610E784
431DF8F8203F61CC8DB25E4D2CEF820699632DB4AC33D1BFF198BBA3173C3522
1B0ABF434F0E5359DF77D6F190156FF4D0CF1F10BC0EB003362850026259E399
40E41F23EB2A90B89ACEFDC391BD7D7FD785599836C396661BCB2FBAE9541F01
318BD12F672E4C8B1705FA41F2849BF9A9584446F41D2D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 33 /arrowright put
dup 40 /arrowdblleft put
dup 41 /arrowdblright put
dup 80 /P put
dup 107 /bardbl put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
ABFE22F1746ABFAF26E9BB5AE7E21432887D23A8C3160DA3AF3D0628A6B2126E
C9DB903AC24442D0842A80F3902FB23B0B25C96DCDC614B8199852C681F2F0C0
F51BF67875DD84DBDB6C2C5FB86F8A00A26D0C841C8496EF8BF898CF9112F64E
F7C753D4CCF69A58C0FC2A55104C80AAD07D6C534371634EAC3867D9AC4A08FD
88BB38B889F52EC5C50EC8F6B40DC23FCD0A5FD39E6FB04FBEE04B8842294AED
D87FFB64108115B644B58BAC7CFC7A3D859E490DB36D6D81AE8D677CDD82A2A0
D889A73B30AC4E5CD526477FCAD34E9AF14D51FA8C39B66349569C6BD23A537D
BDADC4C6641406AB3C647D124655BC7045E7F835D1FAAA50F046FF434FCCBB2E
D9080F9DCCB9895515F1B5F4FCFB4ED01074848EF74E88D2CAE82A7E92BF0B9A
6692ED46E32CC1CB0C9590CD203A077ED1541C01B9A4F685C7DD3D31D72E6517
A846584AFCB2716B196D29FFD5472B321E768D3A2741A99602E3DBC166ACEECE
88974DCF0FE44626D5F948BF6F5E3A6275B77121CD0CF26708B015710C4807B8
D917F191446CC7D7659C91545B47450C158F7C3E8102B47F69A0F13201E35A55
1CA30A20676638F11A0F651C7B3D28250B728F626B423DBE1BE7A8BE1DFBA606
CD14E0EA440A74DBD5D3617FBF942F5777171F0A1E12A47C99497D498DD0E565
A1450C9072B55223243E1486BF49E37404AD0121FF38251DFC7787B5634664E5
47C757980D28583A278674A5A34349CF46AAB0CD42292B8568EAE62CED22189E
DDB2242428171F9481420039B806023D7828D6F3362372D41913BD054CA1FA6F
FAF3FBC1C9D14F7D0C041213D1F571A7717D5CB5E4010C578E69D07B7FE6C7C6
5DCCFC0B4A23C4DB32888CF972C6029233FD26B2CBAD19E46AC812C7E9C78BD3
DAE0E8EB73C66D9FC00E8A4989ECE8B635F075A909CB6BB401012918504B528B
29CB76C7EB4D4EF88A7A87EEDF93B251EDAFB233CD91BBEB99B807878E1A07FF
0E0A916CF71E3B0CC65BCB5D228EFBD19AC2597B0ED4F3BF561253D80E7D1F9F
73787E07A82B85F3EECA895D6573B3780CA8B0A9F69F8834942FCA5E01B10E96
2D87C72CACB35F8340A81B98AE0BC3490F3B280406F40CBE7D4A1C07B387E4BB
5E237A1216539DCB188A53B841CE5107BDA6A734F8F296D36C341656E21FD13D
F820165B25AEBD48F2E378C6A1D948D8E081144D35A05020C04063B9CC783CB1
94EBA746FF691C221721AC73F948D12280830CF98F00DE0446B5D771D1CCA9C2
57CBC627A1A6A5794045C2D910D7A00A3845804D0AC5B96274272E3C5890DEFE
798899DAFCC831CA7F2887B20E9682B5F5D3E334115D0DC6E436F93C4146DDE5
1D2D85D6A4EB0E36EC12696DBFA5781BCF62DEA354BD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 77 /M put
dup 79 /O put
dup 100 /d put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9042537872831BF5F1F340A
8D3E6DEA1D9675E87B3425FAA0172DBEFD7C28E30906B9FBA65517C9B58FB6BD
E0D474E69BB90B0D130A32C4130974A1C961CF064A5BE8EC1056858553FFCF7C
0D78627BDE04E5D0B9F6F72F92B61A915DFF7AFE7DC3807891D039AECEAC3F50
0A09579E661D3DC3022206061E0250B09A05CF198DF82D4F28FCD3671E815A6D
94820D0C87AB1DCEC251605D9490BC465D8A62C95B7352250D76D9FF1D3D5A32
9690780A5B56F9BA2083B29AAEA996FA95246D55AE88B0D3F6F307959251AFD9
82650287B5A98758C8FF3A60C40CBE3445ECB497F3E04C98DD52DCDB2F632D5E
FB5654C417A12EEEF2DB5F0CC54A379DA75BB9DEAB9FD9F256C1B832D55382E1
22A7DFDC37044BF0CC2CBCC4405D8A3495F4886001D615E1737FD9877EA3EB51
823C2FA1940BD8BD802C34BD648B41E268B825129BB13543961334C69DDD8407
97E868B79C83752682CB506FC1C801F63AE7B3B8D7EFD23C54232AA97FA8B2ED
EF2AE0382B4ECC8B24CFC62F698F8BBC90215BEAA8446BE6D261E30DCBEE8CE7
6BF8D0E51BE2597E8086F27D4C58573A226DFCC2E8E54216C283F2D822E6D5FE
7DD4BB17A30041A0D0566C4D6262747ACFFD9C16923ED4BE210C88D130BF66BC
1B55F037CD245984ED8CBB888F0C204A956B42B32681006BB2B5755720965DF3
90BD801DFD8FD88DB6DD57B778813A91FBC281B4CFCBDF2C3BC0A50BB50C2CD3
1B772245FF1BA45892B0FD346A61114F1A51ED3F4A4F16D13086041D2EC3791A
B354176AE9BD69F14464CF314A8912A93954CBD0D7970B5F210EBE6C26BF4220
511DD964DD66D17B0C8323E65E4EF95B5A90C3E0D2819701AD1203BF9EDC785F
AE8B56AAB796E5C5F15A96C9996C80175D7D61102B09DFE86192335D53AB2659
02CDBA6D30C35FC4ED6CAFE59224E239B24CEE0F282661BB28D9C3B35B7B1120
F11AD99D6BEE373959E47F227CC6E9319BAC889D6DA94BFAB8ED552E933D0CEF
827FA898C9DA319BAA703391FCEEBFCC46EF7A2E07F8990149E3A031A44D885B
4E488993C43179A5A4945F1E655752757D5A0CD0BEA0F0595C3D1C5A82C4F5CC
83B8D828D0B3266C174309D49998BC0129BB6B4DC9CE13A53D795C7D06736D3D
7AA60AF0D978D696EEB9191DD1A997BBB83D85A613281177F91650D8FAAC6C01
C942D83C4F10DBDA592EF4C3706328740DE2C4EA96B634F0745FADEF307DF903
CED64E9018CCDF833BC02206E84A584578100CB302804EB35BF02D921A6910A7
56E1CF845F32F70D8A29C99046D690FFE3B946DAABA3B9FE17EE85CF580B3240
A57E13A93701B7860ACE041FFACD0B531C1822CE58B31ED34353DFE93FCCDAC9
F0583C351DD5BBBC282CFA218C4699372B373BB21868975007D1C5DCF1D8F762
8FB01938A0F1A5E24EE97BD4C0B4D67AFF90C1F8AD1C7BC6253B43B7C2E3DFE8
2F1FD716DD0F39D866381892169C4A5DC7274ED476261CB63A2D4B40736A619F
58BF84860123DB51D12D7ACBF852142BACC2DF16B8E8957F1BD07A9210F8923E
2543667FB5DC79472B239482BB68D27D96ABF7A219376F9EA1BDD80A19C51274
86A086C0F4ED1AD92DC3BAC4B9351B051B5DF2AD22D9F27BC0116FF9F2AF413A
A0B2511439A424A268D0A98EEEE290C39BAF64C9467F48D0188002769C9341D1
2FB0BA23D8D77C3876DCF611CC1FDD09D5F9FF600FF92D595C8AEC60F40CEC7C
86E0B58F7BA5D2715796CA662DD5E4E73A860CC45A9F6BE2D3F5373E5DDF5785
4D302C93A8407466C6D15C9E0CF32A3D726171F3E43FFEAB9647D7A77888F56E
1FC41B12FF59A76DB9987F6A818707AFC7FF60D9E0AB43333F61AF5FB68BD5D6
D357798631F8C3C755B4E00D5D646F77385219201191FF08319EE494086D5EF7
6826191EDC56C6B2E9F27E4D147BCDAF5DF677119E1047506992EEDDD17230A6
2B13489663070024485DDA8C8DD9613056F5FBF36FBB0CFA78A119C53D547CA7
CDF553924708098BF4B0933B2DA23E5255E142D88AF8D3614C2D9DA162DF5491
DFA74A8999C9825FBB42A7ED4C03F53BF521E4B2A468C8FFF0D230590DFCF8B5
C1D3128CB93213F936973658B0AC794F677D374C31CCD71DCF27515CC06142F3
30FA6109A305B533BABD23DF0035E3359D3210A32E1A76160D079C5508C1ECDD
CBF5CFFC19E5649EEEFFBBFD6E14F4B5BB4B01B792D22E76FFB770379305F040
FA2F3652424013D5FD9AA682D47A576841F99FD113DD3577C34A91D233319112
AD7B977496DA1F01560C5F180A4A74EB156BBDD8DF520FE7F1E4C0209325350E
168E0E8D5EF8D801AE3B9C7CE7D5D7F7B4CEE0EFBC822DA725A053ACBA5B92A5
E0313BE509548C3227984679F5C0169FB2EA3DA579B281C61619EB0A52078260
2B2A16921E0816FA1B9EF7D2A15D490016FA50D5B2AB8E271951E26005D23FA1
E4F5DA3B94824034D201FC8313A0DE281F55F0EA80654B05AFA761EBB7B36E58
38E8D48664A07667BA5C578E0529AE6A83E4B5528C8FA5AC183564B2F98AC8D4
B555867296BDD7826FC4437C64372B4DF266DC1FCA2475ADBF44DECFE0688708
EF131246204A0EEDBBB0FC64F094A6026AE8A2B7139518AC010348F9B698FFA0
731D24BE7CBF3975E46ABF7FB91850AC9A9CDD19C444E30D686DD47C07A1BAA5
D7864AA3C0A0B63F63D9BF9D069352C2137A331929E3587282541CB028E4ECCD
C1BA671FDA35F2FB45C395D900422E585107E5392A622C463D0443D0E8CDA97E
ABD899F57F799A144621FB020436EDFF7D15B5B8459C07618E1E3B4FD30223E6
E2B32279C16898ACD2B7C8030638173A884098F86040EF9A743F213BF3A1CC58
6F4CC06EDF5F3B604B4BA95D5DBA8AC8C9FE3282C6829D87B968A1A4051B0D96
FA7329925B9D1F4F9B02D578BACA68AB30E2B315E286877BB01C27A723B1D813
FC292A572B4E8DE4F50C4BBBD854032DB7ED13FFD7C559DE7ECE5C60957650B7
2B663D50827B1C3EE8A64471A9FE4F04902B8871D0571B224EE14080553E948F
9B1A6229089B0C8EE38F67D19BA5C953598F038F6BF7CCA8FB6EAB99DF79DA4E
FA20269C16C66D1E639F3F02B176008EDB111A5F2E8A4E9483BC19601715ACCB
81B0C4D4CC954BBA6B9F8F589DB2B81D833D01395CA65B78F1606ABBA02A7C5A
73CC1C2B27F947178F014C4E1EFD5F49F710CA7B4CE3985ED67E6E5776DF55C4
CD9BDCEA941C2267D56E24DA13E06E639320E8C1E00EAE915940AA34D23DBE34
59F8E2E0D52AD660EFC9CC686A7B59F013C8E87E38BD74AF765D39C583237094
462AF4E323F61CEF945A2FE2EAD6849C22F61A1FD6E1A50508C7FFE2BA69DE7C
B3C62EDB045BD6731FED9EDBF554BFACE1CA113BD35CEA641BCFB29091E9E6EE
E68ABB10982B8B4233A743CEE74963E072B03B4ABED27AC8C074AAEC9ABCC287
FD87EE2B18FECF29A49607ECD21A8D0460B308252AC9DC5F3C22706730344D89
2A28852C63CD5B4BFCEB41CA852C35F57C5CF572F440861C22AB2FDA7F0F7BBC
672E56F62259A2D32B720A767A6C4FA10DDCEC8CB1B2B2D46B08C894294C861F
779006F2E747134704D055DFB933B8CE37806992631A691591896E0A9B3F8ECF
6D4F3B62C0781A3CA5F4A89DEF3585072214422289810E97AB5496251B218549
9DAC1A45FCD49BA0510C4DE5309C84E02C53FCA3F9194A3534C8CEA451CFA496
07DBB696BDD31AB69B149CCB115DC6025B09F5EBB77487EE39D5C2D44EC81DE8
B5CD62D2C44A4B5E1FB9B616C546331FF16F2980C68582C6EBF41CBF89CE3426
F34C0F4DB70664EFF7847F20E653E12EC99CDF3C6AC5A856F0EB7CBCC2DF330B
47A9BF074EF93A973526EC0510D1C4A127A18BE6CF56305560EBE1DD770CA4E5
5031A9CFE376836C3FAA4CB2620D7426A3B90387FCB287878FEC1D70EA3EDA28
19FEBA41431350B3BC254C655A9208EE00D2E7F8B4FAFA635E386C535B3E3E3D
5CA484BC1480307C0F11CA0FB4393D1C737861A3B28EBE574BD1BCA6886FBAD4
36975C9B57F8126F41D491DE3D3C818768CA6FF70C00F15792405AB8C411F1A8
E61A5CEED67C030A92F37945CC4E3EC929DDA358822E0821DDE5FEA1931CE8FC
078BE6804EA8EABC559AF296E07C94B6FE6EE3100516B55129099887F3CC65EA
C3783591F94D7579716D78DBF52B15011BD2A6F1A83E57E34E2B6C244CB3EC4C
B72017C862FF6E6DDFB20A42AA67FFD9F09F220FC52021E1E472682456DE027A
83E2B04257DDD63A1EADE2632A3E0F03082EAC7B991619DD7B23582F9975DE0B
3BFCB8E21C27CA9BF69D31173FF5070762DEE93FC5812EEE977ABB15AD16B5FA
7AD9F8DB8DC5BA27ED5D7CF1DA554FF26724AADC667E541E1AF3A55E30CC9179
049012857FFE79D1B25D170E62E42DF20DAE10DF0279310081AD145669EB39BB
F1E6A89A32FB888F23C3809FDEF4A6B059990639994383AE4235EA1C0FE21F44
1EF73F5D9FD6740C017BBF5A0ECDC07C6111DBCF37FEEF8A43ADBA294F416FE8
9860B38639DF04EDC999A517C8551802F0A486EB6E9FE493573E80F1EAB35341
44872C04A82D92BF3D81540226A597404CF5568665C22417E497A0DBFB2876D8
185A1E6F2CD5965A17673BF9553B6CBAED85F6DCF8EC8570FC7FD5E7089DE95D
FF2B11897D14FA7C778DC4B603F713A42D71BE4FFF07C15C96B111CB17052FDE
F969C47695F50929189349957602D3DA430D3D6819F66DD340F19404C3A2A628
C358540B77D907055650B89FFD7275A1BEFAF612A9B6294DD08DC77EFAD4A9BC
A48D9708E1315D32A7063204092B926CF6E18A95CBEB74C729FD3B938319905B
AC56798AE7695D7F2718C0CB5273B1F67C3A03FA5DBCC5FDE474F84D1F802BDC
53FA887348030058741D349277162EA884CCC4B743E592E84DAA5B7B98951FD7
CAC3BC7E14E7623C8C73FC1DB0458FEE98C0E24DB2BCD2AF914F602E2147A2AE
C6D172F62D19B0FB64B8778E3C8838A079CE909487B4D6EE1275E2BF6C3AAB71
0CA46F510587229BB3EE890372791E148993DF48EDD9F92E4AFD7A9E4FE3F5DD
09E41C1EABDA8E1EEB76B27BA5795816B81BEBDFD7928162769B3DE434A8A9D0
7C3F4BA4C78C4F38643D85FCF19EF47539275172F17697C2BE85FF50F7B356C1
B4934FC22FCE7511A6CFA54E6D79109A62A63BFC2AB4718A813D6ECE4041C1EA

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 61 /equal put
dup 91 /bracketleft put
dup 93 /bracketright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E7089C15EBD280E8F429DE136CB4785DE5BECB71FB97DF1E6287495AFE055D0F
FB4B22B347841D36838D978E7201B365DF1F1DA5439DBC0068F6BAE3847E63D3
C9AA412D1320FDD102860A54D8E6566C2E3D729C5907B8A7B5D6B23DA269C20B
732AAB2589536FA3B43E92840BD29870215C6355B2C4B94917B9097031B2383E
53F96997CA1669749E13E6748888952DBF20ED6CA129B7896CAFE28FC60385E1
4A760E98EAF5063E373A084CD6829DC18D063618B10F6A35AA1894A23651DE09
9389D561B469BE5C0F97ABAC30EE74060BE1BCD51B500B94E95873D7C7036D3F
AB60D3E81A470BDDC46AA93CB8B89B7688157950BDFDEFA7F8098A0F0581B16C
51AC3CCB3B6F49B720E8DD38E27D05E801B0A19AE1B5998A9FF51AE0E45D3CE6
524CBF56223468C987C1883B80126A31EEC51093DB28F7C996D5A69FE651AB06
37C908BFBCA1E85DEC43047BB3E45F751EE861BAD6507AA0F6A1F0D86BA9F128
0CA84AA8CF15CC932934227CDBAD19823E65D7471AD16F9AEA07C2B3D39C4572
6F023EA6DB10AF4F8B1F757AF2BCBF9B7C3D39912E288DC3957443E810A34375
B477C2BF78B9B7AB53756337C1B7B6BF7D54B8ED9F821BE9EB51B17D6F00284F
0663CF5156428E2AE9ABB2ED239303AAD05165D1F22B1B030587CBB418B5B278
6E77B69ECA81864B4F28882C75010AF7B697A616F07AA95FC25807B9C3C17866
2262B59FEB7B66B0473396CC9E439029D8912AD08CC15C16080558CFC8D79479
C3228EB0F733C9EE13BB62940933F5289EFF0E1449019182C7C6A1D52CFA7698
9BA699A5CE2AEDDEF7FBA2546A4A4EC86B45849369EFF6DC31B2D4EA09D75439
A59AFE302EFDC971E040A4B5FD37AE8D53E4AF5C970E62CC6A6E4E2892B19449
4051EC109C1224D8E5F98AFEBC1391A91F6507B6A1DEC256507EB05706234EF5
3C5B0DB9453B26D8E66E18FDE28C4AD2C940926480C8042E9E8327A68EA20601
A857DF770CD6F297DCD3779B48DC02FD068A031EC5C94056CF4B8CC2B5220C03
1F8ECACFABFE4730B5537635289B228121B25F984B7490BF7B6E45B4F867344F
D020FF9DB88D399E40BD1E5213BC7A9C81320F1E7EBFBA16499036AB8F879FC9
FC80621F41648BB24DFCB70EB0D2053FEE91CE0F1EE30A39E8D8DDC299487BF3
C554AEAA3FE2A5CF11C33E1039168F4D3B9D5275E103180DFFEA9B3785E49BC2
A64359A51F036CF27FA8C212195896F2D033AC0DC7510A0F613D26FAB85CE144
D79450E0AC1BFD9359D46E62698E88DE63081CE6FD4F81D68ADE1BA6128B6472
91C0013F4D67F7EA424ADEC3D01CA94A667DC3BAB1D05810253752EF50FEB465
CA57D8AD38F514BCBD3CB446BD1286A7CBDD99EDED006C8CE60D9543ED480DC5
2CC44083FEC109ACC2444BE36AEB859CA61DE07724A7216E081752656F6B12D8
55202F8F1DF299DBE589F941011B749EDFCF8CE3F27E6FD2A7C10394B4FA2872
BBB8DB9D7EC95AA0F738891EC96C2ACD5B9BE38E3B4255117CB9F97F4E5B5D5E
7E0DB72D7776DD13922BB9C2C857929B41F6FC97CC84F09E489AA613B7EE9E22
BC3A15028D869B1F6E6DB035F6BF142E8C808AE2926360F39251AEDEBAB74405
853B1F716AEE15416397B2FFE9B85447DCB5285D1EDA04B7D115A0CC8DDBAF08
E3414D8FFD6D2B92734EBF65C9C533AF0C8F449AC9952C2AA3FF2A6F4540CC8A
3CEDD7EF51C67F2B9CE0E12FE5A83E190351A82F4D83521AA846334CDA5D2FB5
7762AC2EFEDE77B59B23115C0D72437E5E95A6B3E5C96AEFF95B3A2A46784621
6EAA9017CE42B9A056A33BB8A012670301618EC89F792C6AA4A97CEC1B4FC6BE
115BE110AB5DCFFBC2CD4A4438AED81606304D87F5716959BB3DFF64F332C3D3
6F39A21F43F1F55F1E989B79BF3ED2EA343ED6B69F3FFC302B77CD4F4BF19067
02D3A957D129BA56D2E72A3C557B775054611F1B8991DD243A9E497656347F28
800F5CE7E682B6A859D8E4065C2247E35D4C7A72B7B23D497FE3986D0CF3CA77
F7F334FB7F10C57C5A82B4626D5C673E6DF362F7D9D2A2763063E748744D2C57
CF29EB615A97BDF9C58210838BA7379B19FEB6DF039C168F5F02880CC54B33CE
7F00FAD05E176B2D9C5E29E496B43DDC8EA1585C502EEF266011A5A654F3A51A
956B2220148C0305913EA23E53338420449974F401AFF360120EBE52704E5C93
D00C39DE05257808CCF31FFCED2D07CC4F3A458A4CFF794295969D1FD9D4DD07
DC6BD7D56D11A19E1F3A89175E27FC4AFA9F24BDBCC8D68049BCD3D8DD17F1A2
3C4F2C9A3902960C482132223B927F68B3B3419D9731292D95BD20C904CC10C2
2170A4CD3107B426A8668773048D5E68300E7EE40866F417521AC7527E6487B5
57B3D6F0521E3DE36519D2E226A0C866B9003C46215175896109B6BD71BFC42C
C17BB097FC1001CEF0AD49B91105A97B2CAF34CC2A5F394DC51C575852E6A13E
CC2CE7C6575C8675CF12CEB5B0B93D4660C086D2D0B1E96191A4152B7933D6EC
8A1BA7EB9CE624070297F3F4435B82897E301D69A18AB04A9CB061F7A7A15A6F
AC79C49C7F8E62CE5EEC5235F05EA0DA00789894C1FCF7D5C32D3B3EC99C50C9
D6EF6EBC63F15A451385F98CCDA43C47845D54B2790923DC1D1AACA923E6D538
DCB76A9D3EF1374BD2359D56E78DAA8CD63B7C74C17A07599FAA24758EF70111
ABA676FCF8CBD4F22FB2FB3EE92B69A14F8A3DF32BE2C5F0389571A50B132F17
ACE34D30FB37268A9DBE5A84BA9949AC9B8D34DBED0959CE354B8A0741A52C62
B6451E74CAECEB898AA71B7766232693D49EEE442E30654ACE58CB48D8B9F676
435888DB716C3FB8010E7DD9A2A4421D9E1F92215A3815A9CA4872F17F7BE3B9
C6E65A1D0CB7DB4EC6345F4C8ABB36918D79CAD0E49FE7D8042B21C90AA8AB5B
C834DA9460F8E220B89BA88F47CB1AF30804A3CC346A88DAE39CC1F63167C665
3629006DD975FCE3EDDD02744986DEA4B1E6E31D317966835198031E85427AE0
4F90BD0E6CD5DA38100D186A690A74D308C782289632AA179EC90324A98422F8
BB9B8335EF93CF516800D863FD166EA69CFFFED3E9F0A612A86F3F784E113528
6E25E3155B8DCA299A747992FA3D14B5F8D406AB8A8477B528
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158278 55380994 1000 600 600 (cours_reperage.dvi)
@start /Fa 204[35 35 35 49[{}3 66.4176 /CMR8 rf /Fb 143[91
112[{}1 90.9091 /CMEX10 rf /Fc 252[71 3[{}1 90.9091 /MSAM10
rf /Fd 207[19 48[{}1 66.4176 /CMSY8 rf
%DVIPSBitmapFont: Fe eccc1095 10.95 11
/Fe 11 234 df<1C007F00FF80FF80FF80FF80FF807F001C000000000000000000000000
000000000000000000000000000000000000000000000000000000000000001C007F00FF
80FF80FF80FF80FF807F001C00092776A61D>58 D<FFFFFFFFFC000000FFFFFFFFFFC000
00FFFFFFFFFFF0000000FFC0000FFC0000007F800001FF0000007F8000007F8000007F80
00001FE000007F8000000FF000007F80000003F800007F80000001FC00007F80000001FE
00007F80000000FE00007F800000007F00007F800000003F80007F800000003F80007F80
0000001FC0007F800000001FE0007F800000001FE0007F800000000FE0007F800000000F
F0007F800000000FF0007F800000000FF8007F8000000007F8007F8000000007F8007F80
00000007F8007F8000000007F8007F8000000007FC007F8000000007FC007F8000000007
FC007F8000000007FC007F8000000007FC007F8000000007FC007F8000000007FC007F80
00000007FC007F8000000007FC007F8000000007FC007F8000000007FC007F8000000007
F8007F8000000007F8007F8000000007F8007F8000000007F8007F800000000FF0007F80
0000000FF0007F800000000FF0007F800000000FE0007F800000001FE0007F800000001F
C0007F800000003FC0007F800000003F80007F800000007F00007F800000007F00007F80
000000FE00007F80000001FC00007F80000003F800007F80000007F000007F8000001FE0
00007F8000003FC000007F800001FF000000FFC0000FFE0000FFFFFFFFFFF80000FFFFFF
FFFFC00000FFFFFFFFFC0000003E3E7BBD4A>68 D<000000C0000000000001E000000000
0001E0000000000001E0000000000003F0000000000003F0000000000007F80000000000
07F8000000000007F800000000000CFC00000000000CFC00000000001CFE000000000018
7E0000000000187E0000000000303F0000000000303F0000000000703F8000000000601F
8000000000601F8000000000C00FC000000000C00FC000000001C00FE0000000018007E0
000000018007E0000000030003F0000000030003F0000000070003F8000000060001F800
0000060001F80000000C0000FC0000000FFFFFFC0000001FFFFFFE0000001800007E0000
001800007E0000003000003F0000003000003F0000007000003F8000006000001F800000
6000001F800000E000000FC00000C000000FC00001C000000FE00001C0000007E00003C0
000007F00007E0000007F0001FF000000FF800FFF80000FFFFC0FFF80000FFFFC032307D
AF38>97 D<FFFFC0FFFFC007F80003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00007F800FFFFC0FF
FFC0122F7BAE1C>105 D<FFF000000007FF80FFF80000000FFF8007F80000000FF00003
F80000000FE000037C0000001BE000037C0000001BE000033E00000033E000033E000000
33E000033E00000033E000031F00000063E000031F00000063E000030F800000C3E00003
0F800000C3E000030F800000C3E0000307C0000183E0000307C0000183E0000303E00003
03E0000303E0000303E0000303E0000303E0000301F0000603E0000301F0000603E00003
00F8000C03E0000300F8000C03E00003007C001803E00003007C001803E00003007C0018
03E00003003E003003E00003003E003003E00003001F006003E00003001F006003E00003
001F006003E00003000F80C003E00003000F80C003E000030007C18003E000030007C180
03E000030007C18003E000030003E30003E000030003E30003E000030001F60003E00003
0001F60003E000030001F60003E000030000FC0003E000078000FC0003E0000FC0007800
03E0001FE000780007F000FFFC007800FFFF80FFFC003000FFFF80392F7AAE45>109
D<FFF00000FFFCFFF80000FFFC07F800001FE003FC00000FC003FE00000780037F000003
00033F00000300033F80000300031FC0000300030FC0000300030FE00003000307F00003
000303F80003000301F80003000301FC0003000300FE00030003007E00030003007F0003
0003003F80030003001FC0030003000FC0030003000FE00300030007F00300030003F003
00030003F80300030001FC0300030000FE0300030000FE03000300007F03000300003F83
000300001F83000300001FC3000300000FE30003000007F30003000007F30003000003FB
0003000001FF0003000000FF0003000000FF00030000007F00030000003F00030000003F
00078000001F000FC000000F001FE000000700FFFC00000700FFFC000003002E2F7BAE38
>I<00001FF800000000FFFF00000007F00FE000000F8001F000003F0000FC00007C0000
3E0000F800001F0001F000000F8003E0000007C007E0000007E00FC0000003F00FC00000
03F01F80000001F81F80000001F83F00000000FC3F00000000FC7F00000000FE7F000000
00FE7E000000007E7E000000007EFE000000007FFE000000007FFE000000007FFE000000
007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000
007F7F00000000FE7F00000000FE7F00000000FE3F00000000FC3F80000001FC3F800000
01FC1F80000001F80FC0000003F00FC0000003F007E0000007E003F000000FC001F80000
1F8000F800001F00007E00007E00003F0000FC00000FC003F0000007F00FE0000000FFFF
000000001FF8000030317BAF3A>I<FFFFFFE0000000FFFFFFFC00000007F8007F800000
03F0000FC0000003F00003F0000003F00001F8000003F00000FC000003F00000FE000003
F000007E000003F000007F000003F000007F000003F000007F000003F000007F000003F0
00007F000003F000007F000003F000007E000003F00000FE000003F00000FC000003F000
01F8000003F00003F0000003F0000FC0000003F0007F80000003FFFFFC00000003FFFFF8
00000003F000FE00000003F0003F00000003F0001F80000003F0000FC0000003F00007E0
000003F00007E0000003F00003F0000003F00003F0000003F00003F0000003F00003F000
0003F00003F0000003F00003F8000003F00003F8000003F00003F8000003F00003F80000
03F00003F8018003F00003FC018003F00003FC018003F00001FC038003F00001FC030007
F80000FE0700FFFFC0007F0E00FFFFC0001FFC000000000003F00031307BAE37>114
D<003FC00C00FFF81C03E03E1C0F0007BC1E0001FC3C0000FC3800007C7800007C700000
3CF000003CF000001CF000001CF000001CF800000CF800000CFC00000CFE0000007F0000
007F8000003FF800003FFF80001FFFF8000FFFFF0003FFFFC000FFFFE0003FFFF00001FF
F800001FFC000003FC000000FE0000007E0000003F0000001FC000001FC000001FC00000
0FC000000FE000000FE000000FE000000EF000001EF000001EF800003CFC000038FF0000
70F38001E0E1F807C0E07FFF00C007FC0020317BAF2A>I<7FFFFFFFFFF87FFFFFFFFFF8
7F001FE003F87C000FC000F878000FC0007870000FC0003860000FC0001860000FC00018
E0000FC0001CE0000FC0001CC0000FC0000CC0000FC0000CC0000FC0000CC0000FC0000C
C0000FC0000CC0000FC0000C00000FC0000000000FC0000000000FC0000000000FC00000
00000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC00000
00000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC00000
00000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC00000
00000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000001FE00000
00003FF00000001FFFFFE000001FFFFFE0002E2F7CAE36>I<00000000700000000001F8
0000000007F8000000000FF8000000003FF800000000FFF000000003FF800000000FFC00
0000001FC0000000003E0000000000300000000000000000000000000000000000000000
00000000000000000000000000FFFFFFFFFE00FFFFFFFFFE0007F80001FE0003F000007E
0003F000001F0003F000000F0003F00000070003F00000070003F00000030003F0000003
0003F00000030003F00000030003F00000018003F00000018003F00030018003F0003001
8003F00030000003F00030000003F00030000003F00070000003F000F0000003F001F000
0003FFFFF0000003FFFFF0000003F001F0000003F000F0000003F00070000003F0003000
0003F00030000003F00030006003F00030006003F00030006003F0000000C003F0000000
C003F0000000C003F0000000C003F0000001C003F0000001C003F00000018003F0000003
8003F00000038003F00000078003F000000F8003F000003F8007F80001FF00FFFFFFFFFF
00FFFFFFFFFF002B3F7BBE33>233 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff ecsl1095 10.95 36
/Ff 36 234 df<03C00FE01FF01FF01FF01FF01FF01FF007B00030003000700060006000
E000C001C001800380030007000E001C0038007000E000C0000C1B71BE19>39
D<0000000030000000000000003000000000000000700000000000000060000000000000
006000000000000000600000000000000060000000000000006000000000000000E00000
0000000000C000000000000000C000000000000000C000000000000000C0000000000000
00C000000000000001C00000000000000180000000000000018000000000000001800000
000000000180000000000000018000000000000003800000000000000300000000000000
030000000000000003000000000000000300000000000000030000000000000007000000
0000000006000000000000000600000000FFFFFFFFFFFFFFE0FFFFFFFFFFFFFFE0000000
06000000000000000E000000000000000C000000000000000C000000000000000C000000
000000000C000000000000000C000000000000001C000000000000001800000000000000
180000000000000018000000000000001800000000000000180000000000000038000000
000000003000000000000000300000000000000030000000000000003000000000000000
300000000000000070000000000000006000000000000000600000000000000060000000
000000006000000000000000E000000000000000C000000000000000C000000000000000
C000000000000000C0000000003B3C77B446>43 D<03C00FE01FF01FF01FF01FF01FF01F
F007B00030003000700060006000E000C001C001800380030007000E001C0038007000E0
00C0000C1B7A8819>I<7FFFFFFFFFFEFFFFFEFFFFFEFFFFFE18057C951E>I<1E007F00FF
80FF80FF80FF80FF00FE003C000909778819>I<00F003F807FC07FC07FC07FC07F807F0
01E000000000000000000000000000000000000000000000000000000000000000000000
00000000000000001E007F00FF80FF80FF80FF80FF00FE003C000E2777A619>58
D<00000000000000E000000000000007C00000000000001F000000000000007800000000
000003E00000000000000F800000000000003C00000000000001F000000000000007C000
00000000001E00000000000000F800000000000003E00000000000000F00000000000000
7C00000000000001F000000000000007800000000000003E00000000000000F800000000
000003C00000000000001F000000000000007C00000000000001E00000000000000F8000
00000000003E00000000000000F000000000000000F0000000000000003C000000000000
000F0000000000000003C000000000000000F0000000000000003C000000000000000F00
00000000000003C000000000000000F0000000000000003C000000000000000F00000000
00000003C000000000000000F0000000000000003C000000000000000F00000000000000
03C000000000000000F0000000000000003C000000000000000F0000000000000003C000
000000000000F0000000000000003C000000000000000F0000000000000003C000000000
000000E0003B3275AF46>60 D<00E00000000000000078000000000000001E0000000000
0000078000000000000001E00000000000000078000000000000001E0000000000000007
8000000000000001E00000000000000078000000000000001E0000000000000007800000
0000000001E00000000000000078000000000000001E0000000000000007800000000000
0001E00000000000000078000000000000001E00000000000000078000000000000001E0
0000000000000078000000000000001E00000000000000078000000000000001E0000000
00000003E00000000000000F800000000000003C00000000000001F000000000000007C0
0000000000001E00000000000000F800000000000003E00000000000000F000000000000
007C00000000000001F000000000000007800000000000003E00000000000000F8000000
00000003C00000000000001F000000000000007C00000000000001E00000000000000F80
0000000000003E00000000000000F000000000000007C00000000000001F000000000000
007800000000000000E0000000000000003B3279AF46>62 D<0000000000C00000000000
0001E000000000000001E000000000000003E000000000000003E000000000000007E000
000000000007F00000000000000FF00000000000000FF00000000000001FF00000000000
001FF00000000000003FF80000000000003FF800000000000067F800000000000067F800
0000000000C7F8000000000000C7F800000000000187FC00000000000183FC0000000000
0303FC00000000000303FC00000000000603FC00000000000603FE00000000000C01FE00
000000000C01FE00000000001801FE00000000001801FE00000000003001FF0000000000
7001FF00000000006000FF0000000000E000FF0000000000C000FF0000000001C000FF00
000000018000FF800000000300007F800000000300007F800000000600007F8000000006
00007F800000000C00007FC00000000C00003FC00000001800003FC00000001FFFFFFFC0
0000003FFFFFFFC00000003FFFFFFFC00000006000003FE00000006000001FE0000000C0
00001FE0000000C000001FE00000018000001FE00000018000001FF00000030000000FF0
0000030000000FF00000060000000FF000000E0000000FF000000C0000000FF800001C00
00000FF800001800000007F800003800000007F800007800000007F80000F800000007FC
0001FC00000007FC0007FE0000001FFE00FFFFC00003FFFFFCFFFFC00007FFFFF8FFFFC0
0007FFFFF83E417DC044>65 D<001FFFFFFFFF000000003FFFFFFFFFE00000003FFFFFFF
FFF8000000007FE00007FE000000003FE00000FF000000003FE000003FC00000003FC000
001FE00000003FC000000FE00000003FC0000007F00000003FC0000003F80000003FC000
0003FC0000007FC0000001FC0000007F80000000FE0000007F80000000FE0000007F8000
0000FF0000007F800000007F0000007F800000007F000000FF800000007F800000FF0000
00007F800000FF000000007F800000FF000000007F800000FF000000007F800000FF0000
00007F800001FF000000007FC00001FE000000007FC00001FE000000007FC00001FE0000
00007FC00001FE000000007FC00001FE000000007F800003FE000000007F800003FC0000
0000FF800003FC00000000FF800003FC00000000FF800003FC00000000FF800003FC0000
0000FF000007FC00000000FF000007F800000001FF000007F800000001FF000007F80000
0001FE000007F800000001FE000007F800000003FC00000FF800000003FC00000FF00000
0007F800000FF000000007F800000FF000000007F000000FF00000000FF000000FF00000
000FE000001FF00000001FC000001FE00000003FC000001FE00000003F8000001FE00000
007F0000001FE0000000FE0000001FE0000001FC0000003FE0000003F80000003FC00000
07F00000003FC000001FE00000003FC000007F800000007FC00001FF00000000FFC0000F
FC0000007FFFFFFFFFF00000007FFFFFFFFF80000000FFFFFFFFFC00000000423E7DBD45
>68 D<001FFFFFFC0000003FFFFFFC0000003FFFFFFC000000007FF800000000003FE000
000000003FE000000000003FC000000000003FC000000000003FC000000000003FC00000
0000003FC000000000007FC000000000007F8000000000007F8000000000007F80000000
00007F8000000000007F800000000000FF800000000000FF000000000000FF0000000000
00FF000000000000FF000000000000FF000000000001FF000000000001FE000000000001
FE000000000001FE000000000001FE000000000001FE000000000003FE000000000003FC
000000000003FC000000000003FC000000000003FC000000000003FC000000000007FC00
0000000007F8000000000007F8000000000007F8000000300007F8000000300007F80000
0060000FF800000060000FF000000060000FF000000060000FF0000000C0000FF0000000
C0000FF0000000C0001FF0000001C0001FE000000180001FE000000380001FE000000380
001FE000000780001FE000000F00003FE000001F00003FC000003F00003FC000007F0000
3FC00000FE00007FC00003FE0000FFC0003FFE007FFFFFFFFFFE007FFFFFFFFFFC00FFFF
FFFFFFFC00343E7DBD38>76 D<00000003FF0000000000003FFFF00000000000FE01FC00
00000007F0007F000000000FC0001F800000003F00000FC00000007E000007F0000001F8
000003F8000003F0000001F8000007E0000000FC00000FC0000000FE00001FC00000007F
00003F800000007F00007F000000003F8000FF000000003F8000FE000000003FC001FC00
0000003FC003FC000000001FC003F8000000001FE007F8000000001FE00FF0000000001F
E00FF0000000001FE01FF0000000001FE01FE0000000001FE01FE0000000001FF03FE000
0000001FF03FC0000000001FF03FC0000000001FF07FC0000000001FF07FC0000000001F
F07FC0000000001FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0FF8000
0000003FE0FF80000000003FE0FF80000000007FC0FF80000000007FC0FF80000000007F
C0FF80000000007FC0FF0000000000FF80FF0000000000FF80FF0000000000FF00FF0000
000001FF00FF8000000001FE00FF8000000001FE00FF8000000003FC007F8000000003FC
007F8000000007F8007F8000000007F8003FC00000000FF0003FC00000001FE0001FC000
00001FC0001FC00000003F80000FE00000007F80000FE0000000FF000007F0000000FE00
0003F8000001F8000001F8000007F0000000FC00000FE00000007E00001F800000003F80
007F000000000FC001FC0000000007F80FF00000000000FFFF8000000000001FF8000000
003C4276BF46>79 D<000000FF0007000007FFE00700001FFFF80E00007F00FE1E0001FC
001F3E0003F00007BE0007E00003FE000FC00001FE001F800001FC001F000000FC003F00
00007C003E0000007C007E0000007C007E0000003C00FC0000003800FC0000003800FC00
00003800FC0000003800FC0000003800FC0000003800FE0000003000FE0000003000FF00
00000000FF8000000000FFC000000000FFE0000000007FFC000000007FFFC00000003FFF
FC0000003FFFFF8000001FFFFFE000000FFFFFF8000003FFFFFC000001FFFFFE0000003F
FFFF00000003FFFF000000007FFF8000000007FF8000000001FF8000000000FFC0000000
007FC0000000003FC0000000003FC0000000001FC0180000001FC0180000001FC0180000
001FC0180000000FC0180000001FC0380000001F80380000001F80380000001F80380000
001F003C0000003F003C0000003E007C0000007E007E0000007C007F000000FC007F8000
01F8007FC00003F0007DE00007E000F8F8001FC000F07F007F0000E01FFFFC0000E007FF
F00000C000FFC0000030427BBF32>83 D<0000FF8000000007FFF00000001F00FC000000
38003E000000F0001F000000F0001F800001FC000FC00001FC000FC00003FC000FC00003
FC0007E00003FC0007E00001F80007E00000F00007E0000000000FE0000000000FE00000
00000FC0000000000FC000000003FFC00000007FFFC0000007FF1FC000001FE01FC00000
7F801F800001FE001F800003F8001F800007F0001F80000FE0003F80001FC0003F80003F
C0003F00003F80003F01807F00003F01807F00007F01807F00007F0180FF00007E0300FE
0000FE0300FE0001FE03007F0001BE03007F0003BE06007F80073E06003F801E1F0C000F
E0781FF80003FFE00FF000007F8007C000292A7BA82D>97 D<003F000000001FFF000000
001FFF000000001FFF0000000000FF00000000007F00000000007F00000000007E000000
00007E00000000007E00000000007E00000000007E0000000000FE0000000000FC000000
0000FC0000000000FC0000000000FC0000000000FC0000000001FC0000000001F8000000
0001F80000000001F80000000001F80000000001F807F0000003F83FFE000003F0F80F80
0003F3C007E00003F70003F00003FE0001F80003FC0000F80007F80000FC0007F000007E
0007E000007E0007E000007F0007E000003F0007E000003F000FE000003F000FC000003F
000FC000003F800FC000003F800FC000003F800FC000007F801FC000007F001F8000007F
001F8000007F001F8000007F001F8000007F001F800000FE003F800000FE003F000000FE
003F000001FC003F000001FC003F000003F8003F000003F0007F000007F0007F00000FE0
007F80000FC0007D80001F800079C0003F000078E000FC0000F07001F80000E03C0FE000
00C01FFF8000000003F8000000294077BE32>I<00001FE0000000FFFC000003F01F0000
0F8003C0003F0000E0007E0003E000FC000FE001F8000FE003F0001FE007F0001FE007E0
001FE00FC0000FC01FC00007801FC00000003F800000003F800000007F000000007F0000
00007F000000007F00000000FF00000000FE00000000FE00000000FE00000000FE000000
00FE00000000FE00000000FE00000000FE00000000FE000000007E000001807E00000380
7F000003003F000007003F00000E001F80001C000F8000380007C000700003E001E00001
F80F8000007FFE0000000FF00000232A7AA828>I<0000000003F000000001FFF0000000
01FFF000000001FFF0000000000FF00000000007F00000000007F00000000007E0000000
0007E00000000007E00000000007E0000000000FE0000000000FE0000000000FC0000000
000FC0000000000FC0000000000FC0000000001FC0000000001FC0000000001F80000000
001F80000000001F80000000001F8000001FE03F800000FFF83F800003F01E3F00000FC0
073F00003F0003BF00007E0001FF0000FC0000FF0001F80000FF0003F000007E0007E000
007E000FE000007E000FC000007E001FC00000FE003F800000FE003F800000FC003F8000
00FC007F000000FC007F000000FC007F000001FC00FF000001FC00FE000001F800FE0000
01F800FE000001F800FE000001F800FE000003F800FE000003F800FE000003F000FE0000
03F000FE000003F0007E000003F0007E000007F0007E000007F0003F00000FE0003F0000
1FE0001F80003FE0000F800077E00007C000EFF00003E003CFFF8001F80F0FFF80007FFC
0FFF80000FF00FC0002C407ABE32>I<00003FC0000001FFF0000007C0FC00001F803E00
003E001F0000FC000F8001F8000FC001F00007C003F00007C007E00007E00FE00007E00F
C00003E01FC00003E01F800003E03F800003E03F800007E07F000007E07F000007E07FFF
FFFFE07FFFFFFFE0FF00000000FE00000000FE00000000FE00000000FE00000000FE0000
0000FE00000000FE00000000FE00000000FE000000007E000001807E000003807E000003
003F000007003F00000E001F80001C000F8000380007C000700003E001E00001F80F8000
007FFE0000000FF00000232A7AA828>I<00000000007C000003F803FF00001FFF0F8F00
007E0F9C1F0001F803F81F0003F003F01F0007E001F00C000FC001F800000F8000F80000
1F8000F800003F0000FC00003F0000FC00003F0000FC00003F0001FC00007F0001FC0000
7E0001F800007E0001F800007E0001F800003E0003F000003E0003E000003F0007E00000
1F000FC000001F801F8000001F803F0000003BE0FC00000031FFF0000000703F80000000
600000000000E00000000000E00000000000E00000000000E00000000000E00000000000
F00000000000F80000000000FFFFF8000000FFFFFF8000007FFFFFE000003FFFFFF80000
FFFFFFFC0003F0000FFC000FC00001FE001F0000007E003E0000003F007E0000003F007C
0000001F00FC0000001F00F80000001F00F80000001F00F80000003F00F80000003E00F8
0000007E00F80000007C00FC000000FC007C000001F8003E000003E0001F00000FC0000F
C0003F000003F801FC0000007FFFF00000000FFF000000303D7FA82D>103
D<00007E000000003FFE000000003FFE000000003FFE0000000001FE0000000000FE0000
000000FE0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000
000001FC0000000001F80000000001F80000000001F80000000001F80000000001F80000
000003F80000000003F00000000003F00000000003F00000000003F00000000003F00FF0
000007F03FFE000007E0F01F800007E3C00F800007E7000FC00007EE0007C00007FC0007
E0000FF80007E0000FF00007E0000FF00007E0000FE00007E0000FE00007E0000FC0000F
E0001FC0000FE0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80001F
C0003F80001FC0003F00001F80003F00001F80003F00001F80003F00001F80003F00003F
80007F00003F80007E00003F00007E00003F00007E00003F00007E00003F00007E00007F
0000FE00007F0000FC00007E0000FC00007E0000FC00007E0000FC00007E0003FE0001FF
007FFFF03FFFF8FFFFF07FFFF8FFFFF07FFFF82D3F7EBE32>I<0000700001FC0003FC00
03FC0007FC0007FC0003FC0003F80000E000000000000000000000000000000000000000
00000000000000000000000000000000000007F001FFF001FFE001FFE0001FE0000FE000
0FE0000FE0000FC0000FC0000FC0000FC0000FC0001FC0001F80001F80001F80001F8000
1F80003F80003F00003F00003F00003F00003F00007F00007E00007E00007E00007E0000
7E0000FE0000FC0000FC0000FC0000FC0003FE007FFFE07FFFE0FFFFE0163D7EBC19>I<
00007E000000003FFE000000003FFE000000003FFE0000000001FE0000000000FE000000
0000FE0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC000000
0001FC0000000001F80000000001F80000000001F80000000001F80000000001F8000000
0003F80000000003F00000000003F00000000003F00000000003F00000000003F0000000
0007F000FFFF0007E000FFFE0007E001FFFE0007E0007FE00007E0007F800007E0007E00
000FE0007800000FC000E000000FC001C000000FC0038000000FC00E0000000FC01C0000
001FC0380000001F80E00000001F81E00000001F83E00000001F8FF00000001F9FF00000
003FB9F80000003FF1FC0000003FC0FC0000003F80FE0000003F007E0000003F007F0000
007F003F0000007E003F8000007E001F8000007E001FC000007E000FC000007E0007E000
00FE0007E00000FC0003F00000FC0003F80000FC0003F80000FC0003FC0003FE0007FF00
7FFFF01FFFF0FFFFF01FFFE0FFFFF01FFFE0303F7EBE30>107 D<00007E001FFE003FFE
003FFE0001FE0000FE0000FE0000FC0000FC0000FC0000FC0000FC0001FC0001F80001F8
0001F80001F80001F80003F80003F00003F00003F00003F00003F00007F00007E00007E0
0007E00007E00007E0000FE0000FC0000FC0000FC0000FC0000FC0001FC0001F80001F80
001F80001F80001F80003F80003F00003F00003F00003F00003F00007F00007E00007E00
007E00007E00007E0000FE0000FC0000FC0000FC0000FC0003FE007FFFF07FFFF0FFFFF0
173F7EBE19>I<0007F00FF00007F80001FFF03FFE001FFF0003FFE0F01F80780FC003FF
E3C00F81E007C0001FE7000FC38007E0000FEE0007C70003E0000FFC0007EE0003F0000F
F80007FC0003F0000FF00007F80003F0000FF00007F80003F0000FE00007F00003F0000F
E00007F00003F0000FC00007E00003F0001FC0000FE00007F0001F80000FC00007E0001F
80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0003F
80001FC0000FE0003F00001F80000FC0003F00001F80000FC0003F00001F80000FC0003F
00001F80000FC0003F00001F80000FC0007F00003F80001FC0007E00003F00001F80007E
00003F00001F80007E00003F00001F80007E00003F00001F80007E00003F00001F8000FE
00007F00003F8000FC00007E00003F0000FC00007E00003F0000FC00007E00003F0000FC
00007E00003F0003FE0001FF0000FF807FFFF03FFFF81FFFFCFFFFF07FFFF83FFFFCFFFF
F07FFFF83FFFFC46287EA74B>I<0007F00FF00001FFF03FFE0003FFE0F01F8003FFE3C0
0F80001FE7000FC0000FEE0007C0000FFC0007E0000FF80007E0000FF00007E0000FF000
07E0000FE00007E0000FE00007E0000FC0000FE0001FC0000FE0001F80000FC0001F8000
0FC0001F80000FC0001F80000FC0001F80001FC0003F80001FC0003F00001F80003F0000
1F80003F00001F80003F00001F80003F00003F80007F00003F80007E00003F00007E0000
3F00007E00003F00007E00003F00007E00007F0000FE00007F0000FC00007E0000FC0000
7E0000FC00007E0000FC00007E0003FE0001FF007FFFF03FFFF8FFFFF07FFFF8FFFFF07F
FFF82D287EA732>I<00001FE0000000FFF8000003E03E00000F800F80001E0007C0007C
0003E000F80001E001F00001F003E00001F003E00000F807C00000F80FC00000FC0F8000
00FC1F800000FC3F800000FC3F000000FC3F000000FE7F000000FE7F000000FE7F000000
FCFE000001FCFE000001FCFE000001FCFE000001FCFE000001FCFE000003F8FE000003F8
FE000003F0FE000003F0FE000007E07E000007E07E00000FC07E00000FC03E00001F803F
00003F001F00003E000F80007C0007C001F80003E003E00001F81F8000007FFE0000000F
F00000272A7AA82D>I<0000FE01FC0000003FFE0FFF8000007FFC3E07E000007FFCF001
F8000001FDC000FC000001FF80007E000000FF00007E000001FE00003F000001FC00003F
800001F800001F800001F800001FC00001F800001FC00001F800001FC00003F800000FC0
0003F000000FC00003F000000FE00003F000000FE00003F000000FE00003F000001FE000
07F000001FC00007E000001FC00007E000001FC00007E000001FC00007E000003FC00007
E000003F80000FE000003F80000FC000007F80000FC000007F00000FC00000FF00000FC0
0000FE00000FC00001FC00001FC00001FC00001FC00003F800001FE00007F000001FE000
0FE000001FF0001FC000001FB8003F0000003F9C00FE0000003F0F03F80000003F07FFE0
0000003F00FE000000003F0000000000007F0000000000007F0000000000007E00000000
00007E0000000000007E0000000000007E000000000000FE000000000000FE0000000000
00FC000000000000FC000000000000FC000000000000FC000000000003FE00000000007F
FFF000000000FFFFF000000000FFFFF000000000333A81A732>I<00000FE001C00000FF
F801800003F81E0380000FC0070380001F80038780007F0001CF8000FC0000CF8001FC00
00FF0003F800007F0007F000007F000FE000007F000FE000007F001FC000007F003FC000
007F003F8000007E003F8000007E007F0000007E007F0000007E007F000000FE00FF0000
00FE00FE000000FC00FE000000FC00FE000000FC00FE000000FC00FE000001FC00FE0000
01FC00FE000001F800FE000001F800FE000001F8007E000003F8007F000003F8007F0000
07F8003F00000FF0003F80000FF0001F80001FF0000FC0003BF00007E000F7F00003F001
C7F00000FC0F87E000003FFE07E000000FF007E00000000007E0000000000FE000000000
0FC0000000000FC0000000000FC0000000000FC0000000000FC0000000001FC000000000
1F80000000001F80000000001F80000000001F80000000003F80000000007FC00000001F
FFFE0000001FFFFE0000001FFFFE002A3A7AA730>I<0007E03F0001FFE0FFC001FFC3C3
E003FFC70FF0001FCE0FF0000FCC0FF0000FDC0FF0000FF80FE0000FB00FC0000FF00300
000FE00000000FE00000000FC00000001FC00000001FC00000001F800000001F80000000
1F800000001F800000003F800000003F000000003F000000003F000000003F000000003F
000000007F000000007E000000007E000000007E000000007E000000007E00000000FE00
000000FC00000000FC00000000FC00000000FC00000003FE0000007FFFFC00007FFFFC00
00FFFFFC000024287EA723>I<0000FF80C00007FFE3C0001F007FC0007C001F8000F000
0F8001E000078001C000078003C000078003C00003800780000300078000030007C00003
0007C000030007E000030007F000000007FC00000003FFE0000003FFFE000001FFFF8000
00FFFFE000003FFFF000000FFFF8000000FFFC00000007FC00000001FE00180000FE0038
00007E003800003E003800003E003800001E003800001E003800003E007800003C007C00
003C007C000078007E000078007E0000F0007F0001E000FB8003C000F1E01F0000E07FFC
0000C01FE00000222A7DA824>I<00030000000300000003000000030000000700000006
000000060000000E0000000E0000001E0000001E0000003C0000003C0000007C000000FC
000001FC000007FC00001FFFFFC0FFFFFFC0FFFFFFC001F8000001F8000001F8000003F8
000003F0000003F0000003F0000003F0000003F0000007F0000007E0000007E0000007E0
000007E0000007E000000FE000000FC000000FC000000FC000000FC000000FC003001FC0
06001F8006001F8006001F8006001F8006001F800E001F800C001F000C001F801C001F80
18001F8038000F8030000FC0700007E1E00001FF8000007E00001A3978B723>I<01FC00
00FE7FFC003FFEFFF8007FFCFFF8007FFC07F80003FC03F80001FC03F80001FC03F80001
FC03F00001F803F00001F803F00001F803F00001F803F00003F807F00003F807E00003F0
07E00003F007E00003F007E00003F007E00007F00FE00007F00FC00007E00FC00007E00F
C00007E00FC00007E00FC0000FE01FC0000FE01F80000FC01F80000FC01F80001FC01F80
001FC01F80001FC01F80003FC01F00007F801F00007F801F0000FF801F8001DF800F8003
BFC00FC0073FFE07E01E3FFE01FFF83FFE003FE03F00272978A732>I<FFFFC003FFF0FF
FFC003FFF0FFFFC007FFE007FC0001FF0003F80000FC0003F80000780003F80000700001
F80000E00001F80000C00001F80000C00001FC0001800000FC0003800000FC0003000000
FC0006000000FC00060000007E000C0000007E000C0000007E00180000007E0038000000
7F00300000003F00600000003F00600000003F00C00000003F80C00000001F8180000000
1F83800000001F83000000001FC7000000000FC6000000000FCC000000000FCC00000000
0FD8000000000FF80000000007F00000000007F00000000007E00000000007C000000000
03C00000000003800000000003800000002C2878A630>I<01FFFF803FFFC001FFFF803F
FFC001FFFF003FFFC0000FFC001FF8000003F8000FE0000003F8000F80000001F8000E00
000000FC001C00000000FE0038000000007E0070000000007F00E0000000003F01C00000
00001F8380000000001FC300000000000FC600000000000FEC000000000007F800000000
0003F0000000000003F8000000000001F8000000000001FC000000000003FC0000000000
067E00000000000C7F0000000000183F0000000000303F8000000000701F8000000000E0
0FC000000001C00FE0000000038007E0000000070007F00000000E0003F00000001C0001
F80000007C0001FC000001FC0001FC000007FE0003FF0000FFFF000FFFF800FFFF001FFF
F800FFFF001FFFF80032277FA630>120 D<00001C000000003E000000007F000000007F
000000007F800000003FC00000001FE000000007F000000003F000000001F8000000007C
000000003E000000000E00000000040000000000000000000000000000000000003FC000
0001FFF0000007C0FC00001F803E00003E001F0000FC000F8001F8000FC001F00007C003
F00007C007E00007E00FE00007E00FC00003E01FC00003E01F800003E03F800003E03F80
0007E07F000007E07F000007E07FFFFFFFE07FFFFFFFE0FF00000000FE00000000FE0000
0000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE000000
007E000001807E000003807E000003003F000007003F00000E001F80001C000F80003800
07C000700003E001E00001F80F8000007FFE0000000FF00000233B7AB928>232
D<00000038000000007C00000000FE00000001FC00000003FC00000007F80000001FE000
00003F800000007F00000000FC00000001F000000003C000000007000000000000000000
000000000000000000000000000000003FC0000001FFF0000007C0FC00001F803E00003E
001F0000FC000F8001F8000FC001F00007C003F00007C007E00007E00FE00007E00FC000
03E01FC00003E01F800003E03F800003E03F800007E07F000007E07F000007E07FFFFFFF
E07FFFFFFFE0FF00000000FE00000000FE00000000FE00000000FE00000000FE00000000
FE00000000FE00000000FE00000000FE000000007E000001807E000003807E000003003F
000007003F00000E001F80001C000F8000380007C000700003E001E00001F80F8000007F
FE0000000FF00000233B7AB928>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg ecbi1095 10.95 21
/Fg 21 234 df<00F803FC07FE0FFF1FFF1FFF1FFF3FFF3FFF1FFF1FFF0FFF07CE000E00
1E001C003C0038007800F000F001E003C0078007800F003E007C00F800E000C000101F78
8C20>44 D<000000000007C00000000000000FC00000000000001FC00000000000001FE0
0000000000003FE00000000000003FE00000000000007FE0000000000000FFE000000000
0000FFE0000000000001FFE0000000000003FFE0000000000003FFE0000000000007FFE0
000000000007FFF000000000000FFFF000000000001FFFF000000000001FFFF000000000
003FFFF000000000003EFFF000000000007CFFF00000000000FCFFF00000000000F8FFF0
0000000001F8FFF80000000001F0FFF80000000003E0FFF80000000007E07FF800000000
07C07FF8000000000FC07FF8000000000F807FF8000000001F007FF8000000003F007FF8
000000003E007FF8000000007C007FFC000000007C007FFC00000000F8003FFC00000001
F8003FFC00000001F0003FFC00000003E0003FFC00000003E0003FFC00000007C0003FFC
0000000FC0003FFC0000000F80003FFC0000001F00003FFE0000001FFFFFFFFE0000003F
FFFFFFFE0000007FFFFFFFFE0000007FFFFFFFFE000000F800001FFE000000F800001FFE
000001F000001FFE000003F000001FFE000003E000001FFF000007C000001FFF00000FC0
00000FFF00000F8000000FFF00001F8000000FFF00001F0000000FFF00003E0000000FFF
00007E0000000FFF0003FF0000000FFF00FFFFF8000FFFFFFFFFFFFC001FFFFFFFFFFFFC
001FFFFFFFFFFFF8000FFFFFFF404079BF4E>65 D<0001FFFFFFFFFE00000001FFFFFFFF
FFE0000003FFFFFFFFFFF8000001FFFFFFFFFFFE00000001FFF0003FFF00000001FFE000
07FF80000001FFE00003FFC0000003FFE00001FFC0000003FFE00001FFE0000003FFC000
01FFE0000003FFC00001FFE0000007FFC00001FFF0000007FFC00001FFF0000007FF8000
01FFF0000007FF800001FFF000000FFF800001FFF000000FFF800003FFE000000FFF0000
03FFE000000FFF000003FFE000001FFF000003FFC000001FFF000007FFC000001FFE0000
07FFC000001FFE000007FF8000003FFE00000FFF0000003FFE00000FFF0000003FFC0000
1FFE0000003FFC00001FFC0000007FFC00003FF80000007FFC0000FFF00000007FF80001
FFE00000007FF8000FFF80000000FFFFFFFFFE00000000FFFFFFFFF800000000FFFFFFFF
8000000000FFF000000000000000FFF000000000000001FFF000000000000001FFE00000
0000000001FFE000000000000001FFE000000000000003FFE000000000000003FFC00000
0000000003FFC000000000000003FFC000000000000007FFC000000000000007FF800000
0000000007FF8000000000000007FF800000000000000FFF800000000000000FFF000000
000000000FFF000000000000000FFF000000000000001FFF000000000000001FFE000000
000000001FFE000000000000001FFE000000000000003FFE000000000000003FFC000000
0000007FFFFFFE0000000000FFFFFFFE0000000000FFFFFFFE0000000000FFFFFFFC0000
000000443E7ABD47>80 D<00000FF0000000007FFC00000001FFFF1E000007FC1FFF0000
1FF00FFF80003FE007FF80007FC003FF8000FF8003FF0001FF0001FF0003FF0001FF0007
FE0003FF0007FE0003FE000FFE0003FE000FFC0003FE001FFC0007FE001FFC0007FC003F
F80007FC003FF80007FC003FF8000FFC007FF8000FF8007FF0000FF8007FF0000FF8007F
F0001FF800FFF0001FF000FFE0001FF000FFE0001FF000FFE0003FF000FFE0003FE0F8FF
C0003FE0F8FFC0003FE0F8FFC0007FE0F8FFC0007FE1F07FC0007FC1F07FC000FFC1F07F
C001FFC3E03FC003FFC3E03FE007FFC3E01FE00FFFC7C00FF03F1FCF8003FFFE0FFF8000
FFF803FE00003FC000FC002D2A77A835>97 D<000003FE0000003FFF800000FFFFE00003
FF03F0000FF801F8001FF000F8007FE003FC00FFC007FC01FF800FFC01FF000FFC03FF00
0FFC07FE000FF80FFE000FF80FFC000FF01FFC0007C01FFC0000003FF80000003FF80000
003FF80000007FF80000007FF00000007FF00000007FF0000000FFF0000000FFE0000000
FFE0000000FFE0000000FFE0000000FFC0000000FFC00000007FC00000307FC00000787F
C00000FC7FC00001FC3FE00003F83FE00007F01FF0001FE00FF8007FC007FC03FF0001FF
FFFC00007FFFE000000FFE0000262A77A830>99 D<0000000001FE00000000FFFE000000
00FFFE00000001FFFE00000000FFFE0000000007FE0000000007FC0000000007FC000000
000FFC000000000FFC000000000FF8000000000FF8000000001FF8000000001FF8000000
001FF0000000001FF0000000003FF0000000003FF0000000003FE0000000003FE0000000
007FE0000000007FE000000FF07FC000007FFC7FC00001FFFFFFC00007FC1FFFC0001FF0
0FFF80003FE007FF80007FC003FF8000FF8003FF8001FF0001FF0003FF0001FF0007FE00
03FF0007FE0003FF000FFE0003FE000FFC0003FE001FFC0007FE001FFC0007FE003FF800
07FC003FF80007FC003FF8000FFC007FF8000FFC007FF0000FF8007FF0000FF8007FF000
1FF800FFF0001FF800FFE0001FF000FFE0001FF000FFE0003FF000FFE0003FF0F8FFC000
3FE0F8FFC0003FE0F8FFC0007FE0F8FFC0007FE1F07FC0007FC1F07FC000FFC1F07FC001
FFC3E03FC003FFC3E03FE007FFC3E01FE00FFFC7C00FF03F1FCF8003FFFE0FFF8000FFF8
03FE00003FC000FC002F4077BE35>I<000003FE0000003FFF800001FFFFE00007FE07F0
000FF803F8003FF001F8007FC000FC00FFC000FC01FF8000FC03FF0000FC07FF0001FC07
FE0001F80FFE0001F81FFC0003F81FFC0007F01FFC001FE03FF8007FC03FF807FF803FFF
FFFE007FFFFFF0007FFFFE00007FF00000007FF00000007FF00000007FE0000000FFE000
0000FFE0000000FFE00000007FE00000007FC00000007FC00000307FC00000787FE00000
FC3FE00001FC3FE00003F81FE00007F00FF0001FE007F8007FC003FC03FF0001FFFFFC00
007FFFE000000FFE0000262A77A830>I<000000FF0000000007FFC00000001FFFF1E000
007FC1FFF00001FF00FFF80003FE007FF80007FC003FF8000FF8003FF8001FF0001FF000
3FF0001FF0007FE0003FF0007FE0003FF000FFE0003FE000FFC0003FE001FFC0007FE001
FFC0007FE003FF80007FC003FF80007FC003FF8000FFC007FF8000FFC007FF0000FF8007
FF0000FF8007FF0001FF800FFF0001FF800FFE0001FF000FFE0001FF000FFE0003FF000F
FE0003FF000FFC0003FE000FFC0003FE0007FC0007FE0007FC0007FE0007FC000FFC0007
FC000FFC0003FE001FFC0001FE003FFC0001FF00FFF80000FF83FFF800003FFFFFF80000
0FFF9FF8000003FC1FF0000000001FF0000000003FF0000000003FF0000000003FE00000
00003FE0000000007FE0000F00007FE0003FC0007FC0007FC000FFC0007FC000FF8000FF
C001FF8000FFC003FF0000FFC003FE0000FF8007FC0000FF001FF800007F807FE000003F
FFFF8000000FFFFE00000001FFE00000002D3C7BA830>103 D<0001FE00000000FFFE00
000000FFFE00000001FFFE00000000FFFE0000000007FE0000000007FC0000000007FC00
00000007FC000000000FFC000000000FF8000000000FF8000000000FF8000000001FF800
0000001FF0000000001FF0000000001FF0000000003FF0000000003FE0000000003FE000
0000003FE0000000007FE0000000007FC07FC000007FC3FFF000007FCFFFFC0000FFDF81
FE0000FFFE00FF0000FFF800FF0000FFF000FF8001FFE0007F8001FFC0007F8001FF8000
FF8001FF8000FF8003FF0000FF8003FE0000FF8003FE0000FF8003FE0001FF8007FE0001
FF8007FC0001FF0007FC0001FF0007FC0003FF000FFC0003FE000FF80003FE000FF80007
FE000FF80007FC001FF80007FC001FF0000FFC001FF0000FF8001FF0000FF8003FF0001F
F83E3FE0001FF03E3FE0001FF03E3FE0003FF07E7FE0003FE07C7FC0003FE07C7FC0003F
E0F87FC0003FC0F8FFC0003FC1F0FF80003FC1F0FF80003FC3E0FF80001FC7C0FF00000F
FF80FE000007FE003C000001F8002F4079BE35>I<00001E0000007F000000FF800001FF
800001FF800001FF800001FF800001FF000000FE00000078000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000000000003F000000FFC00003FFE00007C7F0000F87F8001F07F8001F07F8003E07F8
003E0FF8007C0FF8007C0FF800FC1FF800F81FF000F81FF000F83FF000003FE000007FE0
00007FE000007FC00000FFC00000FF800000FF800001FF800001FF000003FF000003FF00
0003FE000007FE0F8007FC0F8007FC0F800FFC1F800FF81F000FF81F000FF83E000FF03E
000FF07C000FF07C000FF0F80007F1F00003FFE00001FF8000007E0000194178BF20>I<
00FC0003FE0000FF000003FF001FFF8007FFC00007FFC07FFFE01FFFF0000F8FE0FC0FF0
7F07F8001F0FF3F007F8F803FC001F0FF7C007F9F003FE003E0FFF8007FFE003FE003E0F
FF0003FFC001FE007C0FFE0003FF8001FE007C0FFC0007FF0003FE007C0FFC0007FF0003
FE00FC1FF80007FE0003FE00F81FF00007FC0003FE00F81FF00007FC0003FE00F81FF000
0FFC0007FE00003FF0000FFC0007FE00003FE0000FF80007FC00003FE0000FF80007FC00
003FE0001FF8000FFC00007FE0001FF8000FF800007FC0001FF0000FF800007FC0001FF0
001FF800007FC0003FF0001FF00000FFC0003FF0001FF00000FF80003FE0003FF00000FF
80003FE0003FE00000FF80007FE0003FE00001FF80007FE0007FE07C01FF00007FC0007F
C07C01FF00007FC0007FC07C01FF0000FFC000FFC0FC03FF0000FFC000FF80F803FE0000
FF8000FF80F803FE0000FF8000FF01F003FE0001FF8000FF01F007FE0001FF8000FF03E0
07FC0001FF0000FF07C007FC0001FF0000FF0FC007FC0001FF00007F1F8007F80001FE00
003FFE0007F00001FC00001FFC0001E0000078000003F0004E2A78A855>109
D<00FC0003FC000003FF001FFF000007FFC07FFFC0000F8FE1FC1FE0001F0FF3E00FF000
1F0FF7C00FF8003E0FFF800FF8003E0FFF0007F8007C0FFE0007F8007C0FFC000FF8007C
0FFC000FF800FC1FF8000FF800F81FF0000FF800F81FF0000FF800F81FF0001FF800003F
F0001FF800003FE0001FF000003FE0001FF000003FE0003FF000007FE0003FE000007FC0
003FE000007FC0007FE000007FC0007FC00000FFC0007FC00000FF8000FFC00000FF8000
FF800000FF8000FF800001FF8001FF81F001FF0001FF01F001FF0001FF01F001FF0003FF
03F003FF0003FE03E003FE0003FE03E003FE0003FC07C003FE0003FC07C007FE0003FC0F
8007FC0003FC1F0007FC0003FC3F0007FC0001FC7E0007F80000FFF80007F000007FF000
01E000000FC000342A78A83B>I<000003FF000000003FFFE0000000FFFFF8000003FE03
FE00000FF801FF00001FF000FF80007FE0007FC000FFC0007FC001FF80003FE003FF0000
3FE003FF00003FE007FE00003FF00FFE00003FF00FFC00003FF01FFC00007FF01FFC0000
7FF03FF800007FF03FF800007FF03FF80000FFF07FF80000FFE07FF00000FFE07FF00000
FFE07FF00001FFE0FFF00001FFC0FFE00001FFC0FFE00001FFC0FFE00003FF80FFE00003
FF80FFC00003FF00FFC00007FF00FFC00007FE007FC0000FFC007FC0000FFC007FC0001F
F8003FE0003FF0003FE0007FE0001FF000FF80000FF801FF000007FC07FC000001FFFFF0
0000007FFFC00000000FFC0000002C2A77A835>I<00000FF0038000007FFC0FC00001FF
FF3FC00007FC1FFFC0001FF00FFF80003FE007FF80007FC003FF8000FF8003FF8001FF00
01FF0003FF0001FF0007FE0001FF0007FE0003FF000FFE0003FE000FFC0003FE001FFC00
03FE001FFC0007FE003FF80007FC003FF80007FC003FF80007FC007FF8000FFC007FF000
0FF8007FF0000FF8007FF0000FF800FFF0001FF800FFE0001FF000FFE0001FF000FFE000
1FF000FFE0003FF000FFC0003FE000FFC0003FE000FFC0003FE000FFC0007FE0007FC000
7FC0007FC000FFC0007FC001FFC0003FC003FFC0003FE007FF80001FE00FFF80000FF03F
FF800003FFFFFF800000FFF9FF0000003FC1FF0000000001FF0000000003FF0000000003
FE0000000003FE0000000003FE0000000007FE0000000007FC0000000007FC0000000007
FC000000000FFC000000000FF8000000000FF8000000001FF800000007FFFFC0000007FF
FFE000000FFFFFC0000007FFFFC0002A3B77A830>113 D<01F8001FE00003FE00FFF800
0FFF83FFFE000F9FC7E07F001F1FFF801F803E1FFF007F803E1FFE00FF803E1FFC01FF80
7C1FF801FF807C1FF801FF807C1FF001FF80F83FF001FF00F83FE001FE00F83FE0007800
F83FE0000000007FE0000000007FC0000000007FC0000000007FC000000000FFC0000000
00FF8000000000FF8000000000FF8000000001FF8000000001FF0000000001FF00000000
01FF0000000003FF0000000003FE0000000003FE0000000003FE0000000007FE00000000
07FC0000000007FC0000000007FC000000000FFC000000000FF8000000000FF800000000
0FF8000000000FF0000000000FE00000000003C000000000292A78A82D>I<00003FE000
0001FFFC000007FFFE00000FE03F00001F801F80003F000FC0007E001FC0007E003FC000
FC007FC000FC007FC000FC007FC001FC007F8001FC007F8001FE003E0001FF00000001FF
F0000001FFFF000000FFFFC00000FFFFF000007FFFF800003FFFFC00001FFFFC000007FF
FE000000FFFE00000007FE00000003FE000F0001FE003FC000FE007FE000FE007FE0007E
00FFE000FE00FFC000FC00FFC000FC00FFC001F800FF0001F8007E0003F0007E0007E000
3F000FC0001FC03F80000FFFFF000003FFF80000007FC00000222A78A82B>I<00003C00
0000FE000001FF000001FF000001FF000003FF000003FE000003FE000003FE000007FE00
0007FC000007FC000007FC00000FFC00000FF800000FF800000FF800001FF800001FF000
7FFFFFF07FFFFFF8FFFFFFF87FFFFFF0003FE000003FE000007FE000007FC000007FC000
007FC00000FFC00000FF800000FF800000FF800001FF800001FF000001FF000001FF0000
03FF000003FE000003FE000003FE000007FE000007FC000007FC000007FC00000FFC01F0
0FF801F00FF803F00FF803E01FF803E01FF007C01FF00FC01FF00F801FF01F000FF03F00
0FF07E0007F0FC0003FFF00000FFC000003F00001D3C78BA23>I<003F000000000000FF
C00001E00003FFE00007F80007C7F00007F8000F87F8000FF8001F07F8000FF8001F07F8
001FF8003E07F8001FF8003E0FF8001FF0007C0FF8001FF0007C0FF8003FF000FC1FF800
3FF000F81FF0003FE000F81FF0003FE000F83FF0007FE000003FE0007FE000003FE0007F
C000007FE0007FC000007FC000FFC000007FC000FFC00000FFC000FF800000FF8000FF80
0000FF8001FF800001FF8001FF800001FF0001FF000001FF0001FF000001FF0003FF0000
03FF0003FF0F8003FE0003FE0F8003FE0003FE0F8003FE0007FE0F8003FE0007FE1F0003
FE0007FC1F0003FE000FFC1F0001FE000FFC3F0001FE001FFC3E0001FF003FFC3E0000FF
007FFC7C00007F81F9FCF800003FFFE0FFF800000FFF803FE0000001FE000FC000312A78
A838>I<003E0000000000FFC00001E003FFE00007F807C7F00007F80F87F8000FF81F07
F8000FF81F07F8001FF83E07F8001FF03E07F8001FF07C0FF8001FF07C0FF8003FF0FC1F
F8003FE0F81FF0003FE0F81FF0003FE0F83FF0007FE0003FE0007FC0003FE0007FC0007F
E0007FC0007FC000FFC0007FC000FF8000FFC000FF8000FF8000FF8000FF8001FF8001FF
8001FF0001FF0001FF0001FF0001FF0001FF0003FF0003FF0003FE0003FE0003FE0003FE
0003FE0003FE0007FE0003FE0007FC0003FE0007FC0003FE000FFC0001FE000FFC0001FE
001FF80001FF003FF80000FF007FF800007F81FFF800003FFFFFF000000FFF9FF0000001
FE1FF0000000003FF0000000003FE0000000003FE00003C0007FE0000FE0007FC0001FF0
00FF80003FF000FF80003FF001FF00003FF001FE00003FE003FC00003FE007F800003FC0
0FF000003F001FE000003F003FC000001FC0FF0000000FFFFC00000003FFF0000000007F
800000002D3C78A833>121 D<00003C000000007E00000000FF00000001FF80000001FF
C0000001FFC0000001FFE0000001FFF0000000FFF80000003FFC0000000FFE00000003FE
00000001FE000000007C0000000018000000000000000000000000000000000000000000
0000000000000003FE0000003FFF800001FFFFE00007FE07F0000FF803F8003FF001F800
7FC000FC00FFC000FC01FF8000FC03FF0000FC07FF0001FC07FE0001F80FFE0001F81FFC
0003F81FFC0007F01FFC001FE03FF8007FC03FF807FF803FFFFFFE007FFFFFF0007FFFFE
00007FF00000007FF00000007FF00000007FE0000000FFE0000000FFE0000000FFE00000
007FE00000007FC00000007FC00000307FC00000787FE00000FC3FE00001FC3FE00003F8
1FE00007F00FF0001FE007F8007FC003FC03FF0001FFFFFC00007FFFE000000FFE000026
3E77BC30>232 D<000000000700000000001F80000000003FC000000000FFC000000001
FFC000000003FFC00000000FFFC00000001FFF800000003FFF00000000FFFC00000001FF
E000000003FF8000000003FE0000000001F00000000000C0000000000000000000000000
0000000000000000000000000000000000000000000003FE000000003FFF80000001FFFF
E0000007FE07F000000FF803F800003FF001F800007FC000FC0000FFC000FC0001FF8000
FC0003FF0000FC0007FF0001FC0007FE0001F8000FFE0001F8001FFC0003F8001FFC0007
F0001FFC001FE0003FF8007FC0003FF807FF80003FFFFFFE00007FFFFFF000007FFFFE00
00007FF0000000007FF0000000007FF0000000007FE000000000FFE000000000FFE00000
0000FFE0000000007FE0000000007FC0000000007FC0000030007FC0000078007FE00000
FC003FE00001FC003FE00003F8001FE00007F0000FF0001FE00007F8007FC00003FC03FF
000001FFFFFC0000007FFFE00000000FFE0000002A3E77BC30>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh ecsx1200 12 28
/Fh 28 234 df<00003FE001FF000001FFFC03FF800007FFFC07FFC0000FFFFC07FFC000
1FFFFC07FFC0003FFFFC07FFC0007FF87C07FFC0007FF01C07FFC000FFF01C07FFC000FF
E00C07FFC000FFE00003FF8001FFE00001FF0001FFE00000000001FFE00000000001FFE0
0000000001FFE00000000001FFE00000000001FFE00000000001FFE00000000001FFE000
00000001FFE00000000001FFE00000000001FFE00000000001FFE00000000001FFE00000
000001FFE00000000001FFE00000000001FFE0000000003FFFFFF801FF807FFFFFFC03FF
C0FFFFFFFC03FFC0FFFFFFFC03FFC0FFFFFFFC03FFC07FFFFFF803FFC001FFE00003FFC0
01FFE00003FFC001FFE00003FFC001FFE00003FFC001FFE00003FFC001FFE00003FFC001
FFE00003FFC001FFE00003FFC001FFE00003FFC001FFE00003FFC001FFE00003FFC001FF
E00003FFC001FFE00003FFC001FFE00003FFC001FFE00003FFC001FFE00003FFC001FFE0
0003FFC001FFE00003FFC001FFE00003FFC001FFE00003FFC001FFE00003FFC001FFE000
03FFC001FFE00003FFC001FFE00003FFC001FFE00003FFC001FFE00003FFC001FFE00003
FFC001FFE00003FFC001FFE00003FFC001FFE00003FFC001FFE00003FFC001FFE00003FF
C001FFE00003FFC001FFE00003FFC001FFE00003FFC001FFE00003FFC001FFE00003FFC0
01FFE00003FFC000FFE00003FFC0007FC00001FF80324A7EC93C>28
D<FFE0FFE0FFE0FFE0FFE0FFE0FFE0FFE0FFE0FFE0FFE01FE01FC01FC03F803F803F007F
007E007E00FC00FC00F8000B1776C81F>39 D<FFE0FFE0FFE0FFE0FFE0FFE0FFE0FFE0FF
E0FFE0FFE00B0B768A1F>46 D<00000F800000001FC00000003FC0000000FFC0000003FF
C000001FFFC0003FFFFFC0007FFFFFC000FFFFFFC000FFFFFFC000FFFFFFC0007FF3FFC0
002003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC000
0003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC00000
03FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003
FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FF
C0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0
000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC000
0003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0003FFFFFFFF87F
FFFFFFFCFFFFFFFFFCFFFFFFFFFC7FFFFFFFFC3FFFFFFFF8264377C238>49
D<0000FFC00000000FFFFC0000003FFFFF800000FFFFFFE00001FFFFFFF00003FFFFFFFC
0007FFFFFFFE000FFFFFFFFF001FFFFFFFFF803FFF00FFFFC03FFC003FFFC07FF0000FFF
E07FE00007FFE0FFC00003FFF0FFC00001FFF0FF800001FFF07F800000FFF83F000000FF
F81F000000FFF81F000000FFF80E0000007FF8060000007FF8000000007FF800000000FF
F800000000FFF800000000FFF800000000FFF000000001FFF000000001FFF000000003FF
E000000003FFC000000007FFC000000007FF800000000FFF000000001FFE000000003FFC
000000007FF800000000FFF000000001FFE000000003FFC000000007FF800000000FFE00
0000001FFC000000003FF8000000007FE000000000FFC000000001FF8000000003FF0000
000007FE000000000FF8000000001FF0000000003FE000000000FFC000000001FF800000
0003FE0000000007FC000000000FF8000000001FF0000000003FFFFFFFFFF07FFFFFFFFF
F8FFFFFFFFFFF8FFFFFFFFFFF8FFFFFFFFFFF8FFFFFFFFFFF8FFFFFFFFFFF87FFFFFFFFF
F83FFFFFFFFFF02D437BC238>I<0000FFF000000007FFFF0000003FFFFFC00000FFFFFF
F00001FFFFFFF80007FFFFFFFC000FFFFFFFFE001FFFFFFFFF003FFF803FFF007FFC001F
FF807FF0000FFF803FE00007FFC01FC00007FFC01F800007FFC00F000003FFC006000003
FFC000000003FFC000000003FFC000000007FFC000000007FFC000000007FFC00000000F
FF800000000FFF800000001FFF000000001FFF000000003FFE000000007FFC00000000FF
F80000000FFFF0000007FFFFE0000007FFFF80000007FFFE00000007FFFF80000007FFFF
F0000007FFFFFC000000003FFF000000000FFF8000000007FFC000000003FFC000000003
FFE000000001FFF000000001FFF000000000FFF000000000FFF800000000FFF800000000
FFF800000000FFF800000000FFF800000000FFF800000000FFF800000000FFF800000000
FFF800000000FFF860000001FFF870000001FFF07C000001FFF07E000003FFF0FF800007
FFE0FFF0000FFFE0FFFF003FFFC0FFFFFFFFFFC0FFFFFFFFFF807FFFFFFFFF001FFFFFFF
FE0007FFFFFFFC0001FFFFFFF000007FFFFFC000001FFFFF00000000FFF000002D457BC2
38>I<00000007FFFC0000000000FFFFFFF000000007FFFFFFFE0000003FFFFFFFFFC000
00FFFFFFFFFFC00003FFFFFFFFFFC00007FFFFFFFFFFC0001FFFFFFFFFFF80003FFFFFFF
FFFF80007FFFFE001FFF8000FFFFE00001FF8001FFFF8000003F8003FFFE0000001F8003
FFFC000000070007FFF000000001000FFFE000000000000FFFE000000000001FFFC00000
0000001FFF8000000000001FFF8000000000003FFF0000000000003FFF0000000000003F
FE0000000000007FFE0000000000007FFE0000000000007FFC0000000000007FFC000000
0000007FFC000000000000FFFC000000000000FFF8000000000000FFF8000000000000FF
F8000000000000FFF8000000000000FFF8000000000000FFF8000000000000FFF8000000
000000FFF8000000000000FFF8000000000000FFF8000000000000FFF8000000000000FF
F8000000000000FFF8000000000000FFF8000000000000FFF8000000000000FFFC000000
0000007FFC0000000000007FFC0000000000007FFC0000000000007FFE0000000000007F
FE0000000000003FFE0000000000003FFF0000000000003FFF0000000000001FFF800000
0000001FFF8000000000001FFFC000000000000FFFE000000000000FFFE000000000C007
FFF000000001C003FFFC00000007C003FFFE0000000FC001FFFF8000003FC000FFFFE000
00FFE0007FFFFE000FFFE0003FFFFFFFFFFFE0001FFFFFFFFFFFE00007FFFFFFFFFFE000
03FFFFFFFFFF800000FFFFFFFFFF0000003FFFFFFFFC00000007FFFFFFF000000000FFFF
FF800000000007FFF800003B497AC648>67 D<3FFFFFFFFE000000007FFFFFFFFFF00000
00FFFFFFFFFFFE000000FFFFFFFFFFFF800000FFFFFFFFFFFFE00000FFFFFFFFFFFFF800
00FFFFFFFFFFFFFC0000FFFFFFFFFFFFFE0000FFF800001FFFFF0000FFF8000001FFFF80
00FFF80000007FFFC000FFF80000001FFFE000FFF800000007FFE000FFF800000003FFF0
00FFF800000001FFF800FFF800000000FFF800FFF800000000FFFC00FFF8000000007FFC
00FFF8000000007FFC00FFF8000000003FFE00FFF8000000003FFE00FFF8000000001FFE
00FFF8000000001FFF00FFF8000000001FFF00FFF8000000001FFF00FFF8000000000FFF
00FFF8000000000FFF00FFF8000000000FFF80FFF8000000000FFF80FFF8000000000FFF
80FFF8000000000FFF80FFF8000000000FFF80FFF8000000000FFF80FFF8000000000FFF
80FFF8000000000FFF80FFF8000000000FFF80FFF8000000000FFF80FFF8000000000FFF
80FFF8000000000FFF80FFF8000000000FFF80FFF8000000000FFF80FFF8000000000FFF
80FFF8000000000FFF80FFF8000000000FFF00FFF8000000000FFF00FFF8000000001FFF
00FFF8000000001FFF00FFF8000000001FFF00FFF8000000003FFE00FFF8000000003FFE
00FFF8000000003FFE00FFF8000000007FFC00FFF8000000007FFC00FFF800000000FFF8
00FFF800000001FFF800FFF800000003FFF000FFF800000007FFF000FFF80000001FFFE0
00FFF80000003FFFC000FFF8000001FFFF8000FFF800001FFFFF8000FFFFFFFFFFFFFE00
00FFFFFFFFFFFFFC0000FFFFFFFFFFFFF80000FFFFFFFFFFFFE00000FFFFFFFFFFFF8000
00FFFFFFFFFFFE0000007FFFFFFFFFF00000003FFFFFFFFE00000000414577C451>I<3F
FFFFFFF800007FFFFFFFFF8000FFFFFFFFFFF000FFFFFFFFFFFC00FFFFFFFFFFFF00FFFF
FFFFFFFF80FFFFFFFFFFFFC0FFFFFFFFFFFFE0FFF800007FFFF0FFF8000007FFF0FFF800
0003FFF8FFF8000000FFF8FFF80000007FFCFFF80000007FFCFFF80000003FFCFFF80000
003FFCFFF80000003FFEFFF80000003FFEFFF80000001FFEFFF80000001FFEFFF8000000
1FFEFFF80000001FFEFFF80000001FFEFFF80000001FFEFFF80000003FFEFFF80000003F
FEFFF80000003FFCFFF80000003FFCFFF80000007FFCFFF80000007FF8FFF8000000FFF8
FFF8000003FFF0FFF8000007FFF0FFF800007FFFE0FFFFFFFFFFFFC0FFFFFFFFFFFF80FF
FFFFFFFFFF00FFFFFFFFFFFC00FFFFFFFFFFF000FFFFFFFFFFC000FFFFFFFFF80000FFF8
0000000000FFF80000000000FFF80000000000FFF80000000000FFF80000000000FFF800
00000000FFF80000000000FFF80000000000FFF80000000000FFF80000000000FFF80000
000000FFF80000000000FFF80000000000FFF80000000000FFF80000000000FFF8000000
0000FFF80000000000FFF80000000000FFF80000000000FFF80000000000FFF800000000
00FFF80000000000FFF80000000000FFF80000000000FFF80000000000FFF80000000000
7FF800000000003FF00000000000374577C447>80 D<00007FF800000007FFFF8000003F
FFFFE00000FFFFFFF80003FFFFFFFC000FFFFFFFFE000FFF801FFF000FFC000FFF800FF0
0007FF800FE00007FFC007C00003FFC007800003FFC007000003FFC006000001FFE00000
0001FFE000000001FFE000000001FFE000000001FFE000000001FFE000000001FFE00000
0001FFE000000001FFE000000003FFE000003FFFFFE00007FFFFFFE0003FFFFFFFE001FF
FFFFFFE007FFFFFFFFE00FFFFE01FFE01FFFE001FFE03FFF0001FFE07FFE0001FFE07FFC
0001FFE0FFF80001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF8
0003FFE0FFF80003FFE07FFC0007FFE07FFE001FFFE03FFF80FFFFE03FFFFFFFFFE01FFF
FFFFFFE00FFFFFFDFFE003FFFFF1FFE000FFFF80FFC0003FF80000002B317DAF36>97
D<00003FFC00000003FFFFC000001FFFFFF000007FFFFFFC0000FFFFFFFE0001FFFFFFFF
8003FFF007FF8007FFC000FF800FFF00003F801FFE00001F001FFE00000F003FFC000007
003FFC000003003FF8000000007FF8000000007FF8000000007FF8000000007FF0000000
00FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF0000000
00FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF0000000
00FFF000000000FFF0000000007FF8000000007FF8000000007FF8000000007FF8000000
003FFC000000003FFC000001801FFE000003801FFE00000F800FFF00001F8007FFC000FF
C007FFF007FFC003FFFFFFFFC000FFFFFFFFC0007FFFFFFF00001FFFFFFC000003FFFFE0
0000007FFC00002A317CAF32>99 D<000000001FF8000000003FFC000000003FFC000000
003FFC000000003FFC000000003FFC000000003FFC000000003FFC000000003FFC000000
003FFC000000003FFC000000003FFC000000003FFC000000003FFC000000003FFC000000
003FFC000000003FFC000000003FFC000000003FFC000000003FFC000000003FFC000000
003FFC000000003FFC000000003FFC000000003FFC000000003FFC0000FFC03FFC0007FF
F83FFC003FFFFE3FFC00FFFFFFBFFC01FFFFFFFFFC03FFFFFFFFFC07FFF00FFFFC0FFFC0
03FFFC1FFF0000FFFC1FFE00007FFC3FFE00007FFC3FFC00003FFC3FFC00003FFC7FF800
003FFC7FF800003FFC7FF800003FFC7FF000003FFCFFF000003FFCFFF000003FFCFFF000
003FFCFFF000003FFCFFF000003FFCFFF000003FFCFFF000003FFCFFF000003FFCFFF000
003FFCFFF000003FFCFFF000003FFCFFF000003FFCFFF000003FFCFFF000003FFC7FF000
003FFC7FF800003FFC7FF800003FFC7FF800003FFC7FF800003FFC3FFC00007FFC3FFC00
00FFFC1FFE0000FFFC1FFF0001FFFC0FFF8007FFFC07FFF01FFFFC03FFFFFFFFFC01FFFF
FFBFFC00FFFFFF3FFC003FFFFC3FFC000FFFF01FF80001FF8000002E4A7CC83A>I<0000
7FF800000003FFFF0000001FFFFFC000003FFFFFF00000FFFFFFF80001FFFFFFFC0003FF
F01FFE0007FF8007FF000FFF0003FF000FFE0001FF801FFC0000FF801FFC0000FFC03FF8
0000FFC03FF800007FE07FF000007FE07FF000007FE07FF000007FE07FF000003FF0FFF0
00003FF0FFF000003FF0FFE000003FF0FFE000003FF0FFE000003FF0FFFFFFFFFFF0FFFF
FFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFE0FFF000000000FFF0
000000007FF0000000007FF0000000007FF0000000007FF8000000003FF8000000003FF8
000000001FFC000000C01FFE000001C00FFE000007C007FF00000FC007FFC0007FE003FF
F803FFE001FFFFFFFFE0007FFFFFFFE0003FFFFFFF80000FFFFFFE000003FFFFF0000000
3FFE00002C317DAF33>I<0001FFF0003F80000FFFFE03FF80003FFFFF9FFFC000FFFFFF
FFFFC003FFFFFFFFFFC007FFFFFFFFFFC007FFC07FFF80000FFF001FFE00000FFE000FFE
00001FFC0007FF00001FFC0007FF00003FF80003FF80003FF80003FF80003FF80003FF80
003FF80003FF80003FF80003FF80003FF80003FF80003FF80003FF80003FF80003FF8000
3FF80003FF80003FF80003FF80003FF80003FF80001FFC0007FF00001FFC0007FF00000F
FE000FFE00000FFF001FFE000007FFC07FFC000007FFFFFFFC000007FFFFFFF8000007FF
FFFFE000000FFFFFFF8000000FCFFFFE0000001F81FFF00000001F8000000000001F8000
000000001FC000000000001FC000000000001FE000000000001FF000000000001FFFFFFF
E000000FFFFFFFFE00000FFFFFFFFFC00007FFFFFFFFF00007FFFFFFFFF80007FFFFFFFF
FC000FFFFFFFFFFE003FFFFFFFFFFE003FFFFFFFFFFF007FF000003FFF007FC0000007FF
80FFC0000003FF80FF80000001FF80FF80000000FF80FF80000000FF80FF80000000FF80
FF80000000FF80FFC0000001FF80FFC0000001FF807FE0000003FF007FF0000007FF003F
FC00001FFE003FFF8000FFFE001FFFFFFFFFFC0007FFFFFFFFF00003FFFFFFFFE00000FF
FFFFFF8000001FFFFFFC00000001FFFFC0000032447DAE38>103
D<3FE0000000007FF000000000FFF000000000FFF000000000FFF000000000FFF0000000
00FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF0000000
00FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF0000000
00FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF0000000
00FFF000000000FFF000000000FFF001FF8000FFF00FFFF000FFF03FFFFC00FFF0FFFFFE
00FFF1FFFFFF00FFF3FFFFFF80FFF7F80FFF80FFFFE007FFC0FFFFC003FFC0FFFF8003FF
C0FFFF0003FFE0FFFE0001FFE0FFFC0001FFE0FFFC0001FFE0FFFC0001FFE0FFF80001FF
E0FFF80001FFE0FFF80001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FF
E0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FF
E0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FF
E0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FF
E0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE07FF00001FF
E03FE00000FFC02B4979C83A>I<3FF07FF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8
FFF87FF000000000000000000000000000000000000000000000000000001FF03FF87FF8
7FF87FF87FF87FF87FF87FF87FF87FF87FF87FF87FF87FF87FF87FF87FF87FF87FF87FF8
7FF87FF87FF87FF87FF87FF87FF87FF87FF87FF87FF87FF87FF87FF87FF87FF87FF87FF8
7FF87FF87FF87FF87FF83FF81FF00D487AC71B>I<3FE07FF0FFF0FFF0FFF0FFF0FFF0FF
F0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FF
F0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FF
F0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FF
F0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF07FF03FE00C4979C81B>108
D<000001FF800003FF00003FE00FFFF0001FFFE0007FF03FFFFC007FFFF800FFF0FFFFFE
01FFFFFC00FFF1FFFFFF03FFFFFE00FFF3FFFFFF87FFFFFF00FFF7F80FFF8FF01FFF00FF
FFE007FFDFC00FFF80FFFFC003FFFF8007FF80FFFF8003FFFF0007FF80FFFF0003FFFE00
07FFC0FFFE0001FFFC0003FFC0FFFC0001FFF80003FFC0FFFC0001FFF80003FFC0FFFC00
01FFF80003FFC0FFF80001FFF00003FFC0FFF80001FFF00003FFC0FFF80001FFF00003FF
C0FFF00001FFE00003FFC0FFF00001FFE00003FFC0FFF00001FFE00003FFC0FFF00001FF
E00003FFC0FFF00001FFE00003FFC0FFF00001FFE00003FFC0FFF00001FFE00003FFC0FF
F00001FFE00003FFC0FFF00001FFE00003FFC0FFF00001FFE00003FFC0FFF00001FFE000
03FFC0FFF00001FFE00003FFC0FFF00001FFE00003FFC0FFF00001FFE00003FFC0FFF000
01FFE00003FFC0FFF00001FFE00003FFC0FFF00001FFE00003FFC0FFF00001FFE00003FF
C0FFF00001FFE00003FFC0FFF00001FFE00003FFC0FFF00001FFE00003FFC0FFF00001FF
E00003FFC0FFF00001FFE00003FFC0FFF00001FFE00003FFC0FFF00001FFE00003FFC0FF
F00001FFE00003FFC0FFF00001FFE00003FFC07FF00000FFE00001FFC03FE000007FC000
00FF804A2F79AE59>I<000001FF80003FE00FFFF0007FF03FFFFC00FFF0FFFFFE00FFF1
FFFFFF00FFF3FFFFFF80FFF7F80FFF80FFFFE007FFC0FFFFC003FFC0FFFF8003FFC0FFFF
0003FFE0FFFE0001FFE0FFFC0001FFE0FFFC0001FFE0FFFC0001FFE0FFF80001FFE0FFF8
0001FFE0FFF80001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF0
0001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF0
0001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF0
0001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF0
0001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE07FF00001FFE03FE0
0000FFC02B2F79AE3A>I<00003FFE0000000003FFFFE00000000FFFFFF80000003FFFFF
FE000000FFFFFFFF800001FFFFFFFFC00003FFF007FFE00007FFC001FFF0000FFF00007F
F8000FFE00003FF8001FFC00001FFC001FFC00001FFC003FF800000FFE003FF800000FFE
007FF800000FFF007FF800000FFF007FF0000007FF007FF0000007FF007FF0000007FF00
FFF0000007FF80FFF0000007FF80FFF0000007FF80FFF0000007FF80FFF0000007FF80FF
F0000007FF80FFF0000007FF80FFF0000007FF80FFF0000007FF80FFF0000007FF80FFF0
000007FF80FFF0000007FF80FFF0000007FF807FF0000007FF007FF800000FFF007FF800
000FFF007FF800000FFF003FFC00001FFE003FFC00001FFE001FFE00003FFC001FFE0000
3FFC000FFF00007FF80007FFC001FFF00003FFF007FFE00001FFFFFFFFC00000FFFFFFFF
8000007FFFFFFF0000001FFFFFFC00000003FFFFE0000000003FFE00000031317DAF38>
I<000007FE00003FE03FFFC0007FF0FFFFF000FFF3FFFFFC00FFFFFFFFFE00FFFFFFFFFF
80FFFFE03FFF80FFFF000FFFC0FFFE0007FFE0FFFC0003FFE0FFF80001FFF0FFF00000FF
F0FFF00000FFF8FFF00000FFF8FFF000007FF8FFF000007FF8FFF000007FFCFFF000003F
FCFFF000003FFCFFF000003FFCFFF000003FFCFFF000003FFCFFF000003FFCFFF000003F
FCFFF000003FFCFFF000003FFCFFF000003FFCFFF000003FFCFFF000003FFCFFF000003F
FCFFF000007FFCFFF000007FF8FFF000007FF8FFF000007FF8FFF00000FFF8FFF00000FF
F0FFF00001FFF0FFF80001FFF0FFFC0003FFE0FFFE0007FFC0FFFF000FFFC0FFFFC07FFF
80FFFFFFFFFF00FFFFFFFFFE00FFF7FFFFF800FFF1FFFFE000FFF07FFF8000FFF00FFC00
00FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF0000000
00FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF0000000
00FFF000000000FFF000000000FFF000000000FFF0000000007FF0000000003FE0000000
002E4279AE3A>I<000000F83FC007F87FE01FF8FFE07FF8FFE0FFF8FFE1FFF8FFE3FFF8
FFE7FFF8FFEFFFF8FFEFFF00FFFFF800FFFFF000FFFFC000FFFF8000FFFF0000FFFF0000
FFFE0000FFFC0000FFFC0000FFF80000FFF80000FFF80000FFF00000FFF00000FFF00000
FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000
FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000FFF00000
FFF00000FFF000007FF000003FE000001D2F79AE26>114 D<000FFF8000007FFFF80001
FFFFFE0007FFFFFF800FFFFFFFE01FFFFFFFE01FFFFFFFE03FF801FFE03FF0003FC03FE0
000FC07FC00003C07FC00001C07FC00000007FC00000007FE00000007FE00000007FF000
00007FFC0000003FFFC000003FFFFE00003FFFFFC0001FFFFFF0000FFFFFFC0007FFFFFE
0003FFFFFF0001FFFFFF80007FFFFFC0001FFFFFC00003FFFFE000000FFFE0000001FFF0
0000007FF00000003FF00000003FF02000001FF07000001FF07800001FF07C00001FF07E
00003FF07F80003FE0FFE0007FE0FFFC01FFE0FFFFFFFFC0FFFFFFFFC03FFFFFFF800FFF
FFFF0003FFFFFC00007FFFF0000007FF800024317DAF2B>I<007FC0000000FFE0000001
FFE0000001FFE0000001FFE0000001FFE0000001FFE0000001FFE0000001FFE0000001FF
E0000001FFE0000001FFE0000001FFE000003FFFFFFE007FFFFFFF00FFFFFFFF00FFFFFF
FF00FFFFFFFF007FFFFFFE0001FFE0000001FFE0000001FFE0000001FFE0000001FFE000
0001FFE0000001FFE0000001FFE0000001FFE0000001FFE0000001FFE0000001FFE00000
01FFE0000001FFE0000001FFE0000001FFE0000001FFE0000001FFE0000001FFE0000001
FFE0000001FFE0000001FFE0000001FFE0000001FFE0000001FFE0000001FFE0000001FF
E0000001FFE0000001FFE0000001FFE0000001FFE0000001FFE0000001FFF0018001FFF0
078000FFF81FC000FFFFFFC000FFFFFFC0007FFFFFC0003FFFFE00001FFFF0000007FE00
00223C7EBA28>I<3FE00000FFC07FF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001
FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001
FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001
FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001
FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001
FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00001FFE0FFF00003
FFE0FFF00003FFE0FFF00003FFE0FFF00007FFE0FFF0000FFFE0FFF8001FFFE07FF8003F
FFE07FFE01FFFFE03FFFFFFDFFE01FFFFFF9FFE00FFFFFE1FFE003FFFF80FFC0007FFC00
00002B2F79AD3A>I<7F80000007F87FC000000FF8FFE000000FFC7FE000001FF87FE000
001FF87FF000003FF83FF000003FF03FF800003FF01FF800007FE01FF800007FE01FFC00
007FE00FFC0000FFC00FFC0000FFC00FFE0000FFC007FE0001FF8007FE0001FF8007FF00
01FF8003FF0003FF0003FF0003FF0003FF8007FF0001FF8007FE0001FF8007FE0001FFC0
0FFE0000FFC00FFC0000FFE00FFC00007FE01FF800007FE01FF800007FF01FF800003FF0
3FF000003FF03FF000003FF83FF000001FF87FE000001FF87FE000001FFCFFE000000FFC
FFC000000FFCFFC000000FFFFFC0000007FFFF80000007FFFF80000003FFFF00000003FF
FF00000003FFFF00000001FFFE00000001FFFE00000000FFFC000000007FF800002E2E7E
AD33>I<0003FFC000000003FFE000000001FFF0000000007FF8000000003FF800000000
1FFC0000000007FE0000000003FF0000000001FF8000000000FFC0000000003FC0000000
001FE0000000000FF00000000003F80000000001F8000000000000000000000000000000
0000000000000000000000000000000000007FF800000003FFFF0000001FFFFFC000003F
FFFFF00000FFFFFFF80001FFFFFFFC0003FFF01FFE0007FF8007FF000FFF0003FF000FFE
0001FF801FFC0000FF801FFC0000FFC03FF80000FFC03FF800007FE07FF000007FE07FF0
00007FE07FF000007FE07FF000003FF0FFF000003FF0FFF000003FF0FFE000003FF0FFE0
00003FF0FFE000003FF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFF
FFFFFFF0FFFFFFFFFFE0FFF000000000FFF0000000007FF0000000007FF0000000007FF0
000000007FF8000000003FF8000000003FF8000000001FFC000000C01FFE000001C00FFE
000007C007FF00000FC007FFC0007FE003FFF803FFE001FFFFFFFFE0007FFFFFFFE0003F
FFFFFF80000FFFFFFE000003FFFFF00000003FFE00002C457DC333>232
D<000007FF800000000FFF800000001FFF000000003FFC000000003FF8000000007FF000
000000FFC000000001FF8000000003FF0000000007FE0000000007F8000000000FF00000
00001FE0000000003F80000000003F000000000000000000000000000000000000000000
0000000000000000000000000000007FF800000003FFFF0000001FFFFFC000003FFFFFF0
0000FFFFFFF80001FFFFFFFC0003FFF01FFE0007FF8007FF000FFF0003FF000FFE0001FF
801FFC0000FF801FFC0000FFC03FF80000FFC03FF800007FE07FF000007FE07FF000007F
E07FF000007FE07FF000003FF0FFF000003FF0FFF000003FF0FFE000003FF0FFE000003F
F0FFE000003FF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFF
F0FFFFFFFFFFE0FFF000000000FFF0000000007FF0000000007FF0000000007FF0000000
007FF8000000003FF8000000003FF8000000001FFC000000C01FFE000001C00FFE000007
C007FF00000FC007FFC0007FE003FFF803FFE001FFFFFFFFE0007FFFFFFFE0003FFFFFFF
80000FFFFFFE000003FFFFF00000003FFE00002C457DC333>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi ecbx1095 10.95 32
/Fi 32 234 df<0000007FF8000000000FFFFE000000007FFFFF80000001FFC01FC00000
07FE0003E000001FFC0007F000003FF0001FF800007FE0003FF800007FE0003FF80000FF
C0003FF80000FFC0007FFC0001FF80003FF80001FF80003FF80001FF80003FF80001FF80
001FF00001FF80000FE00001FF800003800001FF800000000001FF800000000001FF8000
00000001FF800000000001FF800000000001FF800000000001FF8003FFFC00FFFFFFFFFF
FC00FFFFFFFFFFFC00FFFFFFFFFFFC00FFFFFFFFFFFC0001FF80000FFC0001FF80000FFC
0001FF80000FFC0001FF80000FFC0001FF80000FFC0001FF80000FFC0001FF80000FFC00
01FF80000FFC0001FF80000FFC0001FF80000FFC0001FF80000FFC0001FF80000FFC0001
FF80000FFC0001FF80000FFC0001FF80000FFC0001FF80000FFC0001FF80000FFC0001FF
80000FFC0001FF80000FFC0001FF80000FFC0001FF80000FFC0001FF80000FFC0001FF80
000FFC0001FF80000FFC0001FF80000FFC0001FF80000FFC0001FF80000FFC0001FF8000
0FFC0001FF80000FFC0001FF80000FFC0001FF80000FFC0001FF80000FFC007FFFFE03FF
FFF07FFFFE03FFFFF07FFFFE03FFFFF07FFFFE03FFFFF034407EBF3A>28
D<00000700000F00003E00007C0000F80001F00003F00007E0000FC0001F80001F80003F
00007F00007E0000FE0001FC0001FC0003F80003F80007F80007F0000FF0000FF0000FE0
001FE0001FE0001FC0003FC0003FC0003FC0003FC0007FC0007F80007F80007F80007F80
007F8000FF8000FF8000FF8000FF8000FF8000FF8000FF8000FF8000FF8000FF8000FF80
00FF8000FF8000FF8000FF8000FF80007F80007F80007F80007F80007F80007FC0003FC0
003FC0003FC0003FC0001FC0001FE0001FE0000FE0000FF0000FF00007F00007F80003F8
0003F80001FC0001FC0000FE00007E00007F00003F00001F80001F80000FC00007E00003
F00001F00000F800007C00003E00000F000007185A77C328>40 D<E00000F000007C0000
3E00001F00000F80000FC00007E00003F00001F80001F80000FC0000FE00007E00007F00
003F80003F80001FC0001FC0001FE0000FE0000FF0000FF00007F00007F80007F80003F8
0003FC0003FC0003FC0003FC0003FE0001FE0001FE0001FE0001FE0001FE0001FF0001FF
0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF
0001FF0001FF0001FE0001FE0001FE0001FE0001FE0003FE0003FC0003FC0003FC0003FC
0003F80007F80007F80007F0000FF0000FF0000FE0001FE0001FC0001FC0003F80003F80
007F00007E0000FE0000FC0001F80001F80003F00007E0000FC0000F80001F00003E0000
7C0000F00000E00000185A7AC328>I<07801FE03FF07FF8FFFCFFFCFFFCFFFCFFFCFFFC
7FF83FF01FE007800E0E798D1D>46 D<00000F000000001F000000007F00000001FF0000
000FFF000001FFFF0000FFFFFF0000FFFFFF0000FFF7FF0000FE07FF00000007FF000000
07FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007
FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF
00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00
000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF0000
0007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF000000
07FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007
FF00000007FF00003FFFFFFFF83FFFFFFFF83FFFFFFFF83FFFFFFFF8253C79BB34>49
D<0003FF800000003FFFF8000000FFFFFE000003FFFFFF800007F80FFFC0000FC001FFF0
001F8000FFF8003F00007FFC007FC0003FFE007FE0003FFE00FFF0001FFF00FFF8001FFF
00FFF8001FFF00FFF8000FFF80FFF8000FFF80FFF8000FFF80FFF8000FFF807FF0000FFF
807FF0000FFF801FC0000FFF800700000FFF800000000FFF000000001FFF000000001FFF
000000001FFE000000003FFE000000003FFC000000007FF8000000007FF000000000FFE0
00000001FFC000000001FF8000000003FF0000000007FE000000000FF8000000001FF000
0000001FE0000000003F80000000007F0000000000FE0000000001F80007800003F00007
800007E0000780000FC0000F00001F80000F00003E00000F00007C00000F0000F800001F
0001F000001F0001FFFFFFFF0003FFFFFFFE0007FFFFFFFE000FFFFFFFFE001FFFFFFFFE
003FFFFFFFFE007FFFFFFFFE00FFFFFFFFFE00FFFFFFFFFC00FFFFFFFFFC00FFFFFFFFFC
00293C7BBB34>I<0000FFE00000000FFFFC0000003FFFFF800000FF01FFE00001F8007F
F00003E0003FF80007C0003FFC000FF0001FFE000FFC001FFE001FFE001FFF001FFE001F
FF001FFE001FFF001FFE001FFF001FFF001FFF001FFE001FFF001FFE001FFF000FFE001F
FF0007FC001FFE0003F0003FFE000000003FFC000000003FFC000000007FF8000000007F
F000000000FFE000000001FFC000000003FF000000000FFC00000007FFF000000007FFE0
00000007FFFE0000000001FF80000000007FE0000000003FF8000000001FFC000000001F
FE000000000FFF000000000FFF8000000007FFC000000007FFC000000007FFC007800007
FFE01FE00007FFE07FF80007FFE07FF80007FFE0FFFC0007FFE0FFFC0007FFE0FFFC0007
FFE0FFFC0007FFE0FFFC0007FFC0FFFC0007FFC0FFF8000FFFC07FF8000FFF807FF0000F
FF003FC0001FFF001FC0003FFE000FF0007FFC0007FE01FFF00003FFFFFFE00000FFFFFF
8000001FFFFC00000001FFC000002B3D7CBB34>I<00000001F00000000001F000000000
03F00000000007F0000000000FF0000000001FF0000000001FF0000000003FF000000000
7FF000000000FFF000000000FFF000000001FFF000000003FFF000000007FFF00000000F
BFF00000000F3FF00000001E3FF00000003C3FF00000007C3FF0000000783FF0000000F0
3FF0000001E03FF0000003E03FF0000003C03FF0000007803FF000000F003FF000001F00
3FF000003E003FF000003C003FF0000078003FF00000F0003FF00001F0003FF00001E000
3FF00003C0003FF0000780003FF0000F80003FF0001F00003FF0001E00003FF0003C0000
3FF0007800003FF000F800003FF000FFFFFFFFFFF8FFFFFFFFFFF8FFFFFFFFFFF8FFFFFF
FFFFF80000007FF0000000007FF0000000007FF0000000007FF0000000007FF000000000
7FF0000000007FF0000000007FF0000000007FF0000000007FF0000000007FF0000001FF
FFFFF80001FFFFFFF80001FFFFFFF80001FFFFFFF82D3C7DBB34>I<0E00000018000FC0
0000F8000FFC001FF8000FFFFFFFF0000FFFFFFFF0000FFFFFFFE0000FFFFFFFC0000FFF
FFFF80000FFFFFFF00000FFFFFFC00000FFFFFF800000FFFFFE000000FFFFF0000000FFF
F80000000F80000000000F80000000000F80000000000F80000000000F80000000000F80
000000000F80000000000F80000000000F80000000000F81FFC000000F8FFFF800000FBF
FFFE00000FFF01FF80000FF8007FE0000FE0003FF0000FC0003FF8000F80001FFC000700
001FFC000000001FFE000000000FFE000000000FFF000000000FFF000000000FFF000000
000FFF800000000FFF800F00000FFF803FC0000FFF807FE0000FFF80FFF0000FFF80FFF0
000FFF80FFF0000FFF80FFF0000FFF80FFF0000FFF00FFF0000FFF00FFE0000FFF007FC0
001FFE007F80001FFE007C00001FFC003E00003FFC003F00003FF8001F80007FF0000FE0
00FFE00007FC07FFC00001FFFFFF000000FFFFFC0000003FFFF000000007FF000000293D
7BBB34>I<000003FE000000003FFFC0000000FFFFF0000003FE01F800000FF8007C0000
3FE0003E00007FC001FE0000FF8003FF0001FF8007FF0003FF0007FF0003FE0007FF0007
FE0007FF000FFE0007FF000FFC0007FF001FFC0003FE001FFC0001FC003FFC000000003F
FC000000003FF8000000007FF8000000007FF8000000007FF8000000007FF83FFC0000FF
F87FFF8000FFF9FFFFC000FFFBC03FF000FFFB800FF800FFFF000FFC00FFFF0007FE00FF
FE0007FF00FFFE0003FF80FFFC0003FF80FFFC0003FFC0FFFC0003FFC0FFFC0003FFC0FF
F80003FFE0FFF80003FFE0FFF80003FFE0FFF80003FFE0FFF80003FFE07FF80003FFE07F
F80003FFE07FF80003FFE07FF80003FFE07FF80003FFE03FF80003FFE03FF80003FFE03F
F80003FFC01FF80003FFC01FFC0003FFC00FFC0003FF800FFC0007FF8007FE0007FF0003
FE0007FE0003FF000FFC0001FF801FF80000FFE07FF000003FFFFFE000000FFFFF800000
03FFFE000000007FE000002B3D7CBB34>I<1E00000000001F00000000001FF000000000
1FFFFFFFFFF01FFFFFFFFFF01FFFFFFFFFF03FFFFFFFFFF03FFFFFFFFFE03FFFFFFFFFC0
3FFFFFFFFF803FFFFFFFFF003FFFFFFFFE003FFFFFFFFE007FFFFFFFFC007C000001F800
7C000003F00078000007E00078000007C0007800000FC0007800001F8000F000003F0000
F000007E0000F00000FC0000000000F80000000001F80000000003F00000000007E00000
000007E0000000000FC0000000001FC0000000001F80000000003F80000000003F800000
00007F00000000007F0000000000FF0000000000FF0000000001FE0000000001FE000000
0003FE0000000003FE0000000003FE0000000007FE0000000007FC0000000007FC000000
000FFC000000000FFC000000000FFC000000000FFC000000000FFC000000001FFC000000
001FFC000000001FFC000000001FFC000000001FFC000000001FFC000000001FFC000000
001FFC000000001FFC000000001FFC000000000FF80000000007F00000000003E0000000
2C3F7ABD34>I<FFFFFFFFFFF8000000FFFFFFFFFFFF800000FFFFFFFFFFFFF00000FFFF
FFFFFFFFFC0000003FFE00007FFF0000003FFE00000FFFC000003FFE000003FFE000003F
FE000000FFF000003FFE0000003FF800003FFE0000001FFC00003FFE0000000FFE00003F
FE0000000FFF00003FFE00000007FF80003FFE00000003FF80003FFE00000003FFC0003F
FE00000003FFC0003FFE00000001FFE0003FFE00000001FFE0003FFE00000001FFF0003F
FE00000000FFF0003FFE00000000FFF0003FFE00000000FFF8003FFE00000000FFF8003F
FE00000000FFF8003FFE00000000FFF8003FFE00000000FFFC003FFE00000000FFFC003F
FE00000000FFFC003FFE00000000FFFC003FFE00000000FFFC003FFE00000000FFFC003F
FE00000000FFFC003FFE00000000FFFC003FFE00000000FFFC003FFE00000000FFFC003F
FE00000000FFFC003FFE00000000FFFC003FFE00000000FFFC003FFE00000000FFF8003F
FE00000000FFF8003FFE00000000FFF8003FFE00000000FFF8003FFE00000000FFF0003F
FE00000000FFF0003FFE00000001FFF0003FFE00000001FFE0003FFE00000001FFE0003F
FE00000003FFC0003FFE00000003FFC0003FFE00000007FF80003FFE00000007FF00003F
FE0000000FFF00003FFE0000001FFE00003FFE0000003FFC00003FFE000000FFF800003F
FE000001FFE000003FFE00000FFFC000003FFE00007FFF8000FFFFFFFFFFFFFE0000FFFF
FFFFFFFFF80000FFFFFFFFFFFFC00000FFFFFFFFFFF8000000463E7DBD50>68
D<FFFFFFFFFFFFFE00FFFFFFFFFFFFFE00FFFFFFFFFFFFFE00FFFFFFFFFFFFFE00003FFE
00003FFF00003FFE000007FF00003FFE000001FF00003FFE000000FF00003FFE0000007F
00003FFE0000003F00003FFE0000001F00003FFE0000001F80003FFE0000000F80003FFE
0000000F80003FFE0000000780003FFE0000000780003FFE0000000780003FFE00078007
80003FFE00078007C0003FFE00078003C0003FFE00078003C0003FFE00078003C0003FFE
0007800000003FFE000F800000003FFE000F800000003FFE001F800000003FFE003F8000
00003FFE00FF800000003FFFFFFF800000003FFFFFFF800000003FFFFFFF800000003FFF
FFFF800000003FFE00FF800000003FFE003F800000003FFE001F800000003FFE000F8000
00003FFE000F800000003FFE0007800078003FFE0007800078003FFE0007800078003FFE
00078000F0003FFE00078000F0003FFE00078000F0003FFE00000000F0003FFE00000000
F0003FFE00000001F0003FFE00000001E0003FFE00000001E0003FFE00000003E0003FFE
00000003E0003FFE00000007E0003FFE00000007E0003FFE0000000FE0003FFE0000001F
C0003FFE0000003FC0003FFE000000FFC0003FFE000003FFC0003FFE00003FFFC0FFFFFF
FFFFFFFFC0FFFFFFFFFFFFFF80FFFFFFFFFFFFFF80FFFFFFFFFFFFFF803D3E7DBD44>I<
FFFFFFFFFFC000000000FFFFFFFFFFFC00000000FFFFFFFFFFFF80000000FFFFFFFFFFFF
F0000000003FFE0001FFFC000000003FFE00003FFE000000003FFE00001FFF000000003F
FE000007FF800000003FFE000007FFC00000003FFE000003FFE00000003FFE000003FFE0
0000003FFE000001FFF00000003FFE000001FFF00000003FFE000001FFF80000003FFE00
0001FFF80000003FFE000001FFF80000003FFE000001FFF80000003FFE000001FFF80000
003FFE000001FFF80000003FFE000001FFF80000003FFE000001FFF00000003FFE000001
FFF00000003FFE000003FFE00000003FFE000003FFE00000003FFE000007FFC00000003F
FE000007FF800000003FFE00001FFE000000003FFE00003FFC000000003FFE0003FFF000
0000003FFFFFFFFFC0000000003FFFFFFFFE00000000003FFFFFFFFE00000000003FFE00
0FFF80000000003FFE0003FFE0000000003FFE0000FFF0000000003FFE00007FF8000000
003FFE00007FFC000000003FFE00003FFC000000003FFE00003FFE000000003FFE00001F
FE000000003FFE00001FFF000000003FFE00001FFF000000003FFE00001FFF000000003F
FE00001FFF000000003FFE00001FFF000000003FFE00001FFF000000003FFE00001FFF80
0000003FFE00001FFF800000003FFE00001FFF800000003FFE00001FFF800000003FFE00
001FFF800000003FFE00001FFF800180003FFE00001FFF8003C0003FFE00001FFFC003C0
003FFE00000FFFC003C0003FFE00000FFFC003C0003FFE000007FFE00780003FFE000007
FFE00780FFFFFFFF8003FFF00F00FFFFFFFF8001FFFC3F00FFFFFFFF80007FFFFE00FFFF
FFFF80001FFFF80000000000000000FFE0004A3F7DBD4E>82 D<3FFFFFFFFFFFFFF83FFF
FFFFFFFFFFF83FFFFFFFFFFFFFF83FFFFFFFFFFFFFF83FFC007FFC007FF83FE0007FFC00
0FF87F80007FFC0003FC7F00007FFC0001FC7E00007FFC0000FC7E00007FFC0000FC7C00
007FFC00007C7C00007FFC00007C7800007FFC00003C7800007FFC00003C7800007FFC00
003C7800007FFC00003C7800007FFC00003CF000007FFC00001EF000007FFC00001EF000
007FFC00001EF000007FFC00001EF000007FFC00001E0000007FFC0000000000007FFC00
00000000007FFC0000000000007FFC0000000000007FFC0000000000007FFC0000000000
007FFC0000000000007FFC0000000000007FFC0000000000007FFC0000000000007FFC00
00000000007FFC0000000000007FFC0000000000007FFC0000000000007FFC0000000000
007FFC0000000000007FFC0000000000007FFC0000000000007FFC0000000000007FFC00
00000000007FFC0000000000007FFC0000000000007FFC0000000000007FFC0000000000
007FFC0000000000007FFC0000000000007FFC0000000000007FFC0000000000007FFC00
00000000007FFC0000000000007FFC0000000000007FFC0000000000007FFC0000000000
007FFC0000000000007FFC000000001FFFFFFFFFF000001FFFFFFFFFF000001FFFFFFFFF
F000001FFFFFFFFFF0003F3D7CBC48>84 D<0007FF800000003FFFF0000001FFFFFC0000
03FC03FF000007E000FFC0000FF8007FE0001FF8003FF0001FFC003FF0001FFC001FF800
1FFC001FF8001FFC000FFC001FFC000FFC000FF8000FFC0007F0000FFC0001C0000FFC00
0000000FFC000000000FFC000000000FFC00000003FFFC000001FFFFFC00000FFFFFFC00
007FFF8FFC0001FFF00FFC0007FF800FFC000FFF000FFC001FFC000FFC003FF8000FFC00
7FF8000FFC007FF0000FFC00FFF0000FFC00FFE0000FFC00FFE0000FFC00FFE0000FFC00
FFE0001FFC00FFE0001FFC00FFF0003FFC007FF0003FFC007FF8007FFF003FFC01F7FFFC
1FFE07E3FFFC07FFFF81FFFC01FFFE007FFC001FF80000002E2B7DA932>97
D<00007FF0000003FFFF00001FFFFFC0007FE01FE000FF8003F001FF000FF803FE000FFC
07FE001FFC0FFC001FFC1FFC001FFC1FF8001FFC3FF8001FFC3FF8000FF87FF80007F07F
F00001C07FF0000000FFF0000000FFF0000000FFF0000000FFF0000000FFF0000000FFF0
000000FFF0000000FFF0000000FFF0000000FFF0000000FFF00000007FF00000007FF000
00007FF80000007FF80000003FF800001E3FFC00001E1FFC00003E0FFC00003C0FFE0000
7C07FF0000F803FF8001F000FFC003E0007FF00FC0001FFFFF000007FFFC0000007FE000
272B7DA92E>99 D<0000FFE0000007FFFC00003FFFFF00007FE0FF8001FF803FC003FF00
1FE007FE000FF00FFC000FF80FFC0007FC1FF80007FC3FF80003FE3FF80003FE3FF80003
FE7FF00003FE7FF00003FF7FF00003FFFFF00001FFFFF00001FFFFF00001FFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFF0000000FFF0000000FFF0000000FFF0000000FFF00000007F
F00000007FF00000007FF00000003FF80000003FF800000F1FF800000F1FFC00001F0FFC
00001E07FE00003E03FE00007C01FF0000F800FFC003F0007FF01FE0001FFFFFC00007FF
FE0000007FF000282B7DA92F>101 D<00FF0000000000FFFF0000000000FFFF00000000
00FFFF0000000000FFFF000000000007FF000000000003FF000000000003FF0000000000
03FF000000000003FF000000000003FF000000000003FF000000000003FF000000000003
FF000000000003FF000000000003FF000000000003FF000000000003FF000000000003FF
000000000003FF000000000003FF000000000003FF000000000003FF003FF0000003FF00
FFFE000003FF03FFFF800003FF0FC0FFC00003FF1E007FE00003FF3C003FF00003FF7800
3FF00003FFF0003FF00003FFE0001FF80003FFC0001FF80003FFC0001FF80003FF80001F
F80003FF80001FF80003FF80001FF80003FF00001FF80003FF00001FF80003FF00001FF8
0003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF800
03FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003
FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF
00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF800FFFFFC
07FFFFE0FFFFFC07FFFFE0FFFFFC07FFFFE0FFFFFC07FFFFE0333F7CBE3A>104
D<01F80003FC0007FE000FFF001FFF801FFF801FFF801FFF801FFF801FFF800FFF0007FE
0003FC0001F80000000000000000000000000000000000000000000000000000000000FF
00FFFF00FFFF00FFFF00FFFF0007FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
00FFFFF8FFFFF8FFFFF8FFFFF815407CBF1D>I<00FF00FFFF00FFFF00FFFF00FFFF0007
FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003
FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003
FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003
FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003
FF0003FF0003FF0003FF0003FF0003FF00FFFFFCFFFFFCFFFFFCFFFFFC163F7CBE1D>
108 D<01FE003FF00001FF8000FFFE00FFFE0007FFF000FFFE03FFFF801FFFFC00FFFE0F
C0FFC07E07FE00FFFE1E007FE0F003FF0007FE3C003FF1E001FF8003FE78003FF3C001FF
8003FEF0003FF78001FF8003FFE0001FFF0000FFC003FFC0001FFE0000FFC003FFC0001F
FE0000FFC003FF80001FFC0000FFC003FF80001FFC0000FFC003FF80001FFC0000FFC003
FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF800
00FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00
001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FF
C003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001F
F80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003
FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF800
00FFC003FF00001FF80000FFC0FFFFFC07FFFFE03FFFFFFFFFFC07FFFFE03FFFFFFFFFFC
07FFFFE03FFFFFFFFFFC07FFFFE03FFFFF50297CA857>I<01FE003FF00000FFFE00FFFE
0000FFFE03FFFF8000FFFE0FC0FFC000FFFE1E007FE00007FE3C003FF00003FE78003FF0
0003FEF0003FF00003FFE0001FF80003FFC0001FF80003FFC0001FF80003FF80001FF800
03FF80001FF80003FF80001FF80003FF00001FF80003FF00001FF80003FF00001FF80003
FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF
00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00
001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF0000
1FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF800FFFFFC07FF
FFE0FFFFFC07FFFFE0FFFFFC07FFFFE0FFFFFC07FFFFE033297CA83A>I<00007FF00000
0003FFFE0000001FFFFFC000007FE03FF00000FF800FF80001FF0007FC0003FE0003FE00
07FC0001FF000FF80000FF801FF80000FFC01FF80000FFC03FF80000FFE03FF000007FE0
7FF000007FF07FF000007FF07FF000007FF07FF000007FF0FFF000007FF8FFF000007FF8
FFF000007FF8FFF000007FF8FFF000007FF8FFF000007FF8FFF000007FF8FFF000007FF8
FFF000007FF8FFF000007FF87FF000007FF07FF000007FF07FF000007FF07FF000007FF0
3FF80000FFE03FF80000FFE01FF80000FFC00FF80000FF800FFC0001FF8007FE0003FF00
03FF0007FE0001FF800FFC00007FE03FF000001FFFFFC0000007FFFF000000007FF00000
2D2B7DA934>I<00FF007FE00000FFFF07FFFC0000FFFF1FFFFF0000FFFF7F01FFC000FF
FFF8007FF00007FFF0003FF80003FFE0001FFC0003FF80000FFE0003FF80000FFF0003FF
000007FF0003FF000007FF8003FF000003FF8003FF000003FFC003FF000003FFC003FF00
0003FFC003FF000001FFC003FF000001FFE003FF000001FFE003FF000001FFE003FF0000
01FFE003FF000001FFE003FF000001FFE003FF000001FFE003FF000001FFE003FF000001
FFE003FF000001FFE003FF000001FFC003FF000003FFC003FF000003FFC003FF000003FF
C003FF000007FF8003FF000007FF8003FF000007FF0003FF80000FFE0003FFC0001FFE00
03FFE0001FFC0003FFF0003FF80003FFF800FFE00003FF7F03FFC00003FF1FFFFF000003
FF07FFF8000003FF00FFC0000003FF000000000003FF000000000003FF000000000003FF
000000000003FF000000000003FF000000000003FF000000000003FF000000000003FF00
0000000003FF000000000003FF000000000003FF000000000003FF0000000000FFFFFC00
000000FFFFFC00000000FFFFFC00000000FFFFFC00000000333B7DA83A>I<00007FE000
78000003FFFC00F800001FFFFE01F800007FF81F81F80000FFE007C3F80001FF8001E3F8
0007FF0000F7F80007FF0000FFF8000FFE00007FF8001FFC00003FF8003FFC00003FF800
3FFC00001FF8003FF800001FF8007FF800001FF8007FF800001FF8007FF000001FF800FF
F000001FF800FFF000001FF800FFF000001FF800FFF000001FF800FFF000001FF800FFF0
00001FF800FFF000001FF800FFF000001FF800FFF000001FF800FFF000001FF8007FF000
001FF8007FF800001FF8007FF800001FF8007FF800001FF8003FF800001FF8003FFC0000
1FF8001FFC00003FF8000FFE00007FF8000FFE0000FFF80007FF0000FFF80003FF8003FF
F80001FFC007DFF800007FF03F9FF800001FFFFE1FF8000007FFF81FF80000007FC01FF8
00000000001FF800000000001FF800000000001FF800000000001FF800000000001FF800
000000001FF800000000001FF800000000001FF800000000001FF800000000001FF80000
0000001FF800000000001FF800000000001FF80000000007FFFFE000000007FFFFE00000
0007FFFFE000000007FFFFE0333B7DA837>I<01FE01FC00FFFE07FF80FFFE0FFFE0FFFE
3F1FF0FFFE3C1FF007FE783FF803FEF03FF803FEE03FF803FFE03FF803FFC03FF803FFC0
1FF003FF800FE003FF80038003FF80000003FF80000003FF00000003FF00000003FF0000
0003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF000000
03FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003
FF00000003FF00000003FF00000003FF00000003FF000000FFFFFF0000FFFFFF0000FFFF
FF0000FFFFFF000025297DA82B>I<000780000007800000078000000780000007800000
0F8000000F8000000F8000000F8000001F8000001F8000001F8000003F8000007F800000
7F800000FF800001FF800007FF80001FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC01FF800001
FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001
FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001
FF800001FF801E01FF801E01FF801E01FF801E01FF801E01FF801E01FF801E01FF801E01
FF801E00FF803C00FFC03C00FFC03C007FE078003FF0F0001FFFE00007FFC00000FF001F
3B7EB928>116 D<00FF000007F800FFFF0007FFF800FFFF0007FFF800FFFF0007FFF800
FFFF0007FFF80007FF00003FF80003FF00001FF80003FF00001FF80003FF00001FF80003
FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF
00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00
001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF0000
1FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001F
F80003FF00003FF80003FF00003FF80003FF00003FF80003FF00007FF80001FF0000FFF8
0001FF0000FFF80001FF8001FFFC0000FF8007DFFFE0007FE01F9FFFE0001FFFFE1FFFE0
0007FFF81FFFE00000FFE01FE000332A7CA83A>I<FFFFF801FFFF00FFFFF801FFFF00FF
FFF801FFFF00FFFFF801FFFF0001FFC0003FC00000FFC0003F0000007FE0007E0000007F
F0007C0000003FF800F80000001FFC01F00000000FFE03E000000007FF07C000000003FF
0F8000000001FF9F8000000001FFFF0000000000FFFE00000000007FFC00000000003FF8
00000000001FF800000000000FFC00000000000FFE00000000000FFF00000000001FFF80
000000003FFFC0000000007EFFC0000000007C7FE000000000F87FF000000001F03FF800
000003E01FFC00000007C00FFE0000000F8007FE0000001F8003FF0000003F0003FF8000
007E0001FFC000007C0000FFE00001FC00007FF000FFFF8003FFFFC0FFFF8003FFFFC0FF
FF8003FFFFC0FFFF8003FFFFC032287EA737>120 D<00006000000001F800000003FC00
000003FE00000007FF00000007FF80000007FFC0000007FFE0000003FFF0000003FFF800
0000FFFC0000001FFE00000007FF00000000FE000000001E000000000400000000000000
000000000000FFE0000007FFFC00003FFFFF00007FE0FF8001FF803FC003FF001FE007FE
000FF00FFC000FF80FFC0007FC1FF80007FC3FF80003FE3FF80003FE3FF80003FE7FF000
03FE7FF00003FF7FF00003FFFFF00001FFFFF00001FFFFF00001FFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFF0000000FFF0000000FFF0000000FFF0000000FFF00000007FF0000000
7FF00000007FF00000003FF80000003FF800000F1FF800000F1FFC00001F0FFC00001E07
FE00003E03FE00007C01FF0000F800FFC003F0007FF01FE0001FFFFFC00007FFFE000000
7FF000283D7DBB2F>232 D<000000C000000003F000000007F80000000FF80000001FFC
0000003FFC0000007FFC000000FFFC000001FFF8000003FFF8000007FFE000000FFF0000
001FFC0000000FE00000000F0000000004000000000000000000000000000000FFE00000
07FFFC00003FFFFF00007FE0FF8001FF803FC003FF001FE007FE000FF00FFC000FF80FFC
0007FC1FF80007FC3FF80003FE3FF80003FE3FF80003FE7FF00003FE7FF00003FF7FF000
03FFFFF00001FFFFF00001FFFFF00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000
00FFF0000000FFF0000000FFF0000000FFF00000007FF00000007FF00000007FF0000000
3FF80000003FF800000F1FF800000F1FFC00001F0FFC00001E07FE00003E03FE00007C01
FF0000F800FFC003F0007FF01FE0001FFFFFC00007FFFE0000007FF000283D7DBB2F>I
E
%EndDVIPSBitmapFont
/Fj 178[68 10[53 53 65[{}3 66.4176 /CMMI8 rf /Fk 148[45
26[63 38[91 91 6[91 32[71{}6 90.9091 /CMSY10 rf /Fl 134[45
52 1[44 52 9[47 37 31 4[47 20[69 1[88 7[67 75 65 69 68
5[25 25 58[{}17 90.9091 /CMMI10 rf /Fm 162[25 1[25 29[71
7[45 1[45 45 45 5[71 1[35 35 40[{}10 90.9091 /CMR10 rf
%DVIPSBitmapFont: Fn ecsx1440 14.4 26
/Fn 26 234 df<FFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFC0F
F80FF81FF01FF01FE03FE03FC03FC07F807F80FF00FF00FE000E1B74D426>39
D<0000003F0000000000007F800000000000FF800000000001FF800000000007FF800000
00001FFF8000000000FFFF800000000FFFFF8000003FFFFFFF8000007FFFFFFF800000FF
FFFFFF800000FFFFFFFF800000FFFFFFFF8000007FFFBFFF8000003FF83FFF8000000000
3FFF80000000003FFF80000000003FFF80000000003FFF80000000003FFF80000000003F
FF80000000003FFF80000000003FFF80000000003FFF80000000003FFF80000000003FFF
80000000003FFF80000000003FFF80000000003FFF80000000003FFF80000000003FFF80
000000003FFF80000000003FFF80000000003FFF80000000003FFF80000000003FFF8000
0000003FFF80000000003FFF80000000003FFF80000000003FFF80000000003FFF800000
00003FFF80000000003FFF80000000003FFF80000000003FFF80000000003FFF80000000
003FFF80000000003FFF80000000003FFF80000000003FFF80000000003FFF8000000000
3FFF80000000003FFF80000000003FFF80000000003FFF80000000003FFF80000000003F
FF80000000003FFF80000000003FFF80000000003FFF80000000003FFF80000000003FFF
80000000003FFF80000000003FFF80000000003FFF80000000003FFF80000000003FFF80
000000003FFF80000000003FFF80000000003FFF80000000003FFF80000000003FFF8000
0000003FFF80000000003FFF80000000003FFF80000000003FFF80000000003FFF800000
1FFFFFFFFFFE003FFFFFFFFFFF007FFFFFFFFFFF807FFFFFFFFFFF807FFFFFFFFFFF803F
FFFFFFFFFF001FFFFFFFFFFE00315476D345>49 D<00000FFF0000000000FFFFF0000000
03FFFFFE0000000FFFFFFF8000003FFFFFFFE000007FFFFFFFF00001FFFFFFFFFC0003FF
FFFFFFFE0007FFFFFFFFFF0007FFFFFFFFFF800FFFF007FFFFC01FFF8001FFFFE03FFF00
007FFFE03FFE00003FFFF07FFC00001FFFF07FF800000FFFF8FFF0000007FFF8FFF00000
03FFFCFFE0000003FFFC7FC0000001FFFC3FC0000001FFFC3FC0000001FFFE1F80000000
FFFE0F80000000FFFE0780000000FFFE0700000000FFFE0300000000FFFE0000000000FF
FE0000000000FFFE0000000000FFFE0000000000FFFE0000000001FFFE0000000001FFFC
0000000001FFFC0000000003FFFC0000000003FFF80000000003FFF80000000007FFF000
00000007FFF0000000000FFFE0000000001FFFC0000000001FFFC0000000003FFF800000
00007FFF0000000000FFFE0000000000FFFC0000000001FFF80000000003FFF000000000
07FFE0000000000FFFC0000000001FFF80000000003FFE00000000007FFC0000000000FF
F80000000001FFF00000000003FFE00000000007FF80000000000FFF00000000001FFE00
000000003FFC00000000007FF80000000000FFF00000000001FFE00000000003FFC00000
000007FF00000000000FFE00000000001FFC00000000003FF800000000007FF000000000
00FFE00000000001FFC00000000003FF800000000007FF00000000000FFE00000000001F
FFFFFFFFFFFC3FFFFFFFFFFFFE7FFFFFFFFFFFFE7FFFFFFFFFFFFE7FFFFFFFFFFFFE7FFF
FFFFFFFFFE7FFFFFFFFFFFFE7FFFFFFFFFFFFE3FFFFFFFFFFFFE1FFFFFFFFFFFFC37547A
D345>I<000007FFE0000000003FFFFE00000001FFFFFFC0000007FFFFFFF000001FFFFF
FFFC00007FFFFFFFFE0000FFFFFFFFFF0001FFFFFFFFFF8003FFFFFFFFFFC007FFFC00FF
FFE00FFFE0003FFFE01FFF80000FFFF03FFE00000FFFF03FFC000007FFF01FF8000007FF
F80FF0000003FFF807E0000003FFF807C0000003FFF803C0000003FFF80180000003FFF8
0000000003FFF80000000003FFF80000000003FFF80000000003FFF80000000007FFF000
00000007FFF00000000007FFF0000000000FFFF0000000000FFFE0000000001FFFE00000
00003FFFC0000000007FFF8000000000FFFF0000000001FFFF0000000007FFFE00000000
7FFFFC0000007FFFFFF00000007FFFFFE00000007FFFFF800000007FFFFE000000007FFF
FF800000007FFFFFE00000007FFFFFFC0000007FFFFFFE0000000000FFFF80000000001F
FFC0000000000FFFE00000000007FFF00000000003FFF80000000001FFF80000000001FF
FC0000000000FFFC0000000000FFFE0000000000FFFE00000000007FFE00000000007FFF
00000000007FFF00000000007FFF00000000007FFF00000000007FFF00000000007FFF00
000000007FFF00000000007FFF00000000007FFF00000000007FFF60000000007FFF7000
000000FFFF7800000000FFFE7C00000000FFFE7E00000001FFFEFF80000001FFFEFFC000
0003FFFCFFF0000007FFFCFFFC00000FFFF8FFFF80001FFFF87FFFF800FFFFF03FFFFFFF
FFFFE01FFFFFFFFFFFE007FFFFFFFFFFC003FFFFFFFFFF8000FFFFFFFFFE00007FFFFFFF
FC00001FFFFFFFF0000003FFFFFFC00000007FFFFE0000000007FFC0000038567AD345>
I<00000000FFFE000000000001FFFF000000000003FFFF000000000003FFFF0000000000
07FFFF000000000007FFFF00000000000FFFFF00000000001FFFFF00000000001FFFFF00
000000003FFFFF00000000003FDFFF00000000007FDFFF0000000000FFDFFF0000000000
FF9FFF0000000001FF9FFF0000000001FF1FFF0000000003FF1FFF0000000007FF1FFF00
00000007FE1FFF000000000FFE1FFF000000000FFC1FFF000000001FFC1FFF000000003F
F81FFF000000003FF81FFF000000007FF01FFF000000007FF01FFF00000000FFE01FFF00
000001FFE01FFF00000001FFC01FFF00000003FF801FFF00000003FF801FFF00000007FF
001FFF0000000FFF001FFF0000000FFE001FFF0000001FFE001FFF0000001FFC001FFF00
00003FF8001FFF0000007FF8001FFF0000007FF0001FFF000000FFF0001FFF000000FFE0
001FFF000001FFE0001FFF000003FFC0001FFF000003FF80001FFF000007FF80001FFF00
0007FF00001FFF00000FFF00001FFF00001FFE00001FFF00001FFC00001FFF00003FFC00
001FFF00003FF800001FFF00007FF800001FFF0000FFF000001FFF0000FFFFFFFFFFFFFF
E0FFFFFFFFFFFFFFF0FFFFFFFFFFFFFFF0FFFFFFFFFFFFFFF0FFFFFFFFFFFFFFF0FFFFFF
FFFFFFFFF0FFFFFFFFFFFFFFF0FFFFFFFFFFFFFFF07FFFFFFFFFFFFFE0000000001FFF00
00000000001FFF0000000000001FFF0000000000001FFF0000000000001FFF0000000000
001FFF0000000000001FFF0000000000001FFF0000000000001FFF0000000000001FFF00
00000000001FFF0000000000001FFF0000000000001FFF0000000000001FFF0000000000
001FFF0000000000001FFF0000000000001FFF0000000000001FFF0000000000001FFF00
00000000000FFE00003C527CD145>I<00000000FFFF800000000000000003FFFFE00000
000000000003FFFFE00000000000000007FFFFF00000000000000007FFFFF00000000000
00000FFFFFF8000000000000000FFFFFF8000000000000000FFFFFF8000000000000001F
FFFFFC000000000000001FFFFFFC000000000000001FFFFFFC000000000000003FFFFFFE
000000000000003FFF7FFE000000000000007FFE7FFF000000000000007FFE7FFF000000
000000007FFE3FFF00000000000000FFFE3FFF80000000000000FFFC3FFF800000000000
01FFFC1FFFC0000000000001FFFC1FFFC0000000000001FFF81FFFC0000000000003FFF8
0FFFE0000000000003FFF80FFFE0000000000007FFF00FFFF0000000000007FFF007FFF0
000000000007FFF007FFF000000000000FFFE007FFF800000000000FFFE003FFF8000000
00000FFFC003FFF800000000001FFFC003FFFC00000000001FFFC001FFFC00000000003F
FF8001FFFE00000000003FFF8001FFFE00000000003FFF8000FFFE00000000007FFF0000
FFFF00000000007FFF00007FFF0000000000FFFF00007FFF8000000000FFFE00007FFF80
00000000FFFE00003FFF8000000001FFFC00003FFFC000000001FFFC00003FFFC0000000
01FFFC00001FFFC000000003FFF800001FFFE000000003FFF800000FFFE000000007FFF8
00000FFFF000000007FFF000000FFFF000000007FFF0000007FFF00000000FFFE0000007
FFF80000000FFFE0000007FFF80000001FFFE0000003FFFC0000001FFFC0000003FFFC00
00001FFFC0000001FFFC0000003FFFC0000001FFFE0000003FFFFFFFFFFFFFFE0000007F
FFFFFFFFFFFFFF0000007FFFFFFFFFFFFFFF0000007FFFFFFFFFFFFFFF000000FFFFFFFF
FFFFFFFF800000FFFFFFFFFFFFFFFF800000FFFFFFFFFFFFFFFF800001FFFFFFFFFFFFFF
FFC00001FFFFFFFFFFFFFFFFC00003FFFC000000001FFFE00003FFF8000000001FFFE000
03FFF8000000000FFFE00007FFF8000000000FFFF00007FFF0000000000FFFF0000FFFF0
0000000007FFF8000FFFE00000000007FFF8000FFFE00000000003FFF8001FFFE0000000
0003FFFC001FFFC00000000003FFFC003FFFC00000000001FFFE003FFF800000000001FF
FE003FFF800000000001FFFE007FFF800000000000FFFF007FFF000000000000FFFF007F
FF0000000000007FFF00FFFF0000000000007FFF80FFFE0000000000007FFF80FFFC0000
000000003FFF807FF80000000000001FFF0051527BD15C>65 D<000000000FFFFE000000
000003FFFFFFF8000000003FFFFFFFFF80000001FFFFFFFFFFF0000007FFFFFFFFFFFE00
001FFFFFFFFFFFFE00007FFFFFFFFFFFFE0001FFFFFFFFFFFFFE0003FFFFFFFFFFFFFC00
07FFFFFFFFFFFFFC000FFFFFFC000FFFFC003FFFFF800000FFFC003FFFFE0000001FFC00
7FFFF000000007FC00FFFFE000000003F801FFFF8000000000F803FFFF00000000007803
FFFE00000000001807FFFC00000000000007FFF80000000000000FFFF80000000000000F
FFF00000000000001FFFE00000000000001FFFE00000000000001FFFC00000000000003F
FFC00000000000003FFFC00000000000003FFF800000000000003FFF800000000000007F
FF800000000000007FFF000000000000007FFF000000000000007FFF000000000000007F
FF00000000000000FFFF00000000000000FFFE00000000000000FFFE00000000000000FF
FE00000000000000FFFE00000000000000FFFE00000000000000FFFE00000000000000FF
FE00000000000000FFFE00000000000000FFFE00000000000000FFFE00000000000000FF
FE00000000000000FFFE00000000000000FFFE00000000000000FFFE00000000000000FF
FE00000000000000FFFE00000000000000FFFF000000000000007FFF000000000000007F
FF000000000000007FFF000000000000007FFF000000000000007FFF800000000000003F
FF800000000000003FFF800000000000003FFFC00000000000003FFFC00000000000001F
FFC00000000000001FFFE00000000000001FFFE00000000000000FFFF00000000000000F
FFF800000000000007FFF800000000000007FFFC00000000000603FFFE00000000000E03
FFFF00000000003E01FFFF80000000007E00FFFFE000000000FE007FFFF000000003FE00
3FFFFE0000000FFF003FFFFF8000003FFF000FFFFFFC0007FFFF0007FFFFFFFFFFFFFF00
03FFFFFFFFFFFFFF0001FFFFFFFFFFFFFF00007FFFFFFFFFFFFC00001FFFFFFFFFFFF000
0007FFFFFFFFFFC0000001FFFFFFFFFF000000003FFFFFFFFC0000000003FFFFFFE00000
0000000FFFFC0000485678D358>67 D<00000FFFF000000001FFFFFF0000000FFFFFFFE0
00007FFFFFFFF80001FFFFFFFFFC0007FFFFFFFFFF0007FFFFFFFFFF8007FFFFFFFFFFC0
07FFF0007FFFC007FF80001FFFE007FE00000FFFE003F800000FFFF003F0000007FFF003
C0000007FFF00380000007FFF80300000003FFF80000000003FFF80000000003FFF80000
000003FFF80000000003FFF80000000003FFF80000000003FFF80000000003FFF8000000
0003FFF800000007FFFFF8000007FFFFFFF80000FFFFFFFFF80007FFFFFFFFF8003FFFFF
FFFFF800FFFFFFFFFFF803FFFFFF03FFF807FFFFC003FFF80FFFFC0003FFF81FFFF00003
FFF83FFFE00003FFF87FFF800003FFF87FFF800003FFF8FFFF000003FFF8FFFF000003FF
F8FFFE000003FFF8FFFE000003FFF8FFFE000003FFF8FFFE000007FFF8FFFF000007FFF8
FFFF00000FFFF87FFF80001FFFF87FFFC0003FFFF87FFFE000FFFFF83FFFF807FFFFF81F
FFFFFFFFFFF81FFFFFFFFFFFF80FFFFFFFFBFFF807FFFFFFE3FFF803FFFFFF83FFF800FF
FFFE03FFF8003FFFF001FFF00007FF0000000035397CB742>97 D<3FFC0000000000007F
FE000000000000FFFE000000000000FFFE000000000000FFFE000000000000FFFE000000
000000FFFE000000000000FFFE000000000000FFFE000000000000FFFE000000000000FF
FE000000000000FFFE000000000000FFFE000000000000FFFE000000000000FFFE000000
000000FFFE000000000000FFFE000000000000FFFE000000000000FFFE000000000000FF
FE000000000000FFFE000000000000FFFE000000000000FFFE000000000000FFFE000000
000000FFFE000000000000FFFE000000000000FFFE000000000000FFFE000000000000FF
FE000000000000FFFE000000000000FFFE0007FF000000FFFE00FFFFE00000FFFE03FFFF
F80000FFFE1FFFFFFE0000FFFE3FFFFFFF8000FFFEFFFFFFFFC000FFFFFFFFFFFFE000FF
FFFFFFFFFFF000FFFFFE007FFFF800FFFFF0001FFFF800FFFFC00007FFFC00FFFF800003
FFFC00FFFF000001FFFE00FFFE000000FFFE00FFFE000000FFFE00FFFE000000FFFF00FF
FE0000007FFF00FFFE0000007FFF00FFFE0000007FFF00FFFE0000003FFF00FFFE000000
3FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FF
FE0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE000000
3FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FF
FE0000003FFF80FFFE0000003FFF80FFFE0000007FFF00FFFE0000007FFF00FFFE000000
7FFF00FFFE0000007FFF00FFFE000000FFFE00FFFE000000FFFE00FFFF000001FFFE00FF
FF000003FFFC00FFFF800003FFFC00FFFFE0000FFFF800FFFFF0001FFFF800FFFFFE00FF
FFF000FFFFFFFFFFFFE000FFFFFFFFFFFFC000FFFEFFFFFFFF8000FFFE7FFFFFFF0000FF
FE1FFFFFFC00007FFE07FFFFF000003FFC01FFFF8000000000003FF8000000395678D447
>I<000003FFF8000000007FFFFFC0000001FFFFFFF8000007FFFFFFFE00001FFFFFFFFF
80007FFFFFFFFFE000FFFFFFFFFFE001FFFFFFFFFFE003FFFF800FFFE007FFFC0000FFC0
0FFFF000003FC00FFFE000001FC01FFFE0000007C01FFFC0000003C03FFF80000001C03F
FF80000000003FFF00000000007FFF00000000007FFF00000000007FFF00000000007FFE
0000000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE00
00000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000
000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE000000
00007FFE00000000007FFF00000000007FFF00000000007FFF00000000007FFF00000000
003FFF80000000003FFF80000000C01FFFC0000001C01FFFE0000007C00FFFE000000FC0
0FFFF000003FC007FFFC0001FFE003FFFF801FFFE001FFFFFFFFFFE000FFFFFFFFFFE000
7FFFFFFFFFE0003FFFFFFFFF80000FFFFFFFFE000003FFFFFFF00000007FFFFF80000000
03FFF0000033397BB73D>I<00000000001FFF0000000000003FFF8000000000003FFF80
00000000003FFF8000000000003FFF8000000000003FFF8000000000003FFF8000000000
003FFF8000000000003FFF8000000000003FFF8000000000003FFF8000000000003FFF80
00000000003FFF8000000000003FFF8000000000003FFF8000000000003FFF8000000000
003FFF8000000000003FFF8000000000003FFF8000000000003FFF8000000000003FFF80
00000000003FFF8000000000003FFF8000000000003FFF8000000000003FFF8000000000
003FFF8000000000003FFF8000000000003FFF8000000000003FFF8000000000003FFF80
00001FFC003FFF800001FFFFC03FFF800007FFFFF03FFF80001FFFFFFC3FFF80007FFFFF
FF3FFF8000FFFFFFFFFFFF8001FFFFFFFFFFFF8003FFFFFFFFFFFF8007FFFF801FFFFF80
0FFFFC0003FFFF800FFFF80001FFFF801FFFE00000FFFF801FFFE000003FFF803FFFC000
003FFF803FFF8000003FFF807FFF8000003FFF807FFF0000003FFF807FFF0000003FFF80
7FFF0000003FFF807FFF0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE0000
003FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE0000003FFF80
FFFE0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE0000
003FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE0000003FFF80
7FFE0000003FFF807FFF0000003FFF807FFF0000003FFF807FFF0000003FFF807FFF8000
003FFF803FFF8000003FFF803FFFC000007FFF801FFFC00000FFFF801FFFE00001FFFF80
0FFFF00003FFFF800FFFFC000FFFFF8007FFFF007FFFFF8003FFFFFFFFFFFF8003FFFFFF
FFBFFF8000FFFFFFFF3FFF80007FFFFFFE3FFF80003FFFFFF83FFF80000FFFFFE03FFF80
0001FFFF801FFF0000003FF80000000039567BD447>I<000003FFE0000000007FFFFE00
000001FFFFFFC0000007FFFFFFF000001FFFFFFFF800003FFFFFFFFC0000FFFFFFFFFE00
01FFFFFFFFFF0003FFFF80FFFF8003FFFC001FFFC007FFF00007FFC00FFFE00003FFE00F
FFC00003FFE01FFF800001FFF01FFF800001FFF03FFF000000FFF83FFF000000FFF87FFF
000000FFF87FFE000000FFF87FFE0000007FF87FFE0000007FFCFFFE0000007FFCFFFE00
00007FFCFFFE0000007FFCFFFFFFFFFFFFFCFFFFFFFFFFFFFCFFFFFFFFFFFFFCFFFFFFFF
FFFFFCFFFFFFFFFFFFFCFFFFFFFFFFFFFCFFFFFFFFFFFFF8FFFC0000000000FFFC000000
0000FFFE0000000000FFFE00000000007FFE00000000007FFE00000000007FFE00000000
007FFF00000000003FFF00000000003FFF00000000003FFF80000000001FFF8000000030
1FFFC0000000700FFFE0000001F00FFFF0000007F007FFF800001FF003FFFE00007FF801
FFFFC00FFFF800FFFFFFFFFFF8007FFFFFFFFFF8003FFFFFFFFFF8000FFFFFFFFFE00007
FFFFFFFF800000FFFFFFFC0000003FFFFFE000000001FFFC000036397CB73F>I<7FF8FF
FCFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFC7FF8000000000000000000
000000000000000000000000000000000000000000000000003FFC7FFEFFFEFFFEFFFEFF
FEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFF
FEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFF
FEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFE7FFE3FFC0F5678D520>105
D<3FFC7FFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFF
FEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFF
FEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFF
FEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFF
FEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFE7FFE3FFC0F5578D420>108
D<00000007FF8000001FFE00003FFC003FFFF80000FFFFE0007FFE00FFFFFE0003FFFFF8
00FFFE03FFFFFF000FFFFFFC00FFFE0FFFFFFF803FFFFFFE00FFFE1FFFFFFFC07FFFFFFF
00FFFE7FFFFFFFE1FFFFFFFF80FFFEFFFFFFFFE3FFFFFFFF80FFFFFF807FFFF7FE01FFFF
C0FFFFFE001FFFF7F8007FFFC0FFFFF8000FFFFFE0003FFFC0FFFFF00007FFFFC0001FFF
E0FFFFE00007FFFF80001FFFE0FFFFC00003FFFF00000FFFE0FFFFC00003FFFF00000FFF
E0FFFF800003FFFE00000FFFE0FFFF800003FFFE00000FFFE0FFFF000003FFFC00000FFF
E0FFFF000003FFFC00000FFFE0FFFF000003FFFC00000FFFE0FFFE000003FFF800000FFF
E0FFFE000003FFF800000FFFE0FFFE000003FFF800000FFFE0FFFE000003FFF800000FFF
E0FFFE000003FFF800000FFFE0FFFE000003FFF800000FFFE0FFFE000003FFF800000FFF
E0FFFE000003FFF800000FFFE0FFFE000003FFF800000FFFE0FFFE000003FFF800000FFF
E0FFFE000003FFF800000FFFE0FFFE000003FFF800000FFFE0FFFE000003FFF800000FFF
E0FFFE000003FFF800000FFFE0FFFE000003FFF800000FFFE0FFFE000003FFF800000FFF
E0FFFE000003FFF800000FFFE0FFFE000003FFF800000FFFE0FFFE000003FFF800000FFF
E0FFFE000003FFF800000FFFE0FFFE000003FFF800000FFFE0FFFE000003FFF800000FFF
E0FFFE000003FFF800000FFFE0FFFE000003FFF800000FFFE0FFFE000003FFF800000FFF
E0FFFE000003FFF800000FFFE0FFFE000003FFF800000FFFE0FFFE000003FFF800000FFF
E0FFFE000003FFF800000FFFE0FFFE000003FFF800000FFFE0FFFE000003FFF800000FFF
E0FFFE000003FFF800000FFFE0FFFE000003FFF800000FFFE07FFE000001FFF8000007FF
E03FFC000000FFF0000003FFC05B3777B66E>I<00000007FF00003FFC007FFFF0007FFE
01FFFFFC00FFFE07FFFFFE00FFFE0FFFFFFF00FFFE3FFFFFFF80FFFE7FFFFFFFC0FFFEFF
FFFFFFC0FFFFFF807FFFE0FFFFFC003FFFE0FFFFF8001FFFE0FFFFF0000FFFF0FFFFE000
0FFFF0FFFFC00007FFF0FFFFC00007FFF0FFFF800007FFF0FFFF800007FFF0FFFF000007
FFF0FFFF000007FFF0FFFF000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FF
F0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0
FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FF
FE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE
000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE00
0007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE0000
07FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF07FFE000007
FFF03FFC000003FFE0343777B647>I<000001FFF800000000003FFFFFC000000001FFFF
FFF800000007FFFFFFFE0000001FFFFFFFFF8000003FFFFFFFFFC00000FFFFFFFFFFF000
01FFFFFFFFFFF80003FFFF801FFFFC0003FFFC0003FFFC0007FFF00000FFFE000FFFE000
007FFF000FFFC000003FFF001FFFC000003FFF801FFF8000001FFF803FFF8000001FFFC0
3FFF0000000FFFC03FFF0000000FFFC07FFF0000000FFFE07FFE00000007FFE07FFE0000
0007FFE07FFE00000007FFE0FFFE00000007FFF0FFFE00000007FFF0FFFE00000007FFF0
FFFE00000007FFF0FFFE00000007FFF0FFFE00000007FFF0FFFE00000007FFF0FFFE0000
0007FFF0FFFE00000007FFF0FFFE00000007FFF0FFFE00000007FFF0FFFE00000007FFF0
FFFE00000007FFF0FFFE00000007FFF07FFE00000007FFE07FFF0000000FFFE07FFF0000
000FFFE07FFF0000000FFFE03FFF0000000FFFC03FFF8000001FFFC03FFF8000001FFFC0
1FFFC000003FFF801FFFC000003FFF800FFFE000007FFF000FFFF80001FFFF0007FFFC00
03FFFE0003FFFF801FFFFC0001FFFFFFFFFFF80000FFFFFFFFFFF000007FFFFFFFFFE000
001FFFFFFFFF8000000FFFFFFFFF00000001FFFFFFF8000000003FFFFFC00000000003FF
FC0000003C397CB745>I<00000007FF0000003FFC00FFFFE000007FFE03FFFFF80000FF
FE1FFFFFFE0000FFFE3FFFFFFF8000FFFEFFFFFFFFC000FFFFFFFFFFFFE000FFFFFFFFFF
FFF000FFFFFE00FFFFF800FFFFF0001FFFF800FFFFC0000FFFFC00FFFF800007FFFC00FF
FF000003FFFE00FFFE000001FFFE00FFFE000001FFFE00FFFE000000FFFF00FFFE000000
FFFF00FFFE0000007FFF00FFFE0000007FFF00FFFE0000007FFF00FFFE0000007FFF80FF
FE0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE000000
3FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FF
FE0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE000000
7FFF80FFFE0000007FFF80FFFE0000007FFF00FFFE0000007FFF00FFFE000000FFFF00FF
FE000000FFFF00FFFE000000FFFE00FFFE000001FFFE00FFFF000003FFFE00FFFF000003
FFFC00FFFF800007FFFC00FFFFE0000FFFF800FFFFF0003FFFF800FFFFFE01FFFFF000FF
FFFFFFFFFFE000FFFFFFFFFFFFC000FFFEFFFFFFFF8000FFFE7FFFFFFF0000FFFE1FFFFF
FC0000FFFE07FFFFF00000FFFE01FFFF800000FFFE003FF8000000FFFE000000000000FF
FE000000000000FFFE000000000000FFFE000000000000FFFE000000000000FFFE000000
000000FFFE000000000000FFFE000000000000FFFE000000000000FFFE000000000000FF
FE000000000000FFFE000000000000FFFE000000000000FFFE000000000000FFFE000000
000000FFFE000000000000FFFE000000000000FFFE000000000000FFFE000000000000FF
FE0000000000007FFE0000000000003FFC000000000000394E78B647>I<00000FFE001F
FF000000FFFFC03FFF800007FFFFF03FFF80001FFFFFFC3FFF80003FFFFFFE3FFF8000FF
FFFFFF3FFF8001FFFFFFFFBFFF8003FFFFFFFFFFFF8007FFFFC03FFFFF8007FFFE000FFF
FF800FFFF80003FFFF801FFFF00001FFFF801FFFE00001FFFF803FFFE00000FFFF803FFF
C000007FFF803FFF8000007FFF807FFF8000003FFF807FFF8000003FFF807FFF0000003F
FF807FFF0000003FFF80FFFF0000003FFF80FFFF0000003FFF80FFFE0000003FFF80FFFE
0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE0000003F
FF80FFFE0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FFFE
0000003FFF80FFFE0000003FFF80FFFE0000003FFF80FFFF0000003FFF807FFF0000003F
FF807FFF0000003FFF807FFF0000003FFF807FFF8000003FFF807FFF8000003FFF803FFF
C000003FFF803FFFC000007FFF801FFFE00000FFFF801FFFF00001FFFF800FFFF80007FF
FF800FFFFC000FFFFF8007FFFF807FFFFF8003FFFFFFFFFFFF8003FFFFFFFFBFFF8000FF
FFFFFF3FFF80007FFFFFFE3FFF80003FFFFFF83FFF80000FFFFFE03FFF800001FFFF803F
FF8000003FF8003FFF8000000000003FFF8000000000003FFF8000000000003FFF800000
0000003FFF8000000000003FFF8000000000003FFF8000000000003FFF8000000000003F
FF8000000000003FFF8000000000003FFF8000000000003FFF8000000000003FFF800000
0000003FFF8000000000003FFF8000000000003FFF8000000000003FFF8000000000003F
FF8000000000003FFF8000000000003FFF8000000000003FFF8000000000003FFF800000
0000001FFF00394E7BB647>I<00000003F03FF8001FF07FFC007FF0FFFC01FFF0FFFC07
FFF0FFFC0FFFF0FFFC1FFFF0FFFC3FFFF0FFFC7FFFF0FFFCFFFFF0FFFDFFFFF0FFFDFFFC
00FFFFFFE000FFFFFF0000FFFFFE0000FFFFF80000FFFFF00000FFFFE00000FFFFC00000
FFFFC00000FFFF800000FFFF800000FFFF000000FFFF000000FFFF000000FFFE000000FF
FE000000FFFE000000FFFE000000FFFE000000FFFE000000FFFE000000FFFE000000FFFE
000000FFFE000000FFFE000000FFFE000000FFFE000000FFFE000000FFFE000000FFFE00
0000FFFE000000FFFE000000FFFE000000FFFE000000FFFE000000FFFE000000FFFE0000
00FFFE000000FFFE000000FFFE000000FFFE000000FFFE0000007FFE0000003FFC000000
243778B62F>I<0001FFFE0000001FFFFFE000007FFFFFFC0001FFFFFFFF8003FFFFFFFF
E007FFFFFFFFE00FFFFFFFFFE01FFFFFFFFFE01FFFFFFFFFC03FFF0007FFC03FFC00007F
C03FF800001FC07FF8000007C07FF0000001C07FF0000000807FF0000000007FF8000000
007FF8000000007FFC000000007FFF000000007FFFF00000003FFFFF8000003FFFFFFC00
003FFFFFFF80001FFFFFFFE0000FFFFFFFF8000FFFFFFFFC0007FFFFFFFF0003FFFFFFFF
8000FFFFFFFFC0007FFFFFFFC0001FFFFFFFE00007FFFFFFF000007FFFFFF0000003FFFF
F00000001FFFF800000003FFF800000000FFF8000000007FF8000000007FF8200000003F
F8380000003FF87C0000003FF87E0000003FF87F8000007FF87FE00000FFF07FFC0001FF
F07FFFC007FFF0FFFFFFFFFFE0FFFFFFFFFFE0FFFFFFFFFFC0FFFFFFFFFF803FFFFFFFFF
000FFFFFFFFE0001FFFFFFF800001FFFFFC0000000FFFC00002D397CB735>I<003FFC00
0000007FFE00000000FFFE00000000FFFE00000000FFFE00000000FFFE00000000FFFE00
000000FFFE00000000FFFE00000000FFFE00000000FFFE00000000FFFE00000000FFFE00
000000FFFE00000000FFFE0000003FFFFFFFFE007FFFFFFFFF00FFFFFFFFFF00FFFFFFFF
FF00FFFFFFFFFF00FFFFFFFFFF007FFFFFFFFE0000FFFE00000000FFFE00000000FFFE00
000000FFFE00000000FFFE00000000FFFE00000000FFFE00000000FFFE00000000FFFE00
000000FFFE00000000FFFE00000000FFFE00000000FFFE00000000FFFE00000000FFFE00
000000FFFE00000000FFFE00000000FFFE00000000FFFE00000000FFFE00000000FFFE00
000000FFFE00000000FFFE00000000FFFE00000000FFFE00000000FFFE00000000FFFE00
000000FFFE00000000FFFE00000000FFFE00000000FFFE00000000FFFE00000000FFFE00
000000FFFE00000000FFFE00000000FFFF00000000FFFF00030000FFFF000700007FFF80
1F80007FFFC0FF80007FFFFFFF80007FFFFFFFC0003FFFFFFFC0003FFFFFFFC0001FFFFF
FE00000FFFFFF0000003FFFF80000000FFF000002A467DC432>I<3FFC000003FFE07FFE
000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE00
0007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE0000
07FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007
FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FF
F0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0
FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FF
FE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE000007FFF0FFFE
000007FFF0FFFE000007FFF0FFFE00000FFFF0FFFE00000FFFF0FFFE00001FFFF0FFFE00
001FFFF0FFFE00003FFFF0FFFE00007FFFF0FFFF0000FFFFF07FFF0003FFFFF07FFFC00F
FFFFF03FFFFFFFF7FFF03FFFFFFFE7FFF01FFFFFFFC7FFF00FFFFFFF07FFF003FFFFFC07
FFF000FFFFF003FFE0001FFF00000000343777B547>I<7FE000000007FEFFF80000000F
FFFFF80000001FFFFFFC0000003FFF7FFC0000003FFE7FFE0000003FFE7FFE0000007FFE
3FFE0000007FFC3FFF0000007FFC3FFF000000FFFC1FFF000000FFF81FFF800001FFF80F
FF800001FFF00FFFC00001FFF00FFFC00003FFF007FFC00003FFE007FFE00003FFE007FF
E00007FFE003FFE00007FFC003FFF0000FFFC001FFF0000FFF8001FFF8000FFF8001FFF8
001FFF8000FFF8001FFF0000FFFC001FFF0000FFFC003FFF00007FFC003FFE00007FFE00
7FFE00003FFE007FFC00003FFF007FFC00003FFF00FFFC00001FFF00FFF800001FFF80FF
F800001FFF81FFF800000FFF81FFF000000FFFC3FFF0000007FFC3FFE0000007FFE3FFE0
000007FFE7FFE0000003FFE7FFC0000003FFF7FFC0000003FFFFFFC0000001FFFFFF8000
0001FFFFFF80000000FFFFFF00000000FFFFFF00000000FFFFFF000000007FFFFE000000
007FFFFE000000007FFFFE000000003FFFFC000000003FFFFC000000001FFFF800000000
0FFFF0000038367DB53F>I<00000000FFFFF80000000003FFFFF00000000007FFFFC000
0000000FFFFF00000000003FFFF800000000007FFFE00000000001FFFF800000000003FF
FC00000000000FFFF000000000001FFFC000000000007FFE000000000000FFF800000000
0000FFE00000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
3FFFFFFFFFFFFFF07FFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFF
FFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8
FFFFFFFFFFFFFFF8FFFE0000FFFFFFF0FFFE000000000000FFFE000000000000FFFE0000
00000000FFFE000000000000FFFE000000000000FFFE000000000000FFFE000000000000
FFFE000000000000FFFE000000000000FFFE000000000000FFFE000000000000FFFE0000
00000000FFFE000000000000FFFE000000000000FFFE000000000000FFFE000000000000
FFFE000000000000FFFE000000000000FFFE000000000000FFFE000000000000FFFE0000
00000000FFFE000000000000FFFE000000000000FFFE000000000000FFFFFFFFFFFFFF80
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFC0FFFFFFFF
FFFFFFC0FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFC0FFFFFFFFFFFFFF80FFFE000000000000
FFFE000000000000FFFE000000000000FFFE000000000000FFFE000000000000FFFE0000
00000000FFFE000000000000FFFE000000000000FFFE000000000000FFFE000000000000
FFFE000000000000FFFE000000000000FFFE000000000000FFFE000000000000FFFE0000
00000000FFFE000000000000FFFE000000000000FFFE000000000000FFFE000000000000
FFFE000000000000FFFE000000000000FFFE000000000000FFFE000000000000FFFE0000
00000000FFFE000000000000FFFE000000000000FFFE000000000000FFFFFFFFFFFFFFFC
FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFEFFFFFFFF
FFFFFFFEFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFE7FFFFFFFFFFFFFFE
3FFFFFFFFFFFFFFC3F6775E651>201 D<0000003FFF80000000007FFF8000000000FFFF
0000000001FFFC0000000003FFF80000000003FFF00000000007FFC0000000000FFF8000
0000001FFF00000000003FFE00000000007FF80000000000FFF00000000001FFE0000000
0001FF800000000003FF000000000007FE00000000000FF800000000000FF00000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000003FFE0000000007FFFFE00000001FFFFFFC0000007FFFFFFF000001FFF
FFFFF800003FFFFFFFFC0000FFFFFFFFFE0001FFFFFFFFFF0003FFFF80FFFF8003FFFC00
1FFFC007FFF00007FFC00FFFE00003FFE00FFFC00003FFE01FFF800001FFF01FFF800001
FFF03FFF000000FFF83FFF000000FFF87FFF000000FFF87FFE000000FFF87FFE0000007F
F87FFE0000007FFCFFFE0000007FFCFFFE0000007FFCFFFE0000007FFCFFFFFFFFFFFFFC
FFFFFFFFFFFFFCFFFFFFFFFFFFFCFFFFFFFFFFFFFCFFFFFFFFFFFFFCFFFFFFFFFFFFFCFF
FFFFFFFFFFF8FFFC0000000000FFFC0000000000FFFE0000000000FFFE00000000007FFE
00000000007FFE00000000007FFE00000000007FFF00000000003FFF00000000003FFF00
000000003FFF80000000001FFF80000000301FFFC0000000700FFFE0000001F00FFFF000
0007F007FFF800001FF003FFFE00007FF801FFFFC00FFFF800FFFFFFFFFFF8007FFFFFFF
FFF8003FFFFFFFFFF8000FFFFFFFFFE00007FFFFFFFF800000FFFFFFFC0000003FFFFFE0
00000001FFFC000036517CCF3F>233 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo ecrm0700 7 3
/Fo 3 111 df<000003E000003FE000003FE0000007E0000003E0000003E0000003E000
0003E0000003E0000003E0000003E0000003E0000003E0000003E0003F83E001FFE3E003
E03BE007800FE00F0007E01F0003E03E0003E07E0003E07C0003E07C0003E0FC0003E0FC
0003E0FC0003E0FC0003E0FC0003E0FC0003E0FC0003E07C0003E07C0003E07E0003E03E
0003E01E0007E01F000FE00F801FF003E073FE01FFE3FE007F03E01F297EA725>100
D<003F0001FFE003E1F00F80F81F007C1F003E3E003E7E001E7E001F7C001FFC001FFC00
1FFFFFFFFFFFFFFC0000FC0000FC0000FC00007C00007E00007E00033E00031F00070F80
0E07C01C03E07800FFE0003F80181C7E9A1E>I<0F81FC00FF8FFF00FF9C0F801FB007C0
0FE007C00FC003E00FC003E00FC003E00F8003E00F8003E00F8003E00F8003E00F8003E0
0F8003E00F8003E00F8003E00F8003E00F8003E00F8003E00F8003E00F8003E00F8003E0
0F8003E01FC007F0FFF83FFEFFF83FFE1F1A7E9925>110 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp ecrm1095 10.95 62
/Fp 62 235 df<000003FE000000001FFFC0000000FE01E0000001F80078000007E0001C
00000FC0007C00001F8000FE00003F0001FE00007F0001FE00007E0001FE0000FE0001FE
0000FC0000FC0000FC0000780000FC0000000000FC0000000000FC0000000000FC000000
0000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC000000
0000FC0000000000FC00007E00FFFFFFFFFE00FFFFFFFFFE00FFFFFFFFFE0000FC0001FE
0000FC0000FE0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0001FE0000FF007FFFF83FFFFC7FFFF83FFFFC7FFFF83FFFFC2E407FBF32
>28 D<1C007F00FF80FF80FFC0FFC0FFC07FC01CC000C000C000C000C000C001C0018001
8003800300070006000E000C001C003800700060000A1B78BE19>39
D<0000300000700000E00001C0000380000700000F00001E00003C00003C0000780000F0
0000F00001E00001E00003C00003C00007C0000780000F80000F80000F00001F00001F00
001E00003E00003E00003E00003C00007C00007C00007C00007C00007C00007C00007800
00F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F800
00F80000F80000F80000F80000F80000F800007800007C00007C00007C00007C00007C00
007C00003C00003E00003E00003E00001E00001F00001F00000F00000F80000F80000780
0007C00003C00003C00001E00001E00000F00000F000007800003C00003C00001E00000F
000007000003800001C00000E0000070000030145A77C323>I<C00000E0000070000038
00001C00000E00000F000007800003C00003C00001E00000F00000F00000780000780000
3C00003C00003E00001E00001F00001F00000F00000F80000F800007800007C00007C000
07C00003C00003E00003E00003E00003E00003E00003E00001E00001F00001F00001F000
01F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F000
01F00001F00001F00001E00003E00003E00003E00003E00003E00003E00003C00007C000
07C00007C0000780000F80000F80000F00001F00001F00001E00003E00003C00003C0000
780000780000F00000F00001E00003C00003C0000780000F00000E00001C000038000070
0000E00000C00000145A7BC323>I<1C007F00FF80FF80FFC0FFC0FFC07FC01CC000C000
C000C000C000C001C00180018003800300070006000E000C001C003800700060000A1B78
8819>44 D<FFFFFEFFFFFEFFFFFEFFFFFEFFFFFE17057F951E>I<1C007F00FF80FF80FF
80FF80FF807F001C000909788819>I<0003FC0000001FFF8000003E07C00000F801F000
01F000F80003E0007C0003C0003C0007C0003E000F80001F000F80001F001F00000F801F
00000F803F00000FC03F00000FC03F00000FC03F00000FC07E000007E07E000007E07E00
0007E07E000007E07E000007E0FE000007F0FE000007F0FE000007F0FE000007F0FE0000
07F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007
F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0
FE000007F0FE000007F07E000007E07E000007E07E000007E07E000007E07F00000FE03F
00000FC03F00000FC03F00000FC03F00000FC01F00000F801F80001F800F80001F000F80
001F0007C0003E0007C0003E0003E0007C0001F000F80000F801F000003E07C000001FFF
80000003FC0000243F7CBC2D>48 D<0000C0000003C0000007C000001FC000007FC00007
FFC000FFFFC000FF9FC000F81FC000001FC000001FC000001FC000001FC000001FC00000
1FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC00000
1FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC00000
1FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC00000
1FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC00000
1FC000001FC000001FC000001FC000001FC000001FC000001FC000007FF000FFFFFFF8FF
FFFFF8FFFFFFF81D3D78BC2D>I<0007FC0000003FFF800000FFFFE00001F00FF8000780
03FC000F0001FE000E0000FF001C00007F803800003FC03000003FC07000001FE0600000
1FE06000001FE0FE00000FF0FF00000FF0FF80000FF0FF80000FF0FF80000FF0FF80000F
F0FF80000FF07F00000FF01C00000FF00000000FE00000001FE00000001FE00000001FC0
0000003FC00000003F800000007F800000007F00000000FE00000001FC00000001FC0000
0003F800000007F00000000FE00000000FC00000001F800000003E000000007C00000000
F800000001F000000003E000000003C000000007800000000F000030001E000030003C00
0030007800003000F000006001E000006003C0000060078000006007000000E00FFFFFFF
E01FFFFFFFE03FFFFFFFE07FFFFFFFC0FFFFFFFFC0FFFFFFFFC0FFFFFFFFC0243D7CBC2D
>I<0007FC0000003FFF800000FFFFE00001F807F80007C003FC000F0001FE000E0000FF
001C00007F801F80007F803FC0003FC03FE0003FC03FE0003FC03FE0003FC03FE0003FC0
3FE0003FC01FC0003FC00700003FC00000003F800000007F800000007F800000007F0000
0000FF00000000FE00000001FC00000003F800000003F00000000FC00000003F0000001F
FC0000001FFF800000000FE000000003F800000001FC00000000FE000000007F00000000
7F800000003FC00000003FC00000003FE00000003FE00000001FE00000001FF00000001F
F00C00001FF03F00001FF07F80001FF0FFC0001FF0FFC0001FF0FFC0001FF0FFC0001FF0
FFC0003FE0FF80003FE07F00003FC07000003FC07000007F803800007F801C0000FF000F
0001FE0007C003FC0003F80FF00000FFFFE000003FFF80000007FC0000243F7CBC2D>I<
0000000E000000000E000000001E000000003E000000003E000000007E00000000FE0000
0000FE00000001FE00000003FE00000003FE00000006FE0000000EFE0000000CFE000000
18FE00000038FE00000030FE00000060FE000000E0FE000000C0FE00000180FE00000380
FE00000300FE00000600FE00000E00FE00000C00FE00001800FE00003800FE00003000FE
00006000FE0000E000FE0000C000FE00018000FE00038000FE00030000FE00060000FE00
0E0000FE000C0000FE00180000FE00380000FE00300000FE00600000FE00E00000FE00FF
FFFFFFFFFFFFFFFFFFFFFFFFFFFF000000FE00000000FE00000000FE00000000FE000000
00FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000
FE00000001FF000001FFFFFF0001FFFFFF0001FFFFFF283E7EBD2D>I<060000030007C0
000F0007F800FE0007FFFFFC0007FFFFFC0007FFFFF00007FFFFE00007FFFFC00007FFFF
0000063FF800000600000000060000000006000000000600000000060000000006000000
000600000000060000000006000000000600000000060000000006000000000600000000
0601FE0000060FFF8000063E03E000067001F80006E000FC0007C0007E000780003F0007
00003F800600001F800000001FC00000001FC00000001FE00000000FE00000000FE00000
000FE00000000FF00000000FF00000000FF00000000FF03E00000FF07F00000FF0FF8000
0FF0FF80000FF0FF80000FF0FF80000FF0FF00000FE0FE00001FE0E000001FE06000001F
C07000001FC03000003F803800003F801C00007F001E0000FE000F0001FC0007C003F800
03F00FE00000FFFFC000003FFF00000007F80000243F7CBC2D>I<00001FE0000000FFF8
000003FFFE00000FF01F00001F800780003F000380007E000FC000FC001FC001F8003FC0
03F0003FC003F0003FC007E0003FC00FE0001F800FC0000F001FC00000001FC00000001F
800000003F800000003F800000003F800000007F800000007F000000007F01FE00007F07
FF8000FF0E03E000FF1C01F000FF3800FC00FF70007E00FF60003E00FFE0003F00FFC000
1F80FFC0001FC0FF80001FC0FF80001FE0FF80000FE0FF80000FE0FF00000FF0FF00000F
F0FF00000FF0FF00000FF0FF00000FF0FF00000FF07F00000FF07F00000FF07F00000FF0
7F00000FF07F00000FF03F80000FF03F80000FE03F80000FE01F80000FE01F80001FC01F
C0001FC00FC0001F800FC0003F8007E0003F0003F0007E0001F800FC0000FC01F800007E
07F000003FFFE000000FFF80000003FC0000243F7CBC2D>I<300000000038000000003E
000000003FFFFFFFFC3FFFFFFFFC3FFFFFFFFC3FFFFFFFF87FFFFFFFF87FFFFFFFF07FFF
FFFFE070000000E060000001C0600000038060000003006000000700C000000E00C00000
0C00C000001C00C00000380000000030000000007000000000E000000001C00000000180
0000000380000000070000000007000000000E000000000E000000001C000000001C0000
00003C00000000380000000078000000007800000000F800000000F000000001F0000000
01F000000001F000000003F000000003F000000003F000000007F000000007E000000007
E000000007E00000000FE00000000FE00000000FE00000000FE00000000FE00000001FE0
0000001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE000
00001FE00000001FE00000000FC00000000780000026407BBD2D>I<0003FC0000001FFF
8000007FFFE00000FC03F80001E000FC0003C0003E000780001F000F00000F000E00000F
801E000007801C000007C03C000003C03C000003C03C000003C03E000003C03E000003C0
3F000003C03F000007C03F800007801FE0000F801FF0000F001FFC001E000FFE003C000F
FF80780007FFC0F00003FFF1E00001FFFF800000FFFF0000003FFF0000001FFFC000000F
FFE000001FFFF8000078FFFC0001F07FFE0003C01FFF0007800FFF800F0003FFC01F0001
FFC01E00007FE03C00003FE07C00000FE078000007F078000003F0F8000003F0F0000001
F0F0000001F0F0000000F0F0000000F0F0000000F0F0000000F0F8000000E078000001E0
78000001E07C000001C03E000003C01E000007801F00000F000FC0001E0007E0007C0001
FC03F80000FFFFE000001FFF80000003FC0000243F7CBC2D>I<0003FC0000001FFF0000
003FFFC00000FE07F00001F801F80003F000FC0007E0007C000FE0007E001FC0003F001F
80003F003F80001F803F80001F807F80001F807F00001FC07F00001FC0FF00001FC0FF00
000FE0FF00000FE0FF00000FE0FF00000FE0FF00000FE0FF00000FF0FF00000FF0FF0000
0FF0FF00000FF0FF00000FF0FF00000FF07F00001FF07F00001FF07F80001FF03F80001F
F03F80003FF01F80003FF00FC0007FF007C0006FF007E000EFF003F001CFF000F8038FF0
007C070FF0001FFE0FE00007F80FE00000000FE00000001FE00000001FE00000001FC000
00001FC00000001FC00000003F800000003F800F00003F001F80007F003FC0007E003FC0
007E003FC000FC003FC001F8003F8001F8003F0003F0001C0007E0001E001FC0000FC07F
000003FFFE000001FFF80000003FC00000243F7CBC2D>I<1C007F00FF80FF80FF80FF80
FF807F001C00000000000000000000000000000000000000000000000000000000000000
0000000000000000000000001C007F00FF80FF80FF80FF80FF807F001C00092778A619>
I<0000000000000E0000000000003C000000000000F0000000000007C000000000001F00
000000000078000000000001E00000000000078000000000001E000000000000F8000000
000003E000000000000F0000000000003C000000000000F0000000000003C00000000000
1F0000000000007C000000000001E00000000000078000000000001E0000000000007800
0000000003E000000000000F8000000000003C000000000000F0000000000000F0000000
0000003C0000000000000F80000000000003E0000000000000780000000000001E000000
0000000780000000000001E00000000000007C0000000000001F00000000000003C00000
00000000F00000000000003C0000000000000F00000000000003E0000000000000F80000
000000001E0000000000000780000000000001E0000000000000780000000000001F0000
0000000007C0000000000000F00000000000003C0000000000000E373279AF46>60
D<FFFFFFFFFFFFFFE0FFFFFFFFFFFFFFE000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00FFFFFFFFFFFFFFE0FFFFFFFFFFFFFFE03B147BA046>I<E00000000000007800000000
00001E00000000000007C0000000000001F00000000000003C0000000000000F00000000
000003C0000000000000F00000000000003E0000000000000F80000000000001E0000000
000000780000000000001E0000000000000780000000000001F00000000000007C000000
0000000F00000000000003C0000000000000F00000000000003C0000000000000F800000
00000003E0000000000000780000000000001E0000000000001E00000000000078000000
000003E000000000000F8000000000003C000000000000F0000000000003C00000000000
0F0000000000007C000000000001F00000000000078000000000001E0000000000007800
0000000001E000000000000F8000000000003E000000000000F0000000000003C0000000
00000F0000000000003C000000000001F0000000000007C000000000001E000000000000
78000000000000E0000000000000373279AF46>I<003FF80000FFFF0003C01FC00F0007
F01C0001F8380001FC700000FE600000FE7C00007FFE00007FFF00007FFF00007FFF0000
7FFF00007F7E00007F3C0000FF000000FE000000FE000001FC000003F8000007F000000F
E000000F8000001F0000003E0000003C00000078000000F8000000F0000000E0000001E0
000001C00000018000000380000003800000030000000300000003000000030000000300
000003000000030000000300000003000000030000000300000000000000000000000000
0000000000000000000000000000000000000000000000000000070000001FC000003FE0
00003FE000003FE000003FE000003FE000001FC0000007000020407BBF2B>I<00000007
00000000000000070000000000000007000000000000000F800000000000000F80000000
0000001FC00000000000001FC00000000000001FC00000000000003FE00000000000003F
E00000000000003FE00000000000007FF00000000000006FF00000000000006FF0000000
000000CFF8000000000000C7F8000000000000C7F800000000000187FC00000000000183
FC00000000000183FC00000000000301FE00000000000301FE00000000000301FE000000
00000600FF00000000000600FF00000000000E00FF80000000000C007F80000000000C00
7F80000000001C007FC00000000018003FC00000000018003FC00000000030003FE00000
000030001FE00000000030001FE00000000060001FF00000000060000FF0000000006000
0FF000000000C00007F800000000C00007F800000000C00007F800000001800003FC0000
0001FFFFFFFC00000003FFFFFFFE00000003FFFFFFFE00000003000001FE000000070000
01FF00000006000000FF00000006000000FF0000000C000000FF8000000C0000007F8000
000C0000007F800000180000007FC00000180000003FC00000180000003FC00000300000
001FE00000300000001FE00000700000001FE00000700000000FF00000F00000000FF000
01F00000000FF80003F80000000FF8000FFE0000003FFE00FFFFC00007FFFFF8FFFFC000
07FFFFF8FFFFC00007FFFFF83D417DC044>65 D<FFFFFFFFFC0000FFFFFFFFFFC000FFFF
FFFFFFF00000FFC0000FFC00007F800003FE00007F800000FF00007F8000007F80007F80
00003FC0007F8000003FE0007F8000001FE0007F8000001FF0007F8000000FF0007F8000
000FF8007F8000000FF8007F8000000FF8007F8000000FF8007F8000000FF8007F800000
0FF8007F8000000FF8007F8000000FF0007F8000001FF0007F8000001FE0007F8000003F
E0007F8000003FC0007F8000007F80007F800000FF00007F800003FE00007F80000FF800
007F80007FE000007FFFFFFF0000007FFFFFFFE000007F800003FC00007F800000FE0000
7F8000007F80007F8000003FC0007F8000001FE0007F8000000FF0007F8000000FF8007F
80000007F8007F80000007FC007F80000003FC007F80000003FC007F80000003FE007F80
000003FE007F80000003FE007F80000003FE007F80000003FE007F80000003FE007F8000
0003FE007F80000003FC007F80000007FC007F80000007FC007F8000000FF8007F800000
0FF0007F8000001FF0007F8000003FE0007F8000007FC0007F800001FF8000FFC0000FFE
00FFFFFFFFFFFC00FFFFFFFFFFE000FFFFFFFFFF0000373E7DBD40>I<0000003FF0000C
000003FFFE001C00001FFFFF801C00007FE00FC03C0000FF0001F07C0003FC0000787C00
07F000003CFC001FE000000FFC003FC0000007FC007F80000003FC00FF00000003FC01FE
00000001FC01FC00000000FC03FC00000000FC07F8000000007C07F8000000007C0FF000
0000003C0FF0000000003C1FE0000000001C1FE0000000001C3FE0000000001C3FC00000
00001C3FC0000000000C7FC0000000000C7FC0000000000C7FC0000000000C7F80000000
0000FF800000000000FF800000000000FF800000000000FF800000000000FF8000000000
00FF800000000000FF800000000000FF800000000000FF800000000000FF800000000000
FF800000000000FF8000000000007F8000000000007FC000000000007FC0000000000C7F
C0000000000C3FC0000000000C3FC0000000000C3FE0000000000C1FE0000000001C1FE0
00000000180FF000000000180FF0000000001807F8000000003807F8000000003003FC00
0000007001FC000000006001FE00000000E000FF00000001C0007F8000000380003FC000
000780001FE000000F000007F000001E000003FC00003C000000FF0000F00000007FE007
E00000001FFFFF8000000003FFFE00000000003FF0000036427BBF41>I<FFFFFFFFFFFF
80FFFFFFFFFFFF80FFFFFFFFFFFF8000FFC00003FF80007F8000003F80007F8000001FC0
007F80000007C0007F80000003C0007F80000003C0007F80000001C0007F80000001C000
7F80000001C0007F80000000C0007F80000000C0007F80000000C0007F80000000C0007F
8000000060007F8000000060007F8000300060007F8000300060007F8000300060007F80
00300000007F8000300000007F8000300000007F8000700000007F8000700000007F8000
F00000007F8001F00000007F8007F00000007FFFFFF00000007FFFFFF00000007FFFFFF0
0000007F8007F00000007F8001F00000007F8000F00000007F8000700000007F80007000
00007F8000300000007F8000300000007F8000300000007F8000300000007F8000300000
007F8000300000007F8000000000007F8000000000007F8000000000007F800000000000
7F8000000000007F8000000000007F8000000000007F8000000000007F8000000000007F
8000000000007F8000000000007F8000000000007F8000000000007F8000000000007F80
0000000000FFE000000000FFFFFFF0000000FFFFFFF0000000FFFFFFF0000000333E7DBD
3B>70 D<FFFFFFF00000FFFFFFF00000FFFFFFF0000000FFE0000000007F80000000007F
80000000007F80000000007F80000000007F80000000007F80000000007F80000000007F
80000000007F80000000007F80000000007F80000000007F80000000007F80000000007F
80000000007F80000000007F80000000007F80000000007F80000000007F80000000007F
80000000007F80000000007F80000000007F80000000007F80000000007F80000000007F
80000000007F80000000007F80000000007F80000000007F80000000007F80000000007F
80000000007F80000000007F80000000007F80000003007F80000003007F80000003007F
80000003007F80000003007F80000007007F80000006007F80000006007F80000006007F
80000006007F8000000E007F8000000E007F8000000E007F8000001E007F8000001E007F
8000003E007F8000007E007F800000FE007F800001FC007F800007FC00FFC0003FFCFFFF
FFFFFFFCFFFFFFFFFFFCFFFFFFFFFFFC303E7DBD38>76 D<FFFF8000007FFFF8FFFFC000
007FFFF8FFFFE000007FFFF8007FE0000003FF00007FF0000000FC00006FF80000007800
006FFC00000030000067FC00000030000063FE00000030000063FF00000030000061FF00
000030000060FF800000300000607FC00000300000607FC00000300000603FE000003000
00601FF00000300000601FF00000300000600FF800003000006007FC00003000006007FC
00003000006003FE00003000006001FF00003000006001FF00003000006000FF80003000
0060007FC00030000060007FE00030000060003FE00030000060001FF00030000060001F
F80030000060000FF800300000600007FC00300000600007FE00300000600003FE003000
00600001FF00300000600000FF80300000600000FF803000006000007FC0300000600000
3FE03000006000003FE03000006000001FF03000006000000FF83000006000000FF83000
0060000007FC30000060000003FE30000060000003FE30000060000001FF300000600000
00FFB0000060000000FFF00000600000007FF00000600000003FF00000600000003FF000
00600000001FF00000600000000FF000006000000007F000006000000007F00000600000
0003F00000F000000001F00001F800000001F00007FE00000000F000FFFFF00000007000
FFFFF00000007000FFFFF000000030003D3E7DBD44>78 D<000000FFE0000000000007FF
FC00000000003FC07F8000000000FE000FE000000001F80003F000000007E00000FC0000
000FC000007E0000001F8000003F0000003F0000001F8000007E0000000FC00000FE0000
000FE00001FC00000007F00003F800000003F80003F800000003F80007F000000001FC00
07F000000001FC000FE000000000FE001FE000000000FF001FE000000000FF001FC00000
00007F003FC0000000007F803FC0000000007F803FC0000000007F807FC0000000007FC0
7F80000000003FC07F80000000003FC07F80000000003FC0FF80000000003FE0FF800000
00003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0
FF80000000003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0FF800000
00003FE0FF80000000003FE07F80000000003FC07FC0000000007FC07FC0000000007FC0
7FC0000000007FC07FC0000000007FC03FC0000000007F803FE000000000FF801FE00000
0000FF001FE000000000FF001FE000000000FF000FF000000001FE000FF000000001FE00
07F800000003FC0003F800000003F80003FC00000007F80001FC00000007F00000FE0000
000FE000007F0000001FC000003F8000003F8000001F8000003F0000000FE00000FE0000
0007F00001FC00000001F80003F000000000FE000FE0000000003FC07F800000000007FF
FC000000000000FFE00000003B427BBF46>I<FFFFFFFFF00000FFFFFFFFFF0000FFFFFF
FFFFC00000FFC0003FF000007F800007F800007F800001FE00007F800000FF00007F8000
007F00007F8000007F80007F8000003FC0007F8000003FC0007F8000001FE0007F800000
1FE0007F8000001FF0007F8000001FF0007F8000001FF0007F8000001FF0007F8000001F
F0007F8000001FF0007F8000001FF0007F8000001FF0007F8000001FE0007F8000001FE0
007F8000003FC0007F8000003FC0007F8000007F80007F8000007F00007F800000FE0000
7F800003FC00007F800007F800007F80003FE000007FFFFFFF8000007FFFFFFC0000007F
8000000000007F8000000000007F8000000000007F8000000000007F8000000000007F80
00000000007F8000000000007F8000000000007F8000000000007F8000000000007F8000
000000007F8000000000007F8000000000007F8000000000007F8000000000007F800000
0000007F8000000000007F8000000000007F8000000000007F8000000000007F80000000
00007F8000000000007F8000000000007F8000000000007F800000000000FFC000000000
FFFFFFC0000000FFFFFFC0000000FFFFFFC0000000343E7DBD3D>I<FFFFFFFFC0000000
FFFFFFFFFC000000FFFFFFFFFF80000000FFC0007FE00000007F80000FF00000007F8000
03FC0000007F800001FE0000007F800000FF0000007F8000007F8000007F8000003FC000
007F8000003FC000007F8000003FE000007F8000001FE000007F8000001FF000007F8000
001FF000007F8000001FF000007F8000001FF000007F8000001FF000007F8000001FF000
007F8000001FF000007F8000001FE000007F8000003FE000007F8000003FC000007F8000
003F8000007F8000007F8000007F800000FF0000007F800001FC0000007F800003F80000
007F80000FE00000007F8000FF800000007FFFFFFC000000007FFFFFF8000000007F8000
FF000000007F80003FC00000007F80000FE00000007F800007F00000007F800003F80000
007F800003FC0000007F800001FE0000007F800001FE0000007F800000FF0000007F8000
00FF0000007F800000FF0000007F800000FF0000007F800000FF0000007F800000FF0000
007F800000FF8000007F800000FF8000007F800000FF8000007F800000FF8000007F8000
00FF8000007F800000FF8000007F800000FF8000007F800000FF8006007F800000FFC006
007F8000007FC006007F8000007FC006007F8000007FC00E00FFC000003FE00CFFFFFFC0
001FE01CFFFFFFC0000FF038FFFFFFC00007F870000000000001FFE00000000000003F80
3F407DBD43>82 D<0007FC0018003FFF803800FFFFE03801FC03F87803F0007C7807C000
1EF80F80000FF81F000007F83F000003F83E000001F87E000000F87E000000F87C000000
78FC00000078FC00000078FC00000038FC00000038FC00000038FE00000018FE00000018
FF00000018FF000000187F800000007FC00000007FE00000003FF80000003FFF0000001F
FFF000000FFFFF00000FFFFFF00007FFFFFC0001FFFFFE0000FFFFFF80003FFFFFC00007
FFFFE000007FFFE0000007FFF00000007FF80000001FF80000000FFC00000007FC000000
03FC00000001FE00000001FEC0000000FEC0000000FEC0000000FEC00000007EC0000000
7EE00000007EE00000007EE00000007EE00000007CF00000007CF0000000FCF8000000F8
FC000001F8FE000001F0FF000003F0FF800007E0FBE0000FC0F1F8001F80F07F007F00E0
1FFFFC00E007FFF000C0007FC00027427BBF32>I<FFFFFE000003FFFEFFFFFE000003FF
FEFFFFFE000003FFFE03FFC00000007FE001FF800000001F8000FF000000001F0000FF80
0000000E00007F800000000C00007F800000000C00007FC00000001C00003FC000000018
00003FE00000001800001FE00000003000001FE00000003000001FF00000007000000FF0
0000006000000FF000000060000007F8000000C0000007F8000000C0000007FC000000C0
000003FC00000180000003FC00000180000003FE00000380000001FE00000300000001FF
00000300000000FF00000600000000FF00000600000000FF80000E000000007F80000C00
0000007F80000C000000003FC00018000000003FC00018000000003FE00018000000001F
E00030000000001FE00030000000001FF00070000000000FF00060000000000FF8006000
00000007F800C00000000007F800C00000000007FC01C00000000003FC01800000000003
FC01800000000001FE03000000000001FE03000000000001FF03000000000000FF060000
00000000FF06000000000000FF8E0000000000007F8C0000000000007FCC000000000000
3FD80000000000003FD80000000000003FF80000000000001FF00000000000001FF00000
000000000FE00000000000000FE00000000000000FE000000000000007C0000000000000
07C000000000000007C0000000000000038000000000000003800000003F407EBD44>86
D<001FF0000000FFFC000003E03F00000F000FC0001C0007E0001F0003F0003F8001F800
3FC000FC003FC000FC003FC000FC003FC0007E001F80007E000F00007E000000007E0000
00007E000000007E000000007E0000001FFE000003FFFE00001FF87E00007F807E0001FC
007E0007F0007E000FE0007E001FC0007E003F80007E007F80007E007F00007E007F0000
7E03FE00007E03FE00007E03FE00007E03FE0000FE03FE0000FE03FE0001FE037F0001BE
037F0003BE033F80071F061FC00E1F8E0FF03C0FFC03FFF007F8003FC003E0282A7CA82D
>97 D<01F800000000FFF800000000FFF800000000FFF80000000007F80000000003F800
00000001F80000000001F80000000001F80000000001F80000000001F80000000001F800
00000001F80000000001F80000000001F80000000001F80000000001F80000000001F800
00000001F80000000001F80000000001F80000000001F80000000001F80000000001F807
F8000001F81FFF000001F8780FC00001F9E003F00001FB8001F80001FF0000FC0001FE00
007E0001FC00003F0001FC00001F8001F800001F8001F800001FC001F800000FC001F800
000FE001F800000FE001F8000007E001F8000007F001F8000007F001F8000007F001F800
0007F001F8000007F001F8000007F001F8000007F001F8000007F001F8000007F001F800
0007F001F8000007E001F800000FE001F800000FE001F800000FE001F800000FC001F800
001FC001F800001F8001FC00003F0001FE00003F0001F600007E0001F70000FC0001E380
01F80001C1C003E00001C0F81F800001803FFE0000000007F000002C407EBE32>I<0001
FF0000000FFFE000003F00F800007C001E0001F800070003F0001F0007E0003F800FC000
7F800FC0007F801F80007F801F80007F803F00003F003F00001E007F000000007F000000
007E00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000
FE00000000FE00000000FE00000000FE00000000FE000000007F000000007F000000007F
000000003F000000C03F800000C01F800001C01FC00001800FC000038007E000070003F0
00060001F8001E0000FC003800003F01F000000FFFC0000001FE0000222A7DA828>I<00
000001F800000000FFF800000000FFF800000000FFF80000000007F80000000003F80000
000001F80000000001F80000000001F80000000001F80000000001F80000000001F80000
000001F80000000001F80000000001F80000000001F80000000001F80000000001F80000
000001F80000000001F80000000001F80000000001F80000000001F8000000FF01F80000
07FFC1F800001F80F1F800007C0039F80001F8001DF80003F0000FF80007E00007F8000F
C00003F8000FC00003F8001F800001F8003F800001F8003F000001F8007F000001F8007F
000001F8007F000001F8007E000001F800FE000001F800FE000001F800FE000001F800FE
000001F800FE000001F800FE000001F800FE000001F800FE000001F800FE000001F800FE
000001F8007E000001F8007F000001F8007F000001F8003F000001F8003F800001F8001F
800003F8001F800003F8000FC00007F80007E0000FF80003F0000DFC0001F8003DFE0000
FC0071FFF0003F01E1FFF0000FFF81FFF00001FE01F8002C407DBE32>I<0003FC000000
1FFF8000007E07E00000F801F00001F000F80003E0007C0007C0003E000FC0003F001F80
001F001F80001F803F00001F803F00000F807F00000F807F00000FC07E00000FC07E0000
0FC0FE00000FC0FE00000FC0FFFFFFFFC0FFFFFFFFC0FE00000000FE00000000FE000000
00FE00000000FE00000000FE000000007E000000007F000000007F000000007F00000000
3F000000C03F800000C01F800001C00FC00001800FC000038007E000070003F0000E0001
F8001C0000FC003800003F01F000000FFFC0000001FE0000222A7DA828>I<00001FC000
00FFF00003F0380007C0FC000F81FE001F81FE003F01FE003E01FE007E01FE007E00FC00
FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000
FC000000FC000000FC000000FC000000FC000000FC0000FFFFFF00FFFFFF00FFFFFF0000
FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000
FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000
FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000
FC000000FC000000FC000000FC000000FC000001FE00007FFFFE007FFFFE007FFFFE001F
407FBF1C>I<000000007E000003FC01FF00000FFF078780003E07CE0F8000FC03FC0F80
01F801F80F8003F000FC070003E0007C000007E0007E000007E0007E00000FC0003F0000
0FC0003F00000FC0003F00000FC0003F00000FC0003F00000FC0003F00000FC0003F0000
0FC0003F000007E0007E000007E0007E000003E0007C000003F000FC000001F801F80000
01FC03F0000001BE07C00000038FFF0000000303FC000000070000000000070000000000
07000000000007000000000007800000000007800000000007C00000000003E000000000
03FFFFF0000001FFFFFE000001FFFFFF8000007FFFFFE00001FFFFFFF80007C0001FF800
1F800003FC003F000000FE003E0000007E007C0000003E007C0000003F00F80000001F00
F80000001F00F80000001F00F80000001F00F80000001F00FC0000003F007C0000003E00
7E0000007E003F000000FC001F800001F8000FC00003F00003F0000FC00000FE007F0000
003FFFFC00000003FFC00000293D7EA82D>I<01F800000000FFF800000000FFF8000000
00FFF80000000007F80000000003F80000000001F80000000001F80000000001F8000000
0001F80000000001F80000000001F80000000001F80000000001F80000000001F8000000
0001F80000000001F80000000001F80000000001F80000000001F80000000001F8000000
0001F80000000001F80000000001F803FC000001F80FFF800001F83C0FC00001F8F003E0
0001F9C003F00001FB8001F80001FB0001F80001FF0000FC0001FE0000FC0001FE0000FC
0001FC0000FC0001FC0000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0003FC0001FE00FFFFF07FFFF8FFFFF07FFFF8FFFFF07FFF
F82D3F7EBE32>I<01C00007F0000FF8000FF8000FF8000FF8000FF80007F00001C00000
000000000000000000000000000000000000000000000000000000000000000000000001
F8007FF8007FF8007FF80007F80003F80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80003
FC00FFFFE0FFFFE0FFFFE0133D7EBC19>I<0000700001FC0003FE0003FE0003FE0003FE
0003FE0001FC000070000000000000000000000000000000000000000000000000000000
0000000000000000000000FE003FFE003FFE003FFE0001FE0000FE00007E00007E00007E
00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E
00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E
00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E
00007E00007E00007E3C007E7E007CFF00FCFF00FCFF00F8FF01F8FE01F07803E03E07C0
0FFF0001FC00175084BC1C>I<01F800FFF800FFF800FFF80007F80003F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80003FC00FFFFF0FFFFF0FFFFF0143F7EBE19>108
D<01F803FC0001FE0000FFF80FFF8007FFC000FFF83C0FC01E07E000FFF8F003E07801F0
0007F9C003F0E001F80003FB8001F9C000FC0001FB0001F98000FC0001FF0000FF80007E
0001FE0000FF00007E0001FE0000FF00007E0001FC0000FE00007E0001FC0000FE00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0003FC0001FE0000FF00FFFFF07FFFF83FFFFCFFFFF07FFFF83FFFFCFFFFF07FFFF83FFF
FC46287EA74B>I<01F803FC0000FFF80FFF8000FFF83C0FC000FFF8F003E00007F9C003
F00003FB8001F80001FB0001F80001FF0000FC0001FE0000FC0001FE0000FC0001FC0000
FC0001FC0000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0003FC0001FE00FFFFF07FFFF8FFFFF07FFFF8FFFFF07FFFF82D287EA7
32>I<0001FE0000000FFFC000003F03F000007C00F80001F0003E0003E0001F0007C000
0F8007C0000F800F800007C01F800007E01F000003E03F000003F03F000003F07E000001
F87E000001F87E000001F87E000001F8FE000001FCFE000001FCFE000001FCFE000001FC
FE000001FCFE000001FCFE000001FCFE000001FCFE000001FC7E000001F87E000001F87E
000001F87F000003F83F000003F03F000003F01F800007E00F800007C00FC0000FC007C0
000F8003E0001F0001F0003E0000FC00FC00003F03F000000FFFC0000001FE0000262A7D
A82D>I<01F807F80000FFF81FFF0000FFF8780FC000FFF9E003F00003FB8001F80001FF
0000FC0001FE00007E0001FC00007F0001FC00003F8001F800001F8001F800001FC001F8
00001FC001F800000FE001F800000FE001F800000FE001F800000FF001F8000007F001F8
000007F001F8000007F001F8000007F001F8000007F001F8000007F001F8000007F001F8
000007F001F8000007F001F800000FE001F800000FE001F800000FE001F800000FE001F8
00001FC001F800001FC001F800003F8001FC00003F0001FE00007F0001FE0000FE0001FF
0001FC0001FB8003F80001F9C007E00001F8F81F800001F83FFE000001F807F0000001F8
0000000001F80000000001F80000000001F80000000001F80000000001F80000000001F8
0000000001F80000000001F80000000001F80000000001F80000000001F80000000001F8
0000000003FC00000000FFFFF0000000FFFFF0000000FFFFF00000002C3A7EA732>I<00
00FF000C000007FFC01C00001F80F01C00007E00381C0000FC001C3C0003F8000E3C0007
F000077C0007E000037C000FC00003FC001FC00001FC003F800001FC003F800000FC007F
000000FC007F000000FC007F000000FC007F000000FC00FE000000FC00FE000000FC00FE
000000FC00FE000000FC00FE000000FC00FE000000FC00FE000000FC00FE000000FC00FE
000000FC00FF000000FC007F000000FC007F000000FC007F000000FC003F800000FC003F
800001FC001FC00001FC000FC00003FC000FE00003FC0007E00007FC0003F0000EFC0001
F8001CFC00007E0078FC00003F01E0FC00000FFFC0FC000001FE00FC0000000000FC0000
000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000
000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000
000001FE000000007FFFF80000007FFFF80000007FFFF82D3A7DA730>I<03F00FC0FFF0
3FF0FFF0F0F8FFF1C3FC07F183FC03F383FC01F703FC01F603FC01F601F801FE006001FC
000001FC000001FC000001FC000001F8000001F8000001F8000001F8000001F8000001F8
000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8
000001F8000001F8000001F8000001F8000001F8000001F8000001F8000003FC0000FFFF
F800FFFFF800FFFFF8001E287EA723>I<007FC06003FFF8E007C03DE01E000FE03C0003
E0780001E0780001E0700000E0F00000E0F0000060F0000060F8000060F8000060FC0000
60FF0000007FC000007FFE00003FFFE0001FFFFC0007FFFE0003FFFF80007FFFC00007FF
E000003FE000000FF0C00003F0C00001F8C00000F8E00000F8E0000078E0000078F00000
78F0000078F8000078F80000F0FC0000F0FC0001E0FE0001C0F7800780F1E01F00E0FFFC
00C01FE0001D2A7DA824>I<001800000018000000180000001800000018000000180000
00380000003800000038000000380000007800000078000000F8000000F8000001F80000
03F8000007F800001FFFFFC0FFFFFFC0FFFFFFC001F8000001F8000001F8000001F80000
01F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F80000
01F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8006001F80060
01F8006001F8006001F8006001F8006001F8006001F8006001F8006000FC00E000FC00C0
00FC00C0007E01C0003F0380001F87000007FE000001F8001B397EB723>I<01F80000FC
00FFF8007FFC00FFF8007FFC00FFF8007FFC0007F80003FC0003F80001FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80001FC0001F80001FC
0001F80001FC0001F80003FC0000F80003FC0000FC0007FC0000FC000EFE00007C001CFF
00003E0038FFF8001F80F0FFF80007FFE0FFF80000FF00FC002D297EA732>I<FFFFC007
FFE0FFFFC007FFE0FFFFC007FFE007FC0001FF0003F800007C0003F80000780001F80000
700001FC0000700000FC0000600000FC00006000007E0000C000007E0000C000007F0001
C000003F00018000003F00018000001F80030000001F80030000001FC0070000000FC006
0000000FC00600000007E00C00000007E00C00000007F01C00000003F01800000003F018
00000001F83000000001F83000000001FC7000000000FC6000000000FC60000000007EC0
000000007EC0000000007FC0000000003F80000000003F80000000001F00000000001F00
000000001F00000000000E00000000000E0000002B287EA630>I<7FFFC00FFFE07FFFC0
0FFFE07FFFC00FFFE003FF0007FE0000FF0003F800007F0003E000003F0003C000003F80
038000001FC0070000000FC00E00000007E00C00000007F01800000003F83800000001F8
7000000000FCE000000000FEC0000000007F80000000003F80000000001F80000000000F
C0000000000FE0000000001FE0000000003BF00000000071F800000000E1FC00000000C0
FE00000001807E00000003803F00000007003F8000000E001FC000000C000FC000001C00
07E00000380007F00000F80003F80001F80003FC000FFC0007FE00FFFF001FFFF8FFFF00
1FFFF8FFFF001FFFF82D277FA630>120 D<FFFFC007FFE0FFFFC007FFE0FFFFC007FFE0
07FC0001FF0003F800007C0001F80000780001F80000700001FC0000700000FC00006000
00FE00006000007E0000C000007E0000C000003F00018000003F00018000003F80038000
001F80030000001F80030000000FC0060000000FC0060000000FE00E00000007E00C0000
0007E00C00000003F01800000003F01800000003F83800000001F83000000001FC300000
0000FC6000000000FC60000000007EC0000000007EC0000000007FC0000000003F800000
00003F80000000001F00000000001F00000000001F00000000000E00000000000E000000
00000C00000000000C00000000001C000000000018000000000018000000000030000000
0000300000000000600000003800600000007C00E0000000FE00C0000000FE01C0000000
FE0180000000FE03000000007C0700000000700E00000000383C000000001FF800000000
07E0000000002B3A7EA630>I<00000000070000000000001F8000000000003F80000000
0000FF800000000001FF800000000007FF00000000000FFC00000000003FE00000000000
FF000000000000F8000000000000C0000000000000000000000000000000000000000000
0000000000000000000000000000000000FFFFFFFFFFFFC0FFFFFFFFFFFFC0FFFFFFFFFF
FFC000FFC00001FFC0007F8000001FC0007F8000000FE0007F80000003E0007F80000003
E0007F80000001E0007F80000000E0007F80000000E0007F80000000E0007F8000000060
007F8000000060007F8000000060007F8000000060007F8000000030007F800030003000
7F8000300030007F8000300030007F8000300030007F8000300000007F8000300000007F
8000700000007F8000700000007F8000F00000007F8001F00000007F8007F00000007FFF
FFF00000007FFFFFF00000007FFFFFF00000007F8007F00000007F8001F00000007F8000
F00000007F8000700000007F8000700000007F8000300000007F8000300000007F800030
0006007F8000300006007F8000300006007F800030000C007F800000000C007F80000000
0C007F800000000C007F800000000C007F800000001C007F8000000018007F8000000018
007F8000000038007F8000000038007F8000000078007F8000000078007F80000000F000
7F80000001F0007F80000003F0007F80000007F0007F8000001FF000FFC00001FFF0FFFF
FFFFFFFFE0FFFFFFFFFFFFE0FFFFFFFFFFFFE0374E7DCD3D>201
D<001C000000003E000000003F000000003F800000003FC00000001FE00000000FF00000
0003F800000000FC000000007E000000001F000000000780000000038000000000800000
0000000000000000000000000000001FF0000000FFFC000003E03F00000F000FC0001C00
07E0001F0003F0003F8001F8003FC000FC003FC000FC003FC000FC003FC0007E001F8000
7E000F00007E000000007E000000007E000000007E000000007E0000001FFE000003FFFE
00001FF87E00007F807E0001FC007E0007F0007E000FE0007E001FC0007E003F80007E00
7F80007E007F00007E007F00007E03FE00007E03FE00007E03FE00007E03FE0000FE03FE
0000FE03FE0001FE037F0001BE037F0003BE033F80071F061FC00E1F8E0FF03C0FFC03FF
F007F8003FC003E0283B7CB92D>224 D<00018000000003C000000007E00000000FF000
00001E780000003C3C000000381C000000700E000000E007000001C0038000038001C000
070000E0000E000070000400002000000000000000000000000000000000001FF0000000
FFFC000003E03F00000F000FC0001C0007E0001F0003F0003F8001F8003FC000FC003FC0
00FC003FC000FC003FC0007E001F80007E000F00007E000000007E000000007E00000000
7E000000007E0000001FFE000003FFFE00001FF87E00007F807E0001FC007E0007F0007E
000FE0007E001FC0007E003F80007E007F80007E007F00007E007F00007E03FE00007E03
FE00007E03FE00007E03FE0000FE03FE0000FE03FE0001FE037F0001BE037F0003BE033F
80071F061FC00E1F8E0FF03C0FFC03FFF007F8003FC003E0283B7CB92D>226
D<000E000000001F000000001F800000001FC00000001FE00000000FF000000007F80000
0001FC000000007E000000003F000000000F8000000003C000000001C000000000400000
00000000000000000000000000000003FC0000001FFF8000007E07E00000F801F00001F0
00F80003E0007C0007C0003E000FC0003F001F80001F001F80001F803F00001F803F0000
0F807F00000F807F00000FC07E00000FC07E00000FC0FE00000FC0FE00000FC0FFFFFFFF
C0FFFFFFFFC0FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000
7E000000007F000000007F000000007F000000003F000000C03F800000C01F800001C00F
C00001800FC000038007E000070003F0000E0001F8001C0000FC003800003F01F000000F
FFC0000001FE0000223B7DB928>232 D<00000E000000001F000000003F000000007F00
000000FF00000001FE00000003FC00000007F00000000FC00000001F800000003E000000
0078000000007000000000400000000000000000000000000000000000000003FC000000
1FFF8000007E07E00000F801F00001F000F80003E0007C0007C0003E000FC0003F001F80
001F001F80001F803F00001F803F00000F807F00000F807F00000FC07E00000FC07E0000
0FC0FE00000FC0FE00000FC0FFFFFFFFC0FFFFFFFFC0FE00000000FE00000000FE000000
00FE00000000FE00000000FE000000007E000000007F000000007F000000007F00000000
3F000000C03F800000C01F800001C00FC00001800FC000038007E000070003F0000E0001
F8001C0000FC003800003F01F000000FFFC0000001FE0000223B7DB928>I<0000C00000
0001E000000003F000000007F80000000F3C0000001E1E0000001C0E0000003807000000
7003800000E001C00001C000E00003800070000700003800020000100000000000000000
00000000000000000003FC0000001FFF8000007E07E00000F801F00001F000F80003E000
7C0007C0003E000FC0003F001F80001F001F80001F803F00001F803F00000F807F00000F
807F00000FC07E00000FC07E00000FC0FE00000FC0FE00000FC0FFFFFFFFC0FFFFFFFFC0
FE00000000FE00000000FE00000000FE00000000FE00000000FE000000007E000000007F
000000007F000000007F000000003F000000C03F800000C01F800001C00FC00001800FC0
00038007E000070003F0000E0001F8001C0000FC003800003F01F000000FFFC0000001FE
0000223B7DB928>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray -187 -413 a Fp(2)-142
-443 y Fo(nde)-39 -413 y Fp(5,)31 b(no)m(v)m(em)m(bre)i(2016)2933
b(Rep)s(\351rage)p -187 -376 4134 4 v Black -187 -210
a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -187 -210 a -187 -210 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -187 -210 a -187 -210 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -187
-210 a 0 TeXcolorgray -187 -210 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -187 -210 a 0 TeXcolorgray
91 x Fn(1)69 b(Co)t(o)l(rdonn\351es)42 b(d'un)j(p)t(oint)f(du)h(plan)p
0 TeXcolorgray -96 96 a Fp(P)m(our)29 b(rep)s(\351rer)g(un)f(p)s(oin)m
(t)h(sur)f(la)g(droite)h Fm(\()p Fl(d)p Fm(\))f Fp(m)m(unie)i(d'un)e
(rep)s(\350re)h Fm(\()p Fl(O)s(;)2330 36 y Fk(\000)-71
b(!)2360 96 y Fl(i)30 b Fm(\))p Fp(,)f(il)f(faut)g(un)g(seul)g(nom)m
(bre)h(:)f(son)g(abscisse.)p 0 TeXcolorgray 0 TeXcolorgray
711 297 a(<Figure)j(:)f(rep)s(\351rage)h(d'un)g(p)s(oin)m(t)g(en)g
(dimension)g(1,)2576 235 y Fk(\000)-22 b(!)2576 297 y
Fl(O)s(A)25 b Fm(=)g Fl(x)2889 237 y Fk(\000)-71 b(!)2919
297 y Fl(i)30 b Fp(>)-187 485 y(P)m(our)24 b(rep)s(\351rer)f(un)g(p)s
(oin)m(t)g(du)g(plan)g Fk(P)29 b Fp(m)m(uni)24 b(d'un)f(rep)s(\350re)g
Fm(\()p Fl(O)s(;)1917 425 y Fk(\000)-71 b(!)1947 485
y Fl(i)30 b(;)2048 425 y Fk(\000)-70 b(!)2073 485 y Fl(j)30
b Fm(\))p Fp(il)22 b(faut)h(deux)f(nom)m(bres)i(:)e(l'abscisse)h(et)f
(l'ordonn\351e.)p 0 TeXcolorgray 0 TeXcolorgray 586 686
a(<Figure)31 b(:)f(rep)s(\351rage)h(d'un)g(p)s(oin)m(t)g(en)g
(dimension)g(2,)2451 624 y Fk(\000)-22 b(!)2451 686 y
Fl(O)s(A)25 b Fm(=)g Fl(x)2764 626 y Fk(\000)-71 b(!)2794
686 y Fl(i)50 b Fm(+)20 b Fl(y)3014 626 y Fk(\000)-71
b(!)3038 686 y Fl(j)30 b Fp(>)1483 799 y(Notation)h Fl(A)p
Fm(\()p Fl(x)2017 813 y Fj(A)2075 799 y Fl(;)15 b(y)2160
813 y Fj(A)2217 799 y Fm(\))p Fp(.)16 912 y(Remarque)31
b(:)f(la)h(corresp)s(ondance)g(en)m(tre)h(un)e(p)s(oin)m(t)h(et)g(son)f
(abscisse)g(est)g(une)h(fonction,)g(de)g(m\352me)g(que)f(la)941
1025 y(corresp)s(ondance)h(en)m(tre)h(un)f(p)s(oin)m(t)g(et)f(son)g
(ordonn\351e.)p 0 TeXcolorgray -187 1212 a Fi(Exercice)36
b(1.)p 0 TeXcolorgray 45 w Fp(1,)30 b(2,)h(7)f(p.)h(166)p
0 TeXcolorgray -187 1499 a Fn(2)69 b(Co)t(o)l(rdonn\351es)42
b(d'un)j(vecteur)p 0 TeXcolorgray 0 TeXcolorgray -187
1705 a Fh(2.1)57 b(D\351\034nition)p 0 TeXcolorgray -187
1835 a Fi(D\351\034nition)34 b(1)h(\()p Fg(et)i(th\351)-5
b(or)g(\350me)37 b(admis)7 b Fi(\))p -187 1877 1489 5
v -137 2283 5 407 v -96 2006 a Ff(Soit)92 1967 y Fk(\000)-71
b(!)114 2006 y Fl(v)58 b Ff(un)33 b(v)m(ecteur)h(du)f(plan)h(m)m(uni)g
(du)f(rep)s(\350re)h Fm(\()p Fl(O)s(;)1793 1946 y Fk(\000)-71
b(!)1823 2006 y Fl(i)30 b(;)1924 1946 y Fk(\000)-70 b(!)1949
2006 y Fl(j)30 b Fm(\))p Ff(.)j(Alors)g(il)g(existe)f(un)i(unique)f
(couple)h(de)f(r\351els)g Fm(\()p Fl(x;)15 b(y)s Fm(\))-96
2130 y Ff(tel)27 b(que)196 2091 y Fk(\000)-71 b(!)218
2130 y Fl(v)50 b Fm(=)25 b Fl(x)460 2070 y Fk(\000)-71
b(!)490 2130 y Fl(i)44 b Fm(+)14 b Fl(y)698 2070 y Fk(\000)-71
b(!)721 2130 y Fl(j)30 b Ff(.)d(<v)m(o)s(cabulaire)i(co)s
(ordonn\351es,)f(abscisse)f(ordonn\351e)h(d'un)g(v)m(ecteur>.)g(On)g
(note)f(:)3645 2091 y Fk(\000)-71 b(!)3667 2130 y Fl(v)25
b Fm(\()p Fl(x;)15 b(y)s Fm(\))-96 2243 y Ff(<ou)31 b(en)f(colonne>.)p
3983 2283 V -137 2288 4126 5 v 0 TeXcolorgray -187 2500
a Fi(Exercice)36 b(2.)p 0 TeXcolorgray 45 w Fp(21,)31
b(22,)f(19)h(p.)f(212)p 0 TeXcolorgray -187 2744 a Fh(2.2)57
b(Calcul)p 0 TeXcolorgray -187 2874 a Fi(Th\351or\350me)35
b(1)p -187 2915 540 5 v -137 3106 5 191 v -96 3047 a
Ff(Soit)c Fl(A)f Ff(et)g Fl(B)35 b Ff(deux)c(p)s(oin)m(ts)f(du)h(plan)g
(m)m(uni)g(du)g(rep)s(\350re)f Fm(\()p Fl(O)s(;)1998
2987 y Fk(\000)-70 b(!)2029 3047 y Fl(i)30 b(;)2130 2987
y Fk(\000)-71 b(!)2155 3047 y Fl(j)29 b Fm(\))p Ff(.)i(Alors)2551
2985 y Fk(\000)-46 b(\000)h(!)2551 3047 y Fl(AB)5 b Fm(\()p
Fl(x)2780 3061 y Fj(B)2861 3047 y Fk(\000)20 b Fl(x)3004
3061 y Fj(A)3061 3047 y Fl(;)15 b(y)3146 3061 y Fj(B)3227
3047 y Fk(\000)k Fl(y)3362 3061 y Fj(A)3419 3047 y Fm(\))p
Ff(.)p 0 TeXcolorgray -187 3318 a Fi(Remarque)35 b(1.)p
0 TeXcolorgray 0 TeXcolorgray 157 w Fp(1.)p 0 TeXcolorgray
45 w(Le)30 b(v)m(ecteur)1107 3256 y Fk(\000)-45 b(\000)f(!)1107
3318 y Fl(AB)34 b Fp(n'est)c(pas)f(\351gal)h(au)f(v)m(ecteur)2278
3256 y Fk(\000)-45 b(\000)f(!)2278 3318 y Fl(B)5 b(A)p
Fp(,)29 b(donc)h(la)g(form)m(ule)g(n'est)g(pas)f(sym\351trique.)p
0 TeXcolorgray -75 3462 a(2.)p 0 TeXcolorgray 46 w(<est-ce)i
(d\351j\340)f(conn)m(u)i(en)e(dimension)i(1)15 b(?)30
b(\311v)m(olution)i(=)e(V)-8 b(aleur)31 b(\034nale)g(-)g(V)-8
b(aleur)31 b(initiale>.)p 0 TeXcolorgray -75 3615 a(3.)p
0 TeXcolorgray 46 w(mo)m(y)m(en)g(mn\351motec)m(hnique)i(:)e
Fl(A)20 b Fm(+)1252 3553 y Fk(\000)-46 b(\000)h(!)1252
3615 y Fl(AB)30 b Fm(=)25 b Fl(B)30 b Fk(\()-15 b(\))1806
3553 y(\000)-46 b(\000)g(!)1806 3615 y Fl(AB)29 b Fm(=)c
Fl(B)g Fk(\000)20 b Fl(A)p Fp(.)p 0 TeXcolorgray -187
3828 a Fe(D\351monstra)-8 b(tion)38 b(:)p 0 TeXcolorgray
0 TeXcolorgray -187 4115 a Fi(Exercice)e(3.)p 0 TeXcolorgray
45 w Fp(24,)31 b(25,)f(26)h(p.)f(212)p 0 TeXcolorgray
-187 4358 a Fh(2.3)57 b(Co)s(o)m(rdonn\351es)35 b(et)j(op)s
(\351rations)f(sur)g(les)f(vecteurs)p 0 TeXcolorgray
-187 4507 a Fi(Th\351or\350me)f(2)p -187 4549 540 5 v
-137 4855 5 307 v -96 4688 a Ff(Soit)88 4649 y Fk(\000)-71
b(!)107 4688 y Fl(u)20 b Fm(\()p Fl(x;)15 b(y)s Fm(\))29
b Ff(et)521 4618 y Fk(\000)-26 b(\000)-20 b(\000)f(\000)h(\000)-26
b(!)521 4688 y Fl(u)573 4655 y Fd(0)596 4688 y Fm(\()p
Fl(x)683 4655 y Fd(0)707 4688 y Fl(;)15 b(y)795 4655
y Fd(0)819 4688 y Fm(\))28 b Ff(deux)h(v)m(ecteurs)g(du)f(plan)h(m)m
(uni)h(d'un)f(rep)s(\350re)g Fm(\()p Fl(O)s(;)2626 4628
y Fk(\000)-71 b(!)2656 4688 y Fl(i)30 b(;)2757 4628 y
Fk(\000)-71 b(!)2782 4688 y Fl(j)29 b Fm(\))p Ff(,)g(et)g
Fl(k)i Ff(un)e(r\351el.)f(Alors)h(<co)s(or-)-96 4801
y(donn\351es)i(de)f(u+u',)h(ku>.)p 0 TeXcolorgray -187
5067 a Fi(Exercice)36 b(4.)p 0 TeXcolorgray 45 w Fp(27)30
b(p.)h(213,)g(43)f(et)h(44)f(p.)h(214)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray -187
-413 a Fp(2)-142 -443 y Fo(nde)-39 -413 y Fp(5,)31 b(no)m(v)m(em)m(bre)
i(2016)2933 b(Rep)s(\351rage)p -187 -376 4134 4 v 0 TeXcolorgray
0 TeXcolorgray -187 -119 a Fn(3)69 b(Applications)p 0
TeXcolorgray 0 TeXcolorgray -187 87 a Fh(3.1)57 b(P)m(a)m
(rall\351lisme)p 0 TeXcolorgray -187 218 a Fi(Th\351or\350me)35
b(3)p -187 259 540 5 v -137 524 5 266 v -96 358 a Ff(Deux)42
b(v)m(ecteurs)i(du)f(plan)g(m)m(uni)h(d'un)f(rep)s(\350re)g(son)m(t)h
(colin\351aires)f(si)g(et)g(seulemen)m(t)h(si)e(leurs)h(co)s
(ordonn\351es)h(son)m(t)-96 471 y(prop)s(ortionnelles.)p
0 TeXcolorgray -187 698 a Fi(Exercice)36 b(5.)p 0 TeXcolorgray
45 w Fp(68,)31 b(70)f(p.)h(216,)f(102)h(et)g(103)f(p.)h(120)p
0 TeXcolorgray -187 935 a Fh(3.2)57 b(Co)s(o)m(rdonn\351es)35
b(du)i(milieu)e(d'un)i(segment)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1264 1107 a Fp(<Figure)32 b(:)e(milieu)h(d'un)g(semen)m
(t>)-187 1256 y Fi(Th\351or\350me)k(4)p -187 1298 540
5 v -137 1829 5 532 v -96 1402 a Ff(Soit)28 b Fl(A)f
Ff(et)h Fl(B)k Ff(deux)27 b(p)s(oin)m(ts)h(du)g(plan)g(m)m(uni)g(d'un)g
(rep)s(\350re.)g(Le)g(milieu)h Fl(M)37 b Ff(du)28 b(segmen)m(t)g
Fm([)p Fl(AB)5 b Fm(])28 b Ff(a)f(p)s(our)h(co)s(ordonn\351es)g(:)1312
1639 y Fl(x)1364 1653 y Fj(M)1468 1639 y Fm(=)1574 1577
y Fl(x)1626 1591 y Fj(A)1703 1577 y Fm(+)20 b Fl(x)1846
1591 y Fj(B)p 1574 1618 333 4 v 1717 1701 a Fm(2)1916
1639 y Fl(;)15 b(y)2001 1653 y Fj(M)2106 1639 y Fm(=)2212
1577 y Fl(y)2257 1591 y Fj(A)2333 1577 y Fm(+)20 b Fl(y)2469
1591 y Fj(B)p 2212 1618 318 4 v 2348 1701 a Fm(2)p 0
TeXcolorgray -187 2002 a Fi(Remarque)35 b(2.)p 0 TeXcolorgray
45 w Fp(le)30 b(milieu)h(de)g Fm([)p Fl(AB)5 b Fm(])30
b Fp(est)h(\351gal)f(au)h(milieu)g(de)g Fm([)p Fl(B)5
b(A)p Fm(])p Fp(,)30 b(donc)h(les)f(form)m(ules)h(son)m(t)g
(sym\351triques)f(:)1464 2139 y Fl(x)1516 2153 y Fj(A)1594
2139 y Fm(+)20 b Fl(x)1737 2153 y Fj(B)p 1464 2179 333
4 v 1608 2263 a Fm(2)1832 2200 y(=)1938 2139 y Fl(x)1990
2153 y Fj(B)2071 2139 y Fm(+)g Fl(x)2214 2153 y Fj(A)p
1938 2179 V 2082 2263 a Fm(2)2281 2200 y Fl(:)p 0 TeXcolorgray
-187 2394 a Fe(D\351monstra)-8 b(tion)38 b(:)p 0 TeXcolorgray
78 w Fp(Soit)31 b Fl(C)37 b Fp(le)30 b(p)s(oin)m(t)h(tel)f(que)h
Fl(O)s(AC)7 b(B)34 b Fp(soit)c(un)g(parall\351logramme,)j(alors)e
Fl(M)40 b Fp(est)30 b(aussi)g(le)g(milieu)-187 2507 y(de)h
Fm([)p Fl(O)s(C)7 b Fm(])p Fp(,)30 b(donc)h(:)1181 2596
y Fk(\000)-31 b(\000)f(!)1181 2658 y Fl(O)s(M)35 b Fm(=)1482
2597 y(1)p 1482 2637 46 4 v 1482 2721 a(2)1538 2596 y
Fk(\000)-42 b(\000)g(!)1538 2658 y Fl(O)s(D)28 b Fm(=)1818
2597 y(1)p 1818 2637 V 1818 2721 a(2)1874 2658 y(\()1909
2596 y Fk(\000)-22 b(!)1909 2658 y Fl(O)s(A)20 b Fm(+)2160
2596 y Fk(\000)-43 b(\000)f(!)2160 2658 y Fl(O)s(B)5
b Fm(\))25 b(=)g Fl(:::)3877 2701 y Fc(\003)p 0 TeXcolorgray
-187 2917 a Fi(Exercice)36 b(6.)p 0 TeXcolorgray 45 w
Fp(35,)31 b(44)f(p.)h(168)f(50)h(p.)f(169)p 0 TeXcolorgray
-187 3154 a Fh(3.3)57 b(Calculs)35 b(de)i(distances)e(dans)i(le)g(plan)
e(muni)h(d'un)h(rep)s(\350re)g(o)m(rthono)m(rm\351)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1398 3326
a Fp(<Figure)31 b(:)g(distance)g(AB>)-187 3481 y Fi(Th\351or\350me)k(5)
g(\()p Fg(A)-5 b(dmis,)38 b(c)-5 b(ons\351)g(quenc)g(e)36
b(du)h(th\351)-5 b(or)g(\350me)37 b(de)g(Pythagor)-5
b(e)8 b Fi(\))p -187 3522 2776 5 v -137 3984 5 462 v
-96 3621 a Ff(Soit)31 b Fl(A)f Ff(et)g Fl(B)35 b Ff(deux)c(p)s(oin)m
(ts)f(du)h(plan)g(m)m(uni)g(d'un)g(rep)s(\350re)g(orthonorm\351.)h
(Alors)e(on)h(a)f(:)1081 3834 y Fl(AB)g Fm(=)25 b Fk(k)1389
3771 y(\000)-45 b(\000)f(!)1389 3834 y Fl(AB)5 b Fk(k)25
b Fm(=)1697 3751 y Fb(p)p 1788 3751 982 4 v 83 x Fm(\()p
Fl(x)1875 3848 y Fj(B)1956 3834 y Fk(\000)20 b Fl(x)2099
3848 y Fj(A)2156 3834 y Fm(\))2191 3807 y Fa(2)2251 3834
y Fm(+)g(\()p Fl(y)2422 3848 y Fj(B)2503 3834 y Fk(\000)g
Fl(y)2639 3848 y Fj(A)2696 3834 y Fm(\))2731 3807 y Fa(2)p
0 TeXcolorgray -187 4157 a Fi(Remarque)35 b(3.)p 0 TeXcolorgray
45 w Fp(La)k(distance)g(AB)f(est)g(\351gale)h(\340)f(la)g(distance)h
(BA,)f(donc)h(la)g(form)m(ule)g(est)f(sym\351trique)h(\(gr\342ce)g(aux)
-187 4270 y(carr\351s\))31 b(:)747 4301 y Fb(p)p 838
4301 V 82 x Fm(\()p Fl(x)925 4397 y Fj(B)1006 4383 y
Fk(\000)20 b Fl(x)1149 4397 y Fj(A)1206 4383 y Fm(\))1241
4357 y Fa(2)1301 4383 y Fm(+)g(\()p Fl(y)1472 4397 y
Fj(B)1552 4383 y Fk(\000)g Fl(y)1688 4397 y Fj(A)1745
4383 y Fm(\))1780 4357 y Fa(2)1845 4383 y Fm(=)1941 4301
y Fb(p)p 2032 4301 V 82 x Fm(\()p Fl(x)2119 4397 y Fj(A)2196
4383 y Fk(\000)g Fl(x)2339 4397 y Fj(B)2400 4383 y Fm(\))2435
4357 y Fa(2)2495 4383 y Fm(+)g(\()p Fl(y)2666 4397 y
Fj(A)2743 4383 y Fk(\000)g Fl(y)2879 4397 y Fj(B)2939
4383 y Fm(\))2974 4357 y Fa(2)p 0 TeXcolorgray -187 4557
a Fi(Exemple)35 b(1.)p 0 TeXcolorgray 45 w Fp(On)c(donne,)g(dans)g(un)f
(rep)s(\350re)h(orthonorm\351,)h Fl(A)p Fm(\(2)p Fl(;)15
b Fk(\000)p Fm(1\))32 b Fp(et)f Fl(B)5 b Fm(\(5)p Fl(;)15
b Fk(\000)p Fm(5\))p Fp(.)31 b(Calculer)h Fl(AB)5 b Fp(.)p
0 TeXcolorgray -187 4731 a Fi(Exercice)36 b(7.)p 0 TeXcolorgray
45 w Fp(13)30 b(p.)h(167,)g(21)f(p.)h(167,)g(23)f(p.)h(167,)f(28)h(p.)g
(168)p 0 TeXcolorgray -187 5011 a Fn(4)69 b(\311quation)44
b(d'un)h(ensemble)e(de)i(p)t(oints)p 0 TeXcolorgray 0
TeXcolorgray -187 5214 a Fi(Exemple)35 b(2.)p 0 TeXcolorgray
45 w Fp(L'ensem)m(ble)e Fl(E)899 5228 y Fa(1)968 5214
y Fp(d'\351quation)f Fl(x)25 b Fm(=)g(3)p 0 TeXcolorgray
-187 5387 a Fi(Exemple)35 b(3.)p 0 TeXcolorgray 45 w
Fp(L'ensem)m(ble)e Fl(E)899 5401 y Fa(2)968 5387 y Fp(d'\351quation)f
Fl(y)c Fm(=)d Fk(\000)p Fm(3)p 0 TeXcolorgray -187 5561
a Fi(Exemple)35 b(4.)p 0 TeXcolorgray 45 w Fp(L'ensem)m(ble)e
Fl(E)899 5575 y Fa(3)968 5561 y Fp(d'\351quation)f Fl(x)1465
5528 y Fa(2)1524 5561 y Fm(+)20 b Fl(y)1663 5528 y Fa(2)1728
5561 y Fm(=)25 b(1)p 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
